    TEST(gbcemu, opcode_89) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 89 0000
        gbc.setState(0x84da, 0x6980, 0x4660, 0x66f7, 0x3bfe, 0x1f31, 0x0, 0x0);
        gbc.writeMem(0x84da, { 0x89 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x6980, gbc.sp());
        EXPECT(0x84db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x84da));
        // 89 0001
        gbc.setState(0x73d6, 0x5b1e, 0x1d20, 0xf046, 0xa07e, 0xf630, 0x1, 0x0);
        gbc.writeMem(0x73d6, { 0x89 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x5b1e, gbc.sp());
        EXPECT(0x73d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0002
        gbc.setState(0xe9ce, 0x24e0, 0x9170, 0x9235, 0xc9c7, 0x1afe, 0x0, 0x0);
        gbc.writeMem(0xe9ce, { 0x89 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x24e0, gbc.sp());
        EXPECT(0xe9cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xe9ce));
        // 89 0003
        gbc.setState(0xe5d8, 0x531f, 0xcb10, 0x953a, 0x44f9, 0x598, 0x0, 0x1);
        gbc.writeMem(0xe5d8, { 0x89 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x531f, gbc.sp());
        EXPECT(0xe5d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xe5d8));
        // 89 0004
        gbc.setState(0xcada, 0xe4f3, 0xb7f0, 0xb838, 0x6e5e, 0x6de7, 0x1, 0x0);
        gbc.writeMem(0xcada, { 0x89 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xe4f3, gbc.sp());
        EXPECT(0xcadb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xcada));
        // 89 0005
        gbc.setState(0x59ba, 0x5c69, 0x54f0, 0x9c60, 0x279d, 0xcd08, 0x0, 0x1);
        gbc.writeMem(0x59ba, { 0x89 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x5c69, gbc.sp());
        EXPECT(0x59bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0006
        gbc.setState(0xb6ac, 0x751f, 0x42c0, 0x53e5, 0xdb5e, 0x9d02, 0x1, 0x1);
        gbc.writeMem(0xb6ac, { 0x89 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x751f, gbc.sp());
        EXPECT(0xb6ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xb6ac));
        // 89 0007
        gbc.setState(0x5825, 0xd80c, 0x37f0, 0x2ae8, 0x58f, 0x7e81, 0x1, 0x0);
        gbc.writeMem(0x5825, { 0x89 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xd80c, gbc.sp());
        EXPECT(0x5826, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0008
        gbc.setState(0x31e4, 0x129e, 0x6c30, 0xff14, 0x4222, 0x1196, 0x0, 0x0);
        gbc.writeMem(0x31e4, { 0x89 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x129e, gbc.sp());
        EXPECT(0x31e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0009
        gbc.setState(0xdfa3, 0xb61c, 0xfa70, 0x80f8, 0x582c, 0x644d, 0x0, 0x1);
        gbc.writeMem(0xdfa3, { 0x89 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xb61c, gbc.sp());
        EXPECT(0xdfa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xdfa3));
        // 89 000A
        gbc.setState(0x88ab, 0x6207, 0x12f0, 0x8654, 0xdf8f, 0x655f, 0x0, 0x0);
        gbc.writeMem(0x88ab, { 0x89 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x6207, gbc.sp());
        EXPECT(0x88ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x88ab));
        // 89 000B
        gbc.setState(0x5562, 0x83e4, 0xaaa0, 0x53c9, 0xfc4b, 0x1b97, 0x0, 0x0);
        gbc.writeMem(0x5562, { 0x89 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x83e4, gbc.sp());
        EXPECT(0x5563, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 000C
        gbc.setState(0x9e97, 0x6afb, 0x7da0, 0x492d, 0xae55, 0x4408, 0x1, 0x0);
        gbc.writeMem(0x9e97, { 0x89 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x6afb, gbc.sp());
        EXPECT(0x9e98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x9e97));
        // 89 000D
        gbc.setState(0x9046, 0x49ca, 0x83a0, 0x4000, 0x35ce, 0x46f6, 0x1, 0x1);
        gbc.writeMem(0x9046, { 0x89 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x49ca, gbc.sp());
        EXPECT(0x9047, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x9046));
        // 89 000E
        gbc.setState(0x27e7, 0x2cb6, 0xcf0, 0x37d5, 0x47ca, 0x257f, 0x0, 0x1);
        gbc.writeMem(0x27e7, { 0x89 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x2cb6, gbc.sp());
        EXPECT(0x27e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 000F
        gbc.setState(0xb403, 0x752a, 0xa3f0, 0x9018, 0xff67, 0xd908, 0x0, 0x1);
        gbc.writeMem(0xb403, { 0x89 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x752a, gbc.sp());
        EXPECT(0xb404, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xb403));
        // 89 0010
        gbc.setState(0x7aaa, 0xfb3e, 0xee20, 0x1933, 0xb00a, 0xe350, 0x0, 0x1);
        gbc.writeMem(0x7aaa, { 0x89 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xfb3e, gbc.sp());
        EXPECT(0x7aab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0011
        gbc.setState(0xdb6d, 0x2018, 0x1fc0, 0xbfa4, 0x655e, 0xf78f, 0x0, 0x1);
        gbc.writeMem(0xdb6d, { 0x89 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x2018, gbc.sp());
        EXPECT(0xdb6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xdb6d));
        // 89 0012
        gbc.setState(0x265c, 0x78dd, 0x4ae0, 0x8e8c, 0xa8bc, 0xdb08, 0x1, 0x1);
        gbc.writeMem(0x265c, { 0x89 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x78dd, gbc.sp());
        EXPECT(0x265d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0013
        gbc.setState(0x3b23, 0xd44d, 0xd420, 0x5b7c, 0x909e, 0xc0d1, 0x1, 0x1);
        gbc.writeMem(0x3b23, { 0x89 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xd44d, gbc.sp());
        EXPECT(0x3b24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0014
        gbc.setState(0x4230, 0xaaa8, 0x2370, 0x48a2, 0x25e4, 0x48b2, 0x0, 0x1);
        gbc.writeMem(0x4230, { 0x89 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xaaa8, gbc.sp());
        EXPECT(0x4231, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0015
        gbc.setState(0x8636, 0xf287, 0x7f70, 0x223c, 0xcdb2, 0xabb5, 0x0, 0x0);
        gbc.writeMem(0x8636, { 0x89 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xf287, gbc.sp());
        EXPECT(0x8637, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x8636));
        // 89 0016
        gbc.setState(0x7f78, 0x4dfa, 0xcc40, 0x20ad, 0x4df8, 0xff3f, 0x0, 0x0);
        gbc.writeMem(0x7f78, { 0x89 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x4dfa, gbc.sp());
        EXPECT(0x7f79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0017
        gbc.setState(0x271b, 0x7e94, 0x6d40, 0xe43a, 0xffb0, 0x347c, 0x1, 0x0);
        gbc.writeMem(0x271b, { 0x89 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x7e94, gbc.sp());
        EXPECT(0x271c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0018
        gbc.setState(0xc9bd, 0xa88a, 0x29c0, 0x735b, 0x9747, 0xa6f, 0x1, 0x0);
        gbc.writeMem(0xc9bd, { 0x89 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa88a, gbc.sp());
        EXPECT(0xc9be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xc9bd));
        // 89 001A
        gbc.setState(0x7364, 0x847c, 0xb470, 0xea32, 0x111b, 0x15a9, 0x1, 0x0);
        gbc.writeMem(0x7364, { 0x89 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x847c, gbc.sp());
        EXPECT(0x7365, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 001B
        gbc.setState(0x3a7b, 0x7f67, 0x8d00, 0xd48c, 0x6bfc, 0xf921, 0x0, 0x0);
        gbc.writeMem(0x3a7b, { 0x89 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x7f67, gbc.sp());
        EXPECT(0x3a7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 001C
        gbc.setState(0xd3ce, 0xe727, 0x4fe0, 0x188e, 0x3bb1, 0x71, 0x0, 0x0);
        gbc.writeMem(0xd3ce, { 0x89 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xe727, gbc.sp());
        EXPECT(0xd3cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xd3ce));
        // 89 001D
        gbc.setState(0x10e7, 0xab34, 0x1360, 0xb92c, 0xe26b, 0x96d0, 0x0, 0x1);
        gbc.writeMem(0x10e7, { 0x89 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xab34, gbc.sp());
        EXPECT(0x10e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 001E
        gbc.setState(0xc710, 0x349f, 0x1da0, 0x45c5, 0xf5c2, 0xd45b, 0x1, 0x1);
        gbc.writeMem(0xc710, { 0x89 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x349f, gbc.sp());
        EXPECT(0xc711, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xc710));
        // 89 001F
        gbc.setState(0x28cc, 0x5789, 0x4b40, 0x840b, 0x9b53, 0xa894, 0x1, 0x0);
        gbc.writeMem(0x28cc, { 0x89 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x5789, gbc.sp());
        EXPECT(0x28cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0021
        gbc.setState(0xc2b7, 0xe33b, 0xdd30, 0x8412, 0xd312, 0x8d2c, 0x0, 0x0);
        gbc.writeMem(0xc2b7, { 0x89 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xe33b, gbc.sp());
        EXPECT(0xc2b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xc2b7));
        // 89 0022
        gbc.setState(0x2c65, 0x48a7, 0x2990, 0x1185, 0xc604, 0xf4d7, 0x1, 0x0);
        gbc.writeMem(0x2c65, { 0x89 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x48a7, gbc.sp());
        EXPECT(0x2c66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0023
        gbc.setState(0x1d5a, 0xabde, 0x990, 0x6547, 0xcfd5, 0x1c5e, 0x1, 0x0);
        gbc.writeMem(0x1d5a, { 0x89 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xabde, gbc.sp());
        EXPECT(0x1d5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0025
        gbc.setState(0xb6ea, 0xc5fa, 0xcc60, 0x99f8, 0x7daa, 0x50cd, 0x0, 0x1);
        gbc.writeMem(0xb6ea, { 0x89 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xc5fa, gbc.sp());
        EXPECT(0xb6eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xb6ea));
        // 89 0026
        gbc.setState(0xbb5e, 0xc924, 0x39c0, 0x3d7, 0xa420, 0xb17f, 0x0, 0x0);
        gbc.writeMem(0xbb5e, { 0x89 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xc924, gbc.sp());
        EXPECT(0xbb5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xbb5e));
        // 89 0027
        gbc.setState(0xc8f3, 0xe586, 0x38d0, 0xc4c, 0x207d, 0x12fc, 0x1, 0x1);
        gbc.writeMem(0xc8f3, { 0x89 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xe586, gbc.sp());
        EXPECT(0xc8f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xc8f3));
        // 89 0028
        gbc.setState(0xb5b0, 0x88fb, 0xb270, 0x6958, 0x918d, 0xb0d3, 0x1, 0x1);
        gbc.writeMem(0xb5b0, { 0x89 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x88fb, gbc.sp());
        EXPECT(0xb5b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xb5b0));
        // 89 0029
        gbc.setState(0x3e14, 0x45f0, 0x7da0, 0x91aa, 0xab43, 0x7208, 0x1, 0x1);
        gbc.writeMem(0x3e14, { 0x89 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x45f0, gbc.sp());
        EXPECT(0x3e15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 002A
        gbc.setState(0xcc69, 0x3d62, 0xd7e0, 0x4d6a, 0xfcab, 0x46d1, 0x1, 0x1);
        gbc.writeMem(0xcc69, { 0x89 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x3d62, gbc.sp());
        EXPECT(0xcc6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xcc69));
        // 89 002B
        gbc.setState(0x4841, 0x168a, 0x3e60, 0xe5c9, 0xcc6d, 0xc910, 0x0, 0x1);
        gbc.writeMem(0x4841, { 0x89 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x168a, gbc.sp());
        EXPECT(0x4842, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 002C
        gbc.setState(0x31a4, 0xfaa0, 0xbb10, 0xa869, 0x14c0, 0x46e3, 0x0, 0x1);
        gbc.writeMem(0x31a4, { 0x89 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xfaa0, gbc.sp());
        EXPECT(0x31a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 002D
        gbc.setState(0x8685, 0x2065, 0xbb90, 0x942c, 0x5347, 0xc9bf, 0x0, 0x0);
        gbc.writeMem(0x8685, { 0x89 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x2065, gbc.sp());
        EXPECT(0x8686, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x8685));
        // 89 002E
        gbc.setState(0x3e6, 0xeede, 0x26d0, 0xbf0f, 0xb27f, 0x47ff, 0x1, 0x0);
        gbc.writeMem(0x3e6, { 0x89 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xeede, gbc.sp());
        EXPECT(0x3e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 002F
        gbc.setState(0x9114, 0xb989, 0x22e0, 0xbe6, 0x5f07, 0x621e, 0x1, 0x1);
        gbc.writeMem(0x9114, { 0x89 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xb989, gbc.sp());
        EXPECT(0x9115, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x9114));
        // 89 0031
        gbc.setState(0xa664, 0x6486, 0x5530, 0x1175, 0x9a9a, 0xa318, 0x0, 0x1);
        gbc.writeMem(0xa664, { 0x89 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x6486, gbc.sp());
        EXPECT(0xa665, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xa664));
        // 89 0033
        gbc.setState(0x3073, 0xabe0, 0x3610, 0x6cf5, 0x6bd, 0x4378, 0x0, 0x0);
        gbc.writeMem(0x3073, { 0x89 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xabe0, gbc.sp());
        EXPECT(0x3074, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0034
        gbc.setState(0x5863, 0x5317, 0x8ed0, 0xbde9, 0x72d6, 0x8742, 0x0, 0x1);
        gbc.writeMem(0x5863, { 0x89 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x5317, gbc.sp());
        EXPECT(0x5864, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0035
        gbc.setState(0xa590, 0x5aac, 0xec0, 0x5942, 0xfb34, 0x5d41, 0x1, 0x1);
        gbc.writeMem(0xa590, { 0x89 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x5aac, gbc.sp());
        EXPECT(0xa591, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xa590));
        // 89 0036
        gbc.setState(0x99e4, 0x695d, 0x9f20, 0xd328, 0x5272, 0xc67d, 0x1, 0x0);
        gbc.writeMem(0x99e4, { 0x89 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x695d, gbc.sp());
        EXPECT(0x99e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x99e4));
        // 89 0037
        gbc.setState(0xcbd6, 0x7e5b, 0x8630, 0x63e, 0xfeaf, 0x6f65, 0x0, 0x0);
        gbc.writeMem(0xcbd6, { 0x89 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x7e5b, gbc.sp());
        EXPECT(0xcbd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xcbd6));
        // 89 0038
        gbc.setState(0xe82d, 0x39d1, 0x3700, 0xbe07, 0xde62, 0x3e05, 0x0, 0x1);
        gbc.writeMem(0xe82d, { 0x89 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x39d1, gbc.sp());
        EXPECT(0xe82e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xe82d));
        // 89 0039
        gbc.setState(0x2895, 0xb206, 0x8120, 0xc65c, 0xce81, 0xf9ab, 0x0, 0x0);
        gbc.writeMem(0x2895, { 0x89 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xb206, gbc.sp());
        EXPECT(0x2896, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 003A
        gbc.setState(0x6834, 0x919a, 0xdf40, 0xa7ab, 0xbfac, 0xa563, 0x1, 0x1);
        gbc.writeMem(0x6834, { 0x89 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x919a, gbc.sp());
        EXPECT(0x6835, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 003B
        gbc.setState(0x3bd1, 0x69e2, 0x1a80, 0x7bd6, 0x600c, 0xe2a1, 0x1, 0x0);
        gbc.writeMem(0x3bd1, { 0x89 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x69e2, gbc.sp());
        EXPECT(0x3bd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 003C
        gbc.setState(0xc7, 0xce01, 0xca50, 0xff38, 0xd6b5, 0xb2b3, 0x0, 0x1);
        gbc.writeMem(0xc7, { 0x89 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xce01, gbc.sp());
        EXPECT(0xc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 003D
        gbc.setState(0x42b9, 0x3060, 0x9fd0, 0x7466, 0x1fdb, 0x7bf1, 0x1, 0x0);
        gbc.writeMem(0x42b9, { 0x89 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x3060, gbc.sp());
        EXPECT(0x42ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 003E
        gbc.setState(0xd05, 0xbe4e, 0xcee0, 0xfa5d, 0xb5b0, 0x401, 0x0, 0x0);
        gbc.writeMem(0xd05, { 0x89 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xbe4e, gbc.sp());
        EXPECT(0xd06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 003F
        gbc.setState(0xa55a, 0xc776, 0x4560, 0xae16, 0x1a2b, 0x58cf, 0x1, 0x0);
        gbc.writeMem(0xa55a, { 0x89 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xc776, gbc.sp());
        EXPECT(0xa55b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xa55a));
        // 89 0040
        gbc.setState(0x9bff, 0x24fc, 0x9250, 0xb884, 0x3d86, 0x8318, 0x0, 0x1);
        gbc.writeMem(0x9bff, { 0x89 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x24fc, gbc.sp());
        EXPECT(0x9c00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x9bff));
        // 89 0041
        gbc.setState(0x349e, 0xca9a, 0x4940, 0x2cb8, 0x5176, 0x982c, 0x1, 0x0);
        gbc.writeMem(0x349e, { 0x89 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xca9a, gbc.sp());
        EXPECT(0x349f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0042
        gbc.setState(0xe6ce, 0x4799, 0xfef0, 0xf452, 0x6322, 0x3006, 0x0, 0x1);
        gbc.writeMem(0xe6ce, { 0x89 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x4799, gbc.sp());
        EXPECT(0xe6cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xe6ce));
        // 89 0043
        gbc.setState(0x6e2f, 0x7418, 0x4ea0, 0x59d, 0xc1a0, 0xf8bc, 0x1, 0x0);
        gbc.writeMem(0x6e2f, { 0x89 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x7418, gbc.sp());
        EXPECT(0x6e30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0044
        gbc.setState(0x3b5, 0xb77b, 0xcf20, 0xb339, 0x3388, 0xf998, 0x1, 0x1);
        gbc.writeMem(0x3b5, { 0x89 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xb77b, gbc.sp());
        EXPECT(0x3b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0045
        gbc.setState(0x3d9d, 0xc18b, 0xf80, 0xf8b9, 0x9ce2, 0x81e0, 0x1, 0x1);
        gbc.writeMem(0x3d9d, { 0x89 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xc18b, gbc.sp());
        EXPECT(0x3d9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0046
        gbc.setState(0x1d5, 0x5c96, 0x6530, 0x6c2f, 0x6b9f, 0xa7c, 0x1, 0x1);
        gbc.writeMem(0x1d5, { 0x89 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x5c96, gbc.sp());
        EXPECT(0x1d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0047
        gbc.setState(0x7e42, 0xd7d6, 0x4560, 0x8bc3, 0xd24, 0x683b, 0x0, 0x1);
        gbc.writeMem(0x7e42, { 0x89 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xd7d6, gbc.sp());
        EXPECT(0x7e43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0048
        gbc.setState(0x4ae3, 0x9546, 0xcf50, 0xeaf3, 0xc529, 0x37ad, 0x1, 0x0);
        gbc.writeMem(0x4ae3, { 0x89 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x9546, gbc.sp());
        EXPECT(0x4ae4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0049
        gbc.setState(0xa8e2, 0x5539, 0xc480, 0x4fb0, 0x5699, 0x5059, 0x1, 0x1);
        gbc.writeMem(0xa8e2, { 0x89 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x5539, gbc.sp());
        EXPECT(0xa8e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xa8e2));
        // 89 004B
        gbc.setState(0xd42b, 0xe8e, 0xad60, 0x8a99, 0x15f4, 0x586d, 0x1, 0x0);
        gbc.writeMem(0xd42b, { 0x89 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xe8e, gbc.sp());
        EXPECT(0xd42c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xd42b));
        // 89 004C
        gbc.setState(0xdc8d, 0x3526, 0xc900, 0xe930, 0x53c, 0x1858, 0x1, 0x1);
        gbc.writeMem(0xdc8d, { 0x89 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x3526, gbc.sp());
        EXPECT(0xdc8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xdc8d));
        // 89 004D
        gbc.setState(0x1163, 0xc3ba, 0x2720, 0xda6, 0x9258, 0x3636, 0x0, 0x1);
        gbc.writeMem(0x1163, { 0x89 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xc3ba, gbc.sp());
        EXPECT(0x1164, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 004E
        gbc.setState(0x2d00, 0xbbd6, 0x9450, 0xd1e3, 0x85c0, 0x7f07, 0x0, 0x0);
        gbc.writeMem(0x2d00, { 0x89 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xbbd6, gbc.sp());
        EXPECT(0x2d01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0050
        gbc.setState(0x1450, 0xc510, 0xa990, 0x812f, 0xb3c4, 0x3094, 0x0, 0x0);
        gbc.writeMem(0x1450, { 0x89 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xc510, gbc.sp());
        EXPECT(0x1451, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0051
        gbc.setState(0x7620, 0x562d, 0x5b10, 0x4683, 0xd5eb, 0x9c12, 0x0, 0x0);
        gbc.writeMem(0x7620, { 0x89 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x562d, gbc.sp());
        EXPECT(0x7621, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0052
        gbc.setState(0x87cb, 0x45b5, 0x9c90, 0x2ca0, 0xc998, 0xdbac, 0x0, 0x0);
        gbc.writeMem(0x87cb, { 0x89 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x45b5, gbc.sp());
        EXPECT(0x87cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x87cb));
        // 89 0053
        gbc.setState(0x925a, 0xc920, 0xe810, 0xfb3d, 0xa925, 0x4631, 0x0, 0x0);
        gbc.writeMem(0x925a, { 0x89 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xc920, gbc.sp());
        EXPECT(0x925b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x925a));
        // 89 0054
        gbc.setState(0x3b30, 0x3f9b, 0x66d0, 0x7c8a, 0x1a2c, 0x4cc7, 0x0, 0x0);
        gbc.writeMem(0x3b30, { 0x89 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x3f9b, gbc.sp());
        EXPECT(0x3b31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0056
        gbc.setState(0x307a, 0x5978, 0xbea0, 0x78e9, 0xbf81, 0xc26b, 0x1, 0x0);
        gbc.writeMem(0x307a, { 0x89 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x5978, gbc.sp());
        EXPECT(0x307b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0057
        gbc.setState(0x9236, 0x7824, 0xad40, 0xc9de, 0xcd63, 0x8ce, 0x1, 0x1);
        gbc.writeMem(0x9236, { 0x89 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x7824, gbc.sp());
        EXPECT(0x9237, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x9236));
        // 89 0058
        gbc.setState(0xa8ba, 0x6d68, 0xd240, 0x81ca, 0x2919, 0x31, 0x0, 0x1);
        gbc.writeMem(0xa8ba, { 0x89 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x6d68, gbc.sp());
        EXPECT(0xa8bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xa8ba));
        // 89 0059
        gbc.setState(0x62b9, 0x1704, 0xf100, 0x5d73, 0x5fd7, 0x3e3b, 0x0, 0x0);
        gbc.writeMem(0x62b9, { 0x89 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x1704, gbc.sp());
        EXPECT(0x62ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 005A
        gbc.setState(0xa14a, 0xd250, 0xd0a0, 0xd9b8, 0x4e2d, 0x8796, 0x0, 0x0);
        gbc.writeMem(0xa14a, { 0x89 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xd250, gbc.sp());
        EXPECT(0xa14b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xa14a));
        // 89 005B
        gbc.setState(0x3b04, 0x64ec, 0x4520, 0x40ad, 0xc044, 0x7208, 0x1, 0x1);
        gbc.writeMem(0x3b04, { 0x89 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x64ec, gbc.sp());
        EXPECT(0x3b05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 005C
        gbc.setState(0x3b15, 0x1590, 0x3490, 0xde4f, 0x2c6, 0xb1ae, 0x0, 0x1);
        gbc.writeMem(0x3b15, { 0x89 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x1590, gbc.sp());
        EXPECT(0x3b16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 005D
        gbc.setState(0xd665, 0xf3c2, 0xe4b0, 0xa435, 0x75eb, 0x8385, 0x1, 0x0);
        gbc.writeMem(0xd665, { 0x89 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xf3c2, gbc.sp());
        EXPECT(0xd666, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xd665));
        // 89 005E
        gbc.setState(0xedea, 0x3b0d, 0x8650, 0x4a45, 0xeb3e, 0x8852, 0x1, 0x0);
        gbc.writeMem(0xedea, { 0x89 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x3b0d, gbc.sp());
        EXPECT(0xedeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xedea));
        // 89 005F
        gbc.setState(0x82ed, 0x3865, 0x4f50, 0xbfc1, 0xb19b, 0xa47a, 0x0, 0x1);
        gbc.writeMem(0x82ed, { 0x89 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x3865, gbc.sp());
        EXPECT(0x82ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x82ed));
        // 89 0060
        gbc.setState(0xd061, 0x32dc, 0x25d0, 0xbefd, 0x5094, 0x3951, 0x1, 0x1);
        gbc.writeMem(0xd061, { 0x89 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x32dc, gbc.sp());
        EXPECT(0xd062, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xd061));
        // 89 0061
        gbc.setState(0x66ac, 0xa456, 0xf460, 0x1639, 0xab0a, 0x771, 0x1, 0x0);
        gbc.writeMem(0x66ac, { 0x89 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xa456, gbc.sp());
        EXPECT(0x66ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0062
        gbc.setState(0x936d, 0x7655, 0x6600, 0x93f8, 0x9226, 0xc5f1, 0x1, 0x1);
        gbc.writeMem(0x936d, { 0x89 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x7655, gbc.sp());
        EXPECT(0x936e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x936d));
        // 89 0063
        gbc.setState(0x935d, 0x50f8, 0x1730, 0x9f40, 0x2e60, 0xe69b, 0x1, 0x1);
        gbc.writeMem(0x935d, { 0x89 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x50f8, gbc.sp());
        EXPECT(0x935e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x935d));
        // 89 0064
        gbc.setState(0x35b5, 0xb692, 0xf400, 0x78bf, 0x5932, 0x3a9b, 0x0, 0x1);
        gbc.writeMem(0x35b5, { 0x89 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xb692, gbc.sp());
        EXPECT(0x35b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0065
        gbc.setState(0x48ec, 0x2d81, 0xaa40, 0x386c, 0x1174, 0xe6cf, 0x1, 0x0);
        gbc.writeMem(0x48ec, { 0x89 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x2d81, gbc.sp());
        EXPECT(0x48ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0066
        gbc.setState(0x7139, 0xdf63, 0x29f0, 0x5c79, 0xd5f1, 0xfe60, 0x1, 0x0);
        gbc.writeMem(0x7139, { 0x89 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xdf63, gbc.sp());
        EXPECT(0x713a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0067
        gbc.setState(0xdbf0, 0x6d1e, 0x15b0, 0x7fc5, 0xe418, 0xffc2, 0x1, 0x0);
        gbc.writeMem(0xdbf0, { 0x89 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x6d1e, gbc.sp());
        EXPECT(0xdbf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xdbf0));
        // 89 006A
        gbc.setState(0xe643, 0xa755, 0x1230, 0x3c35, 0x24a, 0xf125, 0x0, 0x1);
        gbc.writeMem(0xe643, { 0x89 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xa755, gbc.sp());
        EXPECT(0xe644, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xe643));
        // 89 006B
        gbc.setState(0x3938, 0x5e91, 0x2fb0, 0xe058, 0xa9ee, 0xc30d, 0x1, 0x1);
        gbc.writeMem(0x3938, { 0x89 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x5e91, gbc.sp());
        EXPECT(0x3939, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 006C
        gbc.setState(0xcf4b, 0x4ea9, 0x4b60, 0xfccb, 0xa37a, 0xb0a0, 0x0, 0x0);
        gbc.writeMem(0xcf4b, { 0x89 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x4ea9, gbc.sp());
        EXPECT(0xcf4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xcf4b));
        // 89 006D
        gbc.setState(0x5985, 0x9928, 0xc0f0, 0x91ac, 0x82df, 0x54ac, 0x1, 0x0);
        gbc.writeMem(0x5985, { 0x89 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x9928, gbc.sp());
        EXPECT(0x5986, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 006E
        gbc.setState(0x87a9, 0xf0d4, 0xaf80, 0x153c, 0xa88d, 0x3905, 0x1, 0x0);
        gbc.writeMem(0x87a9, { 0x89 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xf0d4, gbc.sp());
        EXPECT(0x87aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x87a9));
        // 89 006F
        gbc.setState(0x1f74, 0x2263, 0x1fc0, 0x41ab, 0xcf6f, 0x6a6b, 0x1, 0x0);
        gbc.writeMem(0x1f74, { 0x89 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x2263, gbc.sp());
        EXPECT(0x1f75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0070
        gbc.setState(0xc07c, 0x2800, 0xb370, 0x8134, 0x3f38, 0xae3d, 0x0, 0x0);
        gbc.writeMem(0xc07c, { 0x89 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x2800, gbc.sp());
        EXPECT(0xc07d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xc07c));
        // 89 0071
        gbc.setState(0xcdf4, 0x695d, 0xf50, 0x390f, 0xe636, 0xc033, 0x0, 0x1);
        gbc.writeMem(0xcdf4, { 0x89 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x695d, gbc.sp());
        EXPECT(0xcdf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xcdf4));
        // 89 0072
        gbc.setState(0x73b6, 0x94b0, 0xed00, 0xed3a, 0x11b5, 0xc7e9, 0x0, 0x0);
        gbc.writeMem(0x73b6, { 0x89 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x94b0, gbc.sp());
        EXPECT(0x73b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0074
        gbc.setState(0x71b, 0x65fb, 0xf960, 0xa17b, 0x1da0, 0x3a9c, 0x0, 0x1);
        gbc.writeMem(0x71b, { 0x89 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x65fb, gbc.sp());
        EXPECT(0x71c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0075
        gbc.setState(0xcb12, 0x12cf, 0x59b0, 0xdb95, 0x26ee, 0x79ec, 0x1, 0x1);
        gbc.writeMem(0xcb12, { 0x89 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x12cf, gbc.sp());
        EXPECT(0xcb13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xcb12));
        // 89 0076
        gbc.setState(0xaf03, 0x51f8, 0x3e40, 0xe601, 0xa5fb, 0x5e4e, 0x1, 0x0);
        gbc.writeMem(0xaf03, { 0x89 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x51f8, gbc.sp());
        EXPECT(0xaf04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xaf03));
        // 89 0077
        gbc.setState(0x5493, 0x2993, 0x5cb0, 0xb486, 0xeab7, 0x5488, 0x0, 0x1);
        gbc.writeMem(0x5493, { 0x89 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x2993, gbc.sp());
        EXPECT(0x5494, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0078
        gbc.setState(0x9548, 0x3bb9, 0x7450, 0x1764, 0x2eb9, 0x4e39, 0x0, 0x1);
        gbc.writeMem(0x9548, { 0x89 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x3bb9, gbc.sp());
        EXPECT(0x9549, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x9548));
        // 89 0079
        gbc.setState(0x3dfe, 0xfcf, 0x2cd0, 0x4fbb, 0xed5f, 0x88f, 0x1, 0x1);
        gbc.writeMem(0x3dfe, { 0x89 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xfcf, gbc.sp());
        EXPECT(0x3dff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 007A
        gbc.setState(0xbf98, 0x556, 0x3350, 0x5c1b, 0x86b1, 0xc44, 0x1, 0x0);
        gbc.writeMem(0xbf98, { 0x89 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x556, gbc.sp());
        EXPECT(0xbf99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xbf98));
        // 89 007B
        gbc.setState(0x26f1, 0x4a42, 0x5c60, 0xf59c, 0xadb7, 0xcfbf, 0x1, 0x0);
        gbc.writeMem(0x26f1, { 0x89 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x4a42, gbc.sp());
        EXPECT(0x26f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 007C
        gbc.setState(0x83ac, 0x7b63, 0xe4c0, 0xb341, 0x1bb6, 0x114a, 0x0, 0x1);
        gbc.writeMem(0x83ac, { 0x89 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x7b63, gbc.sp());
        EXPECT(0x83ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x83ac));
        // 89 007D
        gbc.setState(0x570e, 0xa159, 0x7060, 0xdd88, 0x5c18, 0x3f9, 0x0, 0x1);
        gbc.writeMem(0x570e, { 0x89 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xa159, gbc.sp());
        EXPECT(0x570f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 007E
        gbc.setState(0x8cf6, 0xd8a9, 0x1de0, 0xab3d, 0xa4af, 0x1be2, 0x0, 0x1);
        gbc.writeMem(0x8cf6, { 0x89 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xd8a9, gbc.sp());
        EXPECT(0x8cf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x8cf6));
        // 89 007F
        gbc.setState(0x37e4, 0x3d14, 0x9020, 0x8140, 0x937d, 0x5652, 0x0, 0x0);
        gbc.writeMem(0x37e4, { 0x89 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x3d14, gbc.sp());
        EXPECT(0x37e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0080
        gbc.setState(0xdc2c, 0x6c8, 0xda20, 0xa1a8, 0x45ea, 0x509e, 0x0, 0x1);
        gbc.writeMem(0xdc2c, { 0x89 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x6c8, gbc.sp());
        EXPECT(0xdc2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xdc2c));
        // 89 0081
        gbc.setState(0x500, 0x1efb, 0xdad0, 0xf19b, 0xee0, 0x37c8, 0x0, 0x0);
        gbc.writeMem(0x500, { 0x89 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x1efb, gbc.sp());
        EXPECT(0x501, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0082
        gbc.setState(0xcd2f, 0xd506, 0x2b70, 0xe8f8, 0xe288, 0x92db, 0x1, 0x1);
        gbc.writeMem(0xcd2f, { 0x89 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xd506, gbc.sp());
        EXPECT(0xcd30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xcd2f));
        // 89 0083
        gbc.setState(0x259f, 0xc3df, 0x9d30, 0x8a5e, 0x9642, 0x4571, 0x1, 0x0);
        gbc.writeMem(0x259f, { 0x89 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xc3df, gbc.sp());
        EXPECT(0x25a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0084
        gbc.setState(0x5f03, 0xe62a, 0xd9c0, 0xbb6d, 0x90ef, 0x2048, 0x0, 0x1);
        gbc.writeMem(0x5f03, { 0x89 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xe62a, gbc.sp());
        EXPECT(0x5f04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0085
        gbc.setState(0x4827, 0xfe0d, 0x2530, 0xafaa, 0x4313, 0x4129, 0x0, 0x0);
        gbc.writeMem(0x4827, { 0x89 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xfe0d, gbc.sp());
        EXPECT(0x4828, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0086
        gbc.setState(0xa93, 0x1b6a, 0x8420, 0x4fd, 0x6184, 0xd85, 0x0, 0x1);
        gbc.writeMem(0xa93, { 0x89 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x1b6a, gbc.sp());
        EXPECT(0xa94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0087
        gbc.setState(0x50d4, 0xab58, 0x17e0, 0x4f20, 0xe9f5, 0xc36e, 0x1, 0x1);
        gbc.writeMem(0x50d4, { 0x89 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xab58, gbc.sp());
        EXPECT(0x50d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0088
        gbc.setState(0xdfc7, 0x9a6, 0xe550, 0xb629, 0x586b, 0xf984, 0x0, 0x1);
        gbc.writeMem(0xdfc7, { 0x89 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x9a6, gbc.sp());
        EXPECT(0xdfc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xdfc7));
        // 89 0089
        gbc.setState(0xd7bc, 0xc984, 0xaa00, 0x1a89, 0x8af5, 0x5956, 0x0, 0x1);
        gbc.writeMem(0xd7bc, { 0x89 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xc984, gbc.sp());
        EXPECT(0xd7bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xd7bc));
        // 89 008A
        gbc.setState(0x9ed0, 0x8fbf, 0x53b0, 0x5ba4, 0x4470, 0x89b3, 0x1, 0x0);
        gbc.writeMem(0x9ed0, { 0x89 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x8fbf, gbc.sp());
        EXPECT(0x9ed1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x9ed0));
        // 89 008B
        gbc.setState(0x1bb7, 0x8ef4, 0x43c0, 0xb4d7, 0x8bda, 0x34a8, 0x1, 0x0);
        gbc.writeMem(0x1bb7, { 0x89 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x8ef4, gbc.sp());
        EXPECT(0x1bb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 008C
        gbc.setState(0x1236, 0xecdb, 0xe5e0, 0xca21, 0x4c57, 0x5ea4, 0x0, 0x1);
        gbc.writeMem(0x1236, { 0x89 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xecdb, gbc.sp());
        EXPECT(0x1237, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 008D
        gbc.setState(0x7183, 0x9138, 0x69e0, 0xfa2f, 0xea3a, 0x9397, 0x0, 0x1);
        gbc.writeMem(0x7183, { 0x89 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x9138, gbc.sp());
        EXPECT(0x7184, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 008E
        gbc.setState(0x4d72, 0x559e, 0x1e90, 0x6592, 0x779a, 0xad3b, 0x0, 0x0);
        gbc.writeMem(0x4d72, { 0x89 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x559e, gbc.sp());
        EXPECT(0x4d73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 008F
        gbc.setState(0x970d, 0x6e77, 0xab50, 0x6952, 0x8249, 0x1c63, 0x0, 0x1);
        gbc.writeMem(0x970d, { 0x89 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x6e77, gbc.sp());
        EXPECT(0x970e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x970d));
        // 89 0090
        gbc.setState(0xd029, 0xa892, 0x7d50, 0xe8a4, 0xc0b7, 0xfb50, 0x0, 0x1);
        gbc.writeMem(0xd029, { 0x89 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xa892, gbc.sp());
        EXPECT(0xd02a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xd029));
        // 89 0091
        gbc.setState(0x52b4, 0xe1a8, 0xb340, 0x7a24, 0x9591, 0x4c52, 0x1, 0x0);
        gbc.writeMem(0x52b4, { 0x89 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe1a8, gbc.sp());
        EXPECT(0x52b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0092
        gbc.setState(0x958f, 0xcd9d, 0xec90, 0x89fd, 0x1a72, 0xddf9, 0x1, 0x0);
        gbc.writeMem(0x958f, { 0x89 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xcd9d, gbc.sp());
        EXPECT(0x9590, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x958f));
        // 89 0093
        gbc.setState(0x696, 0xc730, 0x18a0, 0x3b92, 0xbc4f, 0x19b7, 0x1, 0x0);
        gbc.writeMem(0x696, { 0x89 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xc730, gbc.sp());
        EXPECT(0x697, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0094
        gbc.setState(0x66ba, 0x53ba, 0x5cb0, 0xc822, 0x2615, 0xd7cd, 0x1, 0x1);
        gbc.writeMem(0x66ba, { 0x89 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x53ba, gbc.sp());
        EXPECT(0x66bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0095
        gbc.setState(0xe902, 0x5c6a, 0xcbd0, 0xd854, 0xd0c0, 0x6ee, 0x0, 0x0);
        gbc.writeMem(0xe902, { 0x89 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x5c6a, gbc.sp());
        EXPECT(0xe903, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xe902));
        // 89 0096
        gbc.setState(0x4a38, 0x599, 0x3600, 0xdead, 0x6239, 0x6add, 0x0, 0x0);
        gbc.writeMem(0x4a38, { 0x89 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x599, gbc.sp());
        EXPECT(0x4a39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0097
        gbc.setState(0xa2f1, 0x330, 0xba80, 0x9cfe, 0x5ea8, 0xc115, 0x1, 0x1);
        gbc.writeMem(0xa2f1, { 0x89 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x330, gbc.sp());
        EXPECT(0xa2f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xa2f1));
        // 89 0098
        gbc.setState(0x97f4, 0x462f, 0x24f0, 0xf30a, 0x671b, 0xc627, 0x0, 0x1);
        gbc.writeMem(0x97f4, { 0x89 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x462f, gbc.sp());
        EXPECT(0x97f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x97f4));
        // 89 0099
        gbc.setState(0xaca7, 0x4f7c, 0x9fd0, 0x9297, 0xa70, 0xe255, 0x0, 0x0);
        gbc.writeMem(0xaca7, { 0x89 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x4f7c, gbc.sp());
        EXPECT(0xaca8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xaca7));
        // 89 009A
        gbc.setState(0xdffe, 0x5f34, 0xd390, 0xb0f3, 0xaf7, 0xa1ba, 0x0, 0x0);
        gbc.writeMem(0xdffe, { 0x89 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x5f34, gbc.sp());
        EXPECT(0xdfff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xdffe));
        // 89 009B
        gbc.setState(0x544e, 0xf7d5, 0xee50, 0xdd23, 0x2c8d, 0x7f5f, 0x1, 0x0);
        gbc.writeMem(0x544e, { 0x89 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xf7d5, gbc.sp());
        EXPECT(0x544f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 009C
        gbc.setState(0xd852, 0x9049, 0x67b0, 0xef1a, 0x2908, 0x79b0, 0x1, 0x1);
        gbc.writeMem(0xd852, { 0x89 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x9049, gbc.sp());
        EXPECT(0xd853, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xd852));
        // 89 009D
        gbc.setState(0x8296, 0x4d67, 0x5420, 0x9c22, 0x9fcd, 0x46f5, 0x1, 0x1);
        gbc.writeMem(0x8296, { 0x89 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x4d67, gbc.sp());
        EXPECT(0x8297, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x8296));
        // 89 009E
        gbc.setState(0x715b, 0x7d10, 0x55b0, 0xad2b, 0x6c9f, 0x41df, 0x1, 0x1);
        gbc.writeMem(0x715b, { 0x89 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x7d10, gbc.sp());
        EXPECT(0x715c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 009F
        gbc.setState(0x1f52, 0x7c97, 0x5520, 0xaa6f, 0x18ff, 0x1b17, 0x1, 0x1);
        gbc.writeMem(0x1f52, { 0x89 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x7c97, gbc.sp());
        EXPECT(0x1f53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 00A0
        gbc.setState(0xad7, 0x47b3, 0x3610, 0x4010, 0xf5, 0x192e, 0x0, 0x0);
        gbc.writeMem(0xad7, { 0x89 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x47b3, gbc.sp());
        EXPECT(0xad8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 00A1
        gbc.setState(0x7ecc, 0x4481, 0x3ae0, 0xc6a2, 0x5b24, 0xf2dd, 0x1, 0x0);
        gbc.writeMem(0x7ecc, { 0x89 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x4481, gbc.sp());
        EXPECT(0x7ecd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 00A2
        gbc.setState(0xc74c, 0x19d7, 0xb310, 0x6b64, 0x6015, 0x86b1, 0x0, 0x0);
        gbc.writeMem(0xc74c, { 0x89 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x19d7, gbc.sp());
        EXPECT(0xc74d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xc74c));
        // 89 00A3
        gbc.setState(0xaeca, 0xbd78, 0x7fe0, 0x4c2f, 0xfb8, 0x2849, 0x1, 0x1);
        gbc.writeMem(0xaeca, { 0x89 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xbd78, gbc.sp());
        EXPECT(0xaecb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xaeca));
        // 89 00A4
        gbc.setState(0x6097, 0xb9c5, 0x29b0, 0x1597, 0xed23, 0x4c9e, 0x1, 0x1);
        gbc.writeMem(0x6097, { 0x89 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xb9c5, gbc.sp());
        EXPECT(0x6098, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 00A5
        gbc.setState(0x7db0, 0x840, 0x1e00, 0x5cb8, 0xba13, 0x63da, 0x0, 0x1);
        gbc.writeMem(0x7db0, { 0x89 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x840, gbc.sp());
        EXPECT(0x7db1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 00A6
        gbc.setState(0x69b5, 0x3029, 0xde20, 0x4b37, 0x318b, 0x3a1c, 0x0, 0x0);
        gbc.writeMem(0x69b5, { 0x89 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x3029, gbc.sp());
        EXPECT(0x69b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 00A7
        gbc.setState(0x207c, 0x6db9, 0xa620, 0x5bc0, 0xc31, 0x834b, 0x0, 0x1);
        gbc.writeMem(0x207c, { 0x89 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x6db9, gbc.sp());
        EXPECT(0x207d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 00A8
        gbc.setState(0x6e87, 0x9d85, 0x3a20, 0x2e8a, 0x3585, 0x9aa9, 0x1, 0x1);
        gbc.writeMem(0x6e87, { 0x89 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x9d85, gbc.sp());
        EXPECT(0x6e88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 00A9
        gbc.setState(0x2248, 0x65da, 0x4260, 0xb0dc, 0xf3ee, 0xefe, 0x0, 0x1);
        gbc.writeMem(0x2248, { 0x89 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x65da, gbc.sp());
        EXPECT(0x2249, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 00AA
        gbc.setState(0x25db, 0x11e1, 0x3b00, 0xf820, 0xe4a1, 0xe696, 0x0, 0x1);
        gbc.writeMem(0x25db, { 0x89 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x11e1, gbc.sp());
        EXPECT(0x25dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 00AB
        gbc.setState(0x3291, 0xa472, 0x2c30, 0xe239, 0xfe90, 0x9998, 0x0, 0x0);
        gbc.writeMem(0x3291, { 0x89 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xa472, gbc.sp());
        EXPECT(0x3292, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 00AC
        gbc.setState(0x12f2, 0x83d9, 0x6dc0, 0x7b9a, 0xf202, 0x2e77, 0x1, 0x1);
        gbc.writeMem(0x12f2, { 0x89 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x83d9, gbc.sp());
        EXPECT(0x12f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 00AD
        gbc.setState(0x2dcc, 0x7cb7, 0x4bf0, 0x5394, 0xff96, 0x7075, 0x0, 0x1);
        gbc.writeMem(0x2dcc, { 0x89 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x7cb7, gbc.sp());
        EXPECT(0x2dcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 00AE
        gbc.setState(0xab26, 0xdca8, 0xdd40, 0xf3ab, 0x45c8, 0xe28, 0x0, 0x0);
        gbc.writeMem(0xab26, { 0x89 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xdca8, gbc.sp());
        EXPECT(0xab27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xab26));
        // 89 00AF
        gbc.setState(0xd651, 0x61a5, 0xa220, 0x65cf, 0x3e8e, 0x5102, 0x0, 0x0);
        gbc.writeMem(0xd651, { 0x89 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x61a5, gbc.sp());
        EXPECT(0xd652, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xd651));
        // 89 00B0
        gbc.setState(0x8d6c, 0xe12e, 0x1000, 0x8f04, 0x570f, 0x3fd, 0x1, 0x1);
        gbc.writeMem(0x8d6c, { 0x89 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xe12e, gbc.sp());
        EXPECT(0x8d6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x8d6c));
        // 89 00B1
        gbc.setState(0x793b, 0xf241, 0x2e50, 0x830, 0xad55, 0x78ef, 0x0, 0x1);
        gbc.writeMem(0x793b, { 0x89 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xf241, gbc.sp());
        EXPECT(0x793c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 00B3
        gbc.setState(0x14eb, 0x4088, 0x3d0, 0xbe72, 0xfeff, 0xf5ec, 0x0, 0x1);
        gbc.writeMem(0x14eb, { 0x89 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x4088, gbc.sp());
        EXPECT(0x14ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 00B4
        gbc.setState(0x2b24, 0x8a7a, 0x8a0, 0x95ae, 0x9582, 0xf419, 0x1, 0x1);
        gbc.writeMem(0x2b24, { 0x89 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x8a7a, gbc.sp());
        EXPECT(0x2b25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 00B5
        gbc.setState(0xa9db, 0x1243, 0xddb0, 0x5489, 0x5c2, 0x7e25, 0x0, 0x1);
        gbc.writeMem(0xa9db, { 0x89 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x1243, gbc.sp());
        EXPECT(0xa9dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xa9db));
        // 89 00B6
        gbc.setState(0xcfd7, 0x1a1e, 0xc890, 0xf8ed, 0xb1a0, 0xab49, 0x0, 0x1);
        gbc.writeMem(0xcfd7, { 0x89 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x1a1e, gbc.sp());
        EXPECT(0xcfd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xcfd7));
        // 89 00B7
        gbc.setState(0x46ff, 0x99b3, 0x15e0, 0x5d7b, 0xf915, 0x9f74, 0x0, 0x0);
        gbc.writeMem(0x46ff, { 0x89 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x99b3, gbc.sp());
        EXPECT(0x4700, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 00B8
        gbc.setState(0x7daf, 0x36d9, 0xf60, 0xd71b, 0x2fbd, 0xbd98, 0x0, 0x0);
        gbc.writeMem(0x7daf, { 0x89 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x36d9, gbc.sp());
        EXPECT(0x7db0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 00B9
        gbc.setState(0xe57d, 0x8009, 0xd930, 0xdc8c, 0xa88e, 0x3d84, 0x1, 0x0);
        gbc.writeMem(0xe57d, { 0x89 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x8009, gbc.sp());
        EXPECT(0xe57e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xe57d));
        // 89 00BA
        gbc.setState(0xc1f8, 0xb173, 0x2860, 0x4d2, 0xb4ce, 0x5870, 0x0, 0x0);
        gbc.writeMem(0xc1f8, { 0x89 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xb173, gbc.sp());
        EXPECT(0xc1f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xc1f8));
        // 89 00BC
        gbc.setState(0xdce3, 0xcdbf, 0x62e0, 0x7f0a, 0xbb10, 0xc9c0, 0x0, 0x0);
        gbc.writeMem(0xdce3, { 0x89 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xcdbf, gbc.sp());
        EXPECT(0xdce4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xdce3));
        // 89 00BD
        gbc.setState(0xe7ab, 0x674, 0xe5f0, 0xc6ff, 0x14d7, 0xaffa, 0x0, 0x0);
        gbc.writeMem(0xe7ab, { 0x89 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x674, gbc.sp());
        EXPECT(0xe7ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xe7ab));
        // 89 00BE
        gbc.setState(0x2dbe, 0x5aa8, 0x2f60, 0x9ffd, 0xe7f3, 0xc4f0, 0x1, 0x0);
        gbc.writeMem(0x2dbe, { 0x89 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x5aa8, gbc.sp());
        EXPECT(0x2dbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 00BF
        gbc.setState(0x79c5, 0xf13, 0x60d0, 0xe1ff, 0x72b6, 0x3d42, 0x1, 0x0);
        gbc.writeMem(0x79c5, { 0x89 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xf13, gbc.sp());
        EXPECT(0x79c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 00C0
        gbc.setState(0xdc5f, 0xa2d2, 0x550, 0xb43d, 0xced9, 0x6349, 0x1, 0x1);
        gbc.writeMem(0xdc5f, { 0x89 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xa2d2, gbc.sp());
        EXPECT(0xdc60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xdc5f));
        // 89 00C1
        gbc.setState(0x4750, 0x6b3, 0xfd60, 0x33b0, 0x5815, 0x7b84, 0x1, 0x0);
        gbc.writeMem(0x4750, { 0x89 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x6b3, gbc.sp());
        EXPECT(0x4751, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 00C2
        gbc.setState(0xdbcf, 0xfa34, 0xd5c0, 0xcb51, 0x3ba7, 0x4866, 0x1, 0x0);
        gbc.writeMem(0xdbcf, { 0x89 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xfa34, gbc.sp());
        EXPECT(0xdbd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xdbcf));
        // 89 00C3
        gbc.setState(0x2bee, 0x99e3, 0x6710, 0x727b, 0x466b, 0xca36, 0x0, 0x1);
        gbc.writeMem(0x2bee, { 0x89 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x99e3, gbc.sp());
        EXPECT(0x2bef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 00C4
        gbc.setState(0x9d16, 0x13e5, 0x1350, 0x50c3, 0xcc9c, 0xa4bd, 0x1, 0x1);
        gbc.writeMem(0x9d16, { 0x89 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x13e5, gbc.sp());
        EXPECT(0x9d17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x9d16));
        // 89 00C5
        gbc.setState(0xd73, 0x2cd0, 0x8b30, 0x7e81, 0x6d2a, 0xa48d, 0x0, 0x0);
        gbc.writeMem(0xd73, { 0x89 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x2cd0, gbc.sp());
        EXPECT(0xd74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 00C6
        gbc.setState(0x97e8, 0xf767, 0xe090, 0xb1a0, 0xf7dc, 0xcc6e, 0x0, 0x0);
        gbc.writeMem(0x97e8, { 0x89 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xf767, gbc.sp());
        EXPECT(0x97e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x97e8));
        // 89 00C7
        gbc.setState(0xe38, 0x38f1, 0x51b0, 0x7f8a, 0x4bee, 0x2d27, 0x1, 0x0);
        gbc.writeMem(0xe38, { 0x89 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x38f1, gbc.sp());
        EXPECT(0xe39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 00C8
        gbc.setState(0x1139, 0xbcb1, 0xecf0, 0x3aed, 0xf315, 0x1e2e, 0x0, 0x1);
        gbc.writeMem(0x1139, { 0x89 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xbcb1, gbc.sp());
        EXPECT(0x113a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 00C9
        gbc.setState(0xdafc, 0x5385, 0x8d40, 0xb252, 0xb2d, 0x9212, 0x0, 0x1);
        gbc.writeMem(0xdafc, { 0x89 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x5385, gbc.sp());
        EXPECT(0xdafd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xdafc));
        // 89 00CA
        gbc.setState(0xda21, 0x8f09, 0x1630, 0x3989, 0x1612, 0x8eb4, 0x1, 0x1);
        gbc.writeMem(0xda21, { 0x89 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x8f09, gbc.sp());
        EXPECT(0xda22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xda21));
        // 89 00CB
        gbc.setState(0xbad6, 0x7a2d, 0x4b70, 0xb2a3, 0x77b5, 0xc10a, 0x1, 0x1);
        gbc.writeMem(0xbad6, { 0x89 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x7a2d, gbc.sp());
        EXPECT(0xbad7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xbad6));
        // 89 00CC
        gbc.setState(0x2165, 0x7f7c, 0x8cf0, 0x3587, 0x93a5, 0x423a, 0x0, 0x1);
        gbc.writeMem(0x2165, { 0x89 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x7f7c, gbc.sp());
        EXPECT(0x2166, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 00CD
        gbc.setState(0xc877, 0xaff9, 0xcaa0, 0x1707, 0x5ff, 0x7b16, 0x1, 0x0);
        gbc.writeMem(0xc877, { 0x89 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xaff9, gbc.sp());
        EXPECT(0xc878, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xc877));
        // 89 00CF
        gbc.setState(0x86c5, 0x3bd3, 0x7a80, 0x6a36, 0x54a, 0x4f, 0x0, 0x0);
        gbc.writeMem(0x86c5, { 0x89 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x3bd3, gbc.sp());
        EXPECT(0x86c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x86c5));
        // 89 00D1
        gbc.setState(0xbb70, 0xa097, 0x8250, 0xb192, 0x6c52, 0xa94c, 0x1, 0x0);
        gbc.writeMem(0xbb70, { 0x89 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xa097, gbc.sp());
        EXPECT(0xbb71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xbb70));
        // 89 00D2
        gbc.setState(0xada, 0x8136, 0xa8b0, 0xd8db, 0xcb75, 0x86ac, 0x0, 0x0);
        gbc.writeMem(0xada, { 0x89 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x8136, gbc.sp());
        EXPECT(0xadb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 00D3
        gbc.setState(0x9407, 0xb99c, 0xc5d0, 0x2c8c, 0xe40, 0xebad, 0x0, 0x0);
        gbc.writeMem(0x9407, { 0x89 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xb99c, gbc.sp());
        EXPECT(0x9408, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x9407));
        // 89 00D4
        gbc.setState(0x3e97, 0xebda, 0xdb10, 0xd84c, 0x9cf5, 0x1642, 0x1, 0x1);
        gbc.writeMem(0x3e97, { 0x89 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xebda, gbc.sp());
        EXPECT(0x3e98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 00D5
        gbc.setState(0x8f23, 0x490, 0xbd80, 0x6b32, 0x981c, 0x402e, 0x0, 0x0);
        gbc.writeMem(0x8f23, { 0x89 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x490, gbc.sp());
        EXPECT(0x8f24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x8f23));
        // 89 00D6
        gbc.setState(0xcdec, 0x7bc5, 0xbea0, 0xb6bf, 0xc62a, 0x854, 0x0, 0x0);
        gbc.writeMem(0xcdec, { 0x89 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x7bc5, gbc.sp());
        EXPECT(0xcded, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xcdec));
        // 89 00D7
        gbc.setState(0xdfe5, 0xcae4, 0x1990, 0x4417, 0x5bfe, 0x82f6, 0x0, 0x1);
        gbc.writeMem(0xdfe5, { 0x89 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xcae4, gbc.sp());
        EXPECT(0xdfe6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xdfe5));
        // 89 00D8
        gbc.setState(0x8e43, 0x904b, 0x9bb0, 0x3d70, 0x4004, 0xb00a, 0x1, 0x0);
        gbc.writeMem(0x8e43, { 0x89 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x904b, gbc.sp());
        EXPECT(0x8e44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x8e43));
        // 89 00D9
        gbc.setState(0x8e5e, 0x7d38, 0xd9c0, 0xbe70, 0x33d3, 0x5420, 0x1, 0x0);
        gbc.writeMem(0x8e5e, { 0x89 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x7d38, gbc.sp());
        EXPECT(0x8e5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x8e5e));
        // 89 00DA
        gbc.setState(0x8d8e, 0xe215, 0x8320, 0x93e, 0x46a, 0xa35e, 0x1, 0x0);
        gbc.writeMem(0x8d8e, { 0x89 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xe215, gbc.sp());
        EXPECT(0x8d8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x8d8e));
        // 89 00DB
        gbc.setState(0x1a38, 0xc7d7, 0x6fb0, 0xc654, 0xa3d2, 0x4867, 0x1, 0x0);
        gbc.writeMem(0x1a38, { 0x89 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xc7d7, gbc.sp());
        EXPECT(0x1a39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 00DC
        gbc.setState(0xe08, 0xc210, 0x77d0, 0xe8da, 0x6f13, 0x7df0, 0x1, 0x1);
        gbc.writeMem(0xe08, { 0x89 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xc210, gbc.sp());
        EXPECT(0xe09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 00DE
        gbc.setState(0x33e8, 0x7271, 0x22f0, 0x7507, 0x399d, 0xe807, 0x0, 0x1);
        gbc.writeMem(0x33e8, { 0x89 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x7271, gbc.sp());
        EXPECT(0x33e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 00DF
        gbc.setState(0xcca1, 0x911f, 0xd2f0, 0x4a2e, 0xb4c0, 0x633b, 0x0, 0x1);
        gbc.writeMem(0xcca1, { 0x89 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x911f, gbc.sp());
        EXPECT(0xcca2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xcca1));
        // 89 00E0
        gbc.setState(0xc856, 0xe546, 0x7a0, 0x1115, 0xbaf0, 0x3a8e, 0x0, 0x1);
        gbc.writeMem(0xc856, { 0x89 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xe546, gbc.sp());
        EXPECT(0xc857, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xc856));
        // 89 00E1
        gbc.setState(0x84ff, 0xf026, 0xbf60, 0x6496, 0x1df8, 0x158c, 0x0, 0x1);
        gbc.writeMem(0x84ff, { 0x89 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xf026, gbc.sp());
        EXPECT(0x8500, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x84ff));
        // 89 00E2
        gbc.setState(0x20eb, 0xa2b8, 0x2430, 0x4475, 0x21c2, 0xfd19, 0x1, 0x1);
        gbc.writeMem(0x20eb, { 0x89 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xa2b8, gbc.sp());
        EXPECT(0x20ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 00E3
        gbc.setState(0x6c5d, 0xb7b1, 0xd520, 0xd5d6, 0xe3a8, 0xfa1, 0x0, 0x1);
        gbc.writeMem(0x6c5d, { 0x89 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xb7b1, gbc.sp());
        EXPECT(0x6c5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 00E4
        gbc.setState(0x270f, 0xaabf, 0x4190, 0xfd44, 0x87a7, 0x17be, 0x0, 0x1);
        gbc.writeMem(0x270f, { 0x89 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xaabf, gbc.sp());
        EXPECT(0x2710, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 00E5
        gbc.setState(0x1727, 0x3b32, 0x8800, 0xe8e5, 0xdce3, 0x6db9, 0x0, 0x1);
        gbc.writeMem(0x1727, { 0x89 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x3b32, gbc.sp());
        EXPECT(0x1728, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 00E6
        gbc.setState(0x7cc2, 0xa418, 0x6610, 0x1350, 0x84f9, 0x397b, 0x0, 0x0);
        gbc.writeMem(0x7cc2, { 0x89 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xa418, gbc.sp());
        EXPECT(0x7cc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 00E7
        gbc.setState(0xb827, 0x483a, 0x86b0, 0x524e, 0x2cb6, 0x705d, 0x1, 0x1);
        gbc.writeMem(0xb827, { 0x89 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x483a, gbc.sp());
        EXPECT(0xb828, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xb827));
        // 89 00E8
        gbc.setState(0xc656, 0x4994, 0x7ba0, 0xb02, 0xede8, 0xddc2, 0x0, 0x1);
        gbc.writeMem(0xc656, { 0x89 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x4994, gbc.sp());
        EXPECT(0xc657, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xc656));
        // 89 00E9
        gbc.setState(0x8251, 0x798d, 0x12c0, 0xa120, 0x5437, 0x21a2, 0x0, 0x1);
        gbc.writeMem(0x8251, { 0x89 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x798d, gbc.sp());
        EXPECT(0x8252, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x8251));
        // 89 00EA
        gbc.setState(0x1e3e, 0x8319, 0x5520, 0x7f2d, 0x7f68, 0xeb02, 0x1, 0x0);
        gbc.writeMem(0x1e3e, { 0x89 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x8319, gbc.sp());
        EXPECT(0x1e3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 00EB
        gbc.setState(0xac29, 0xf2f, 0xcd20, 0xf567, 0x5cfb, 0x144a, 0x0, 0x1);
        gbc.writeMem(0xac29, { 0x89 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xf2f, gbc.sp());
        EXPECT(0xac2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xac29));
        // 89 00EC
        gbc.setState(0x187c, 0x355e, 0x3d00, 0x85bb, 0xe04b, 0xd95a, 0x1, 0x1);
        gbc.writeMem(0x187c, { 0x89 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x355e, gbc.sp());
        EXPECT(0x187d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 00ED
        gbc.setState(0xcb67, 0x954c, 0x2120, 0x9d09, 0xa2fb, 0xb04, 0x0, 0x0);
        gbc.writeMem(0xcb67, { 0x89 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x954c, gbc.sp());
        EXPECT(0xcb68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xcb67));
        // 89 00EE
        gbc.setState(0xd0f4, 0x1c66, 0x91f0, 0xb61b, 0xc398, 0xba02, 0x0, 0x0);
        gbc.writeMem(0xd0f4, { 0x89 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x1c66, gbc.sp());
        EXPECT(0xd0f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xd0f4));
        // 89 00EF
        gbc.setState(0xaabe, 0x3e43, 0x5da0, 0x2cd3, 0xff02, 0xb6a0, 0x0, 0x1);
        gbc.writeMem(0xaabe, { 0x89 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x3e43, gbc.sp());
        EXPECT(0xaabf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xaabe));
        // 89 00F0
        gbc.setState(0x662a, 0x34ea, 0xe1d0, 0xca3f, 0x427e, 0x23ed, 0x1, 0x0);
        gbc.writeMem(0x662a, { 0x89 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x34ea, gbc.sp());
        EXPECT(0x662b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 00F1
        gbc.setState(0x162f, 0x8551, 0xaaf0, 0xf292, 0x1f08, 0xc85, 0x0, 0x0);
        gbc.writeMem(0x162f, { 0x89 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x8551, gbc.sp());
        EXPECT(0x1630, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 00F3
        gbc.setState(0x25f3, 0x85d8, 0xfc90, 0x6165, 0xf017, 0x9cbb, 0x1, 0x0);
        gbc.writeMem(0x25f3, { 0x89 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x85d8, gbc.sp());
        EXPECT(0x25f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 00F4
        gbc.setState(0xe530, 0xd2ed, 0xc410, 0x72fc, 0xde6b, 0xebe5, 0x0, 0x0);
        gbc.writeMem(0xe530, { 0x89 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xd2ed, gbc.sp());
        EXPECT(0xe531, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xe530));
        // 89 00F5
        gbc.setState(0xd3b1, 0x787b, 0x6020, 0x6b83, 0x99fe, 0x70ad, 0x0, 0x0);
        gbc.writeMem(0xd3b1, { 0x89 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x787b, gbc.sp());
        EXPECT(0xd3b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xd3b1));
        // 89 00F6
        gbc.setState(0xf66, 0x3d1, 0xc9d0, 0xa624, 0xa5dd, 0x7d59, 0x0, 0x1);
        gbc.writeMem(0xf66, { 0x89 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x3d1, gbc.sp());
        EXPECT(0xf67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 00F7
        gbc.setState(0xd684, 0x3a1, 0x50d0, 0x9ec7, 0xa5b2, 0x6fc4, 0x1, 0x0);
        gbc.writeMem(0xd684, { 0x89 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x3a1, gbc.sp());
        EXPECT(0xd685, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xd684));
        // 89 00F8
        gbc.setState(0x450e, 0xeb82, 0x4d80, 0x4bc2, 0x93e4, 0x40d6, 0x0, 0x0);
        gbc.writeMem(0x450e, { 0x89 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xeb82, gbc.sp());
        EXPECT(0x450f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 00F9
        gbc.setState(0x3b9f, 0xcbaf, 0x6a90, 0xe242, 0x2972, 0xbce3, 0x0, 0x0);
        gbc.writeMem(0x3b9f, { 0x89 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xcbaf, gbc.sp());
        EXPECT(0x3ba0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 00FA
        gbc.setState(0xb8e, 0x6aef, 0x2f10, 0xb1a7, 0xa034, 0xb6cc, 0x1, 0x1);
        gbc.writeMem(0xb8e, { 0x89 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x6aef, gbc.sp());
        EXPECT(0xb8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 00FB
        gbc.setState(0x9cc0, 0xba5c, 0x2fd0, 0xe2bc, 0xbb3f, 0x8000, 0x0, 0x1);
        gbc.writeMem(0x9cc0, { 0x89 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xba5c, gbc.sp());
        EXPECT(0x9cc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x9cc0));
        // 89 00FC
        gbc.setState(0x9583, 0x654e, 0x8480, 0xfede, 0x5ea1, 0x6037, 0x0, 0x1);
        gbc.writeMem(0x9583, { 0x89 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x654e, gbc.sp());
        EXPECT(0x9584, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x9583));
        // 89 00FD
        gbc.setState(0xc8b5, 0x3c1e, 0xb8b0, 0x30cd, 0xf9e5, 0xb78d, 0x0, 0x0);
        gbc.writeMem(0xc8b5, { 0x89 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x3c1e, gbc.sp());
        EXPECT(0xc8b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xc8b5));
        // 89 00FE
        gbc.setState(0xc2b9, 0x7048, 0x5c00, 0xa63b, 0xd167, 0x4fca, 0x0, 0x0);
        gbc.writeMem(0xc2b9, { 0x89 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x7048, gbc.sp());
        EXPECT(0xc2ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xc2b9));
        // 89 00FF
        gbc.setState(0xa23e, 0xc921, 0xc4a0, 0x3fac, 0x4eb7, 0xfc5d, 0x0, 0x1);
        gbc.writeMem(0xa23e, { 0x89 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xc921, gbc.sp());
        EXPECT(0xa23f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xa23e));
        // 89 0100
        gbc.setState(0x133f, 0xa5b0, 0x3990, 0xee4d, 0x62e0, 0x14fa, 0x1, 0x1);
        gbc.writeMem(0x133f, { 0x89 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xa5b0, gbc.sp());
        EXPECT(0x1340, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0101
        gbc.setState(0xdbac, 0x67db, 0xebe0, 0x3a62, 0x3a6e, 0x351c, 0x0, 0x0);
        gbc.writeMem(0xdbac, { 0x89 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x67db, gbc.sp());
        EXPECT(0xdbad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xdbac));
        // 89 0102
        gbc.setState(0x2917, 0x34ae, 0x3570, 0x46db, 0xcf59, 0x46e6, 0x1, 0x1);
        gbc.writeMem(0x2917, { 0x89 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x34ae, gbc.sp());
        EXPECT(0x2918, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0103
        gbc.setState(0x650d, 0x70f3, 0xa7d0, 0x7740, 0xd8dd, 0x90b9, 0x0, 0x0);
        gbc.writeMem(0x650d, { 0x89 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x70f3, gbc.sp());
        EXPECT(0x650e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0104
        gbc.setState(0xa0ca, 0x7d4a, 0x7f0, 0xff37, 0xd3ba, 0xec92, 0x1, 0x1);
        gbc.writeMem(0xa0ca, { 0x89 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x7d4a, gbc.sp());
        EXPECT(0xa0cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xa0ca));
        // 89 0105
        gbc.setState(0x8c6e, 0x6e18, 0x43f0, 0x85a1, 0x91b9, 0x30b6, 0x0, 0x1);
        gbc.writeMem(0x8c6e, { 0x89 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x6e18, gbc.sp());
        EXPECT(0x8c6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x8c6e));
        // 89 0106
        gbc.setState(0x7036, 0xcbfc, 0x5380, 0x5599, 0xab50, 0xeb2d, 0x1, 0x0);
        gbc.writeMem(0x7036, { 0x89 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xcbfc, gbc.sp());
        EXPECT(0x7037, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0107
        gbc.setState(0xcda1, 0xd70c, 0x5500, 0x6dd8, 0x3131, 0xd459, 0x0, 0x0);
        gbc.writeMem(0xcda1, { 0x89 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xd70c, gbc.sp());
        EXPECT(0xcda2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xcda1));
        // 89 0108
        gbc.setState(0x29a4, 0x1f1e, 0xd340, 0x2bb7, 0xf8cf, 0x9495, 0x0, 0x0);
        gbc.writeMem(0x29a4, { 0x89 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x1f1e, gbc.sp());
        EXPECT(0x29a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0109
        gbc.setState(0xe0a4, 0xc8da, 0x51b0, 0xb803, 0xe184, 0xa289, 0x0, 0x1);
        gbc.writeMem(0xe0a4, { 0x89 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xc8da, gbc.sp());
        EXPECT(0xe0a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xe0a4));
        // 89 010A
        gbc.setState(0x6fb3, 0xf24a, 0x6490, 0x4f0c, 0x5def, 0xcfe6, 0x0, 0x0);
        gbc.writeMem(0x6fb3, { 0x89 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xf24a, gbc.sp());
        EXPECT(0x6fb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 010B
        gbc.setState(0x808d, 0x29ea, 0xcf40, 0xa298, 0xf3c9, 0xe6f3, 0x0, 0x0);
        gbc.writeMem(0x808d, { 0x89 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x29ea, gbc.sp());
        EXPECT(0x808e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x808d));
        // 89 010C
        gbc.setState(0xadb1, 0x3f62, 0x3080, 0x51c3, 0x5325, 0x52c, 0x1, 0x0);
        gbc.writeMem(0xadb1, { 0x89 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x3f62, gbc.sp());
        EXPECT(0xadb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xadb1));
        // 89 010D
        gbc.setState(0x6df3, 0xe586, 0x3350, 0xb0ce, 0x3401, 0xf953, 0x0, 0x1);
        gbc.writeMem(0x6df3, { 0x89 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xe586, gbc.sp());
        EXPECT(0x6df4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 010E
        gbc.setState(0xb066, 0x5902, 0xad30, 0xa11e, 0x15d3, 0xc8, 0x0, 0x0);
        gbc.writeMem(0xb066, { 0x89 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x5902, gbc.sp());
        EXPECT(0xb067, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xb066));
        // 89 0110
        gbc.setState(0x13ae, 0x5ae0, 0x78a0, 0x7100, 0xba23, 0x5411, 0x1, 0x1);
        gbc.writeMem(0x13ae, { 0x89 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x5ae0, gbc.sp());
        EXPECT(0x13af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0111
        gbc.setState(0x7eb1, 0xd4ed, 0xa630, 0x4a4d, 0x224c, 0x54bf, 0x0, 0x1);
        gbc.writeMem(0x7eb1, { 0x89 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xd4ed, gbc.sp());
        EXPECT(0x7eb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0112
        gbc.setState(0xa219, 0x4b07, 0x65d0, 0xe6f4, 0x7a3e, 0x24a3, 0x0, 0x0);
        gbc.writeMem(0xa219, { 0x89 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x4b07, gbc.sp());
        EXPECT(0xa21a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xa219));
        // 89 0113
        gbc.setState(0xde5d, 0x1993, 0xd5f0, 0xe64f, 0xed94, 0x1c03, 0x1, 0x1);
        gbc.writeMem(0xde5d, { 0x89 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x1993, gbc.sp());
        EXPECT(0xde5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xde5d));
        // 89 0114
        gbc.setState(0x8e66, 0xa59e, 0x800, 0x82c1, 0x5b26, 0x757e, 0x0, 0x1);
        gbc.writeMem(0x8e66, { 0x89 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xa59e, gbc.sp());
        EXPECT(0x8e67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x8e66));
        // 89 0115
        gbc.setState(0x869a, 0x4e05, 0x8b80, 0xa2c6, 0x3b8b, 0x8920, 0x0, 0x0);
        gbc.writeMem(0x869a, { 0x89 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x4e05, gbc.sp());
        EXPECT(0x869b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x869a));
        // 89 0116
        gbc.setState(0xc7b2, 0x80f5, 0x1ae0, 0x179a, 0x91dd, 0xb115, 0x1, 0x1);
        gbc.writeMem(0xc7b2, { 0x89 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x80f5, gbc.sp());
        EXPECT(0xc7b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xc7b2));
        // 89 0117
        gbc.setState(0x3ec6, 0x48c6, 0xc360, 0x4f13, 0xce4c, 0xa3dd, 0x1, 0x1);
        gbc.writeMem(0x3ec6, { 0x89 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x48c6, gbc.sp());
        EXPECT(0x3ec7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0118
        gbc.setState(0x1131, 0x9d09, 0x2100, 0x6c23, 0xaf75, 0xd8a8, 0x0, 0x0);
        gbc.writeMem(0x1131, { 0x89 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x9d09, gbc.sp());
        EXPECT(0x1132, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0119
        gbc.setState(0xe14e, 0x6233, 0xe610, 0x61b5, 0xa68a, 0xbf9b, 0x1, 0x0);
        gbc.writeMem(0xe14e, { 0x89 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x6233, gbc.sp());
        EXPECT(0xe14f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xe14e));
        // 89 011A
        gbc.setState(0xdf73, 0x4f2a, 0xf160, 0xe2dd, 0x1f20, 0x79dc, 0x1, 0x0);
        gbc.writeMem(0xdf73, { 0x89 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x4f2a, gbc.sp());
        EXPECT(0xdf74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xdf73));
        // 89 011B
        gbc.setState(0xc9ca, 0x6e88, 0x3950, 0x1deb, 0xfc5c, 0x340b, 0x1, 0x1);
        gbc.writeMem(0xc9ca, { 0x89 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x6e88, gbc.sp());
        EXPECT(0xc9cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xc9ca));
        // 89 011C
        gbc.setState(0x78f6, 0x7c8f, 0x5830, 0x64f5, 0xf713, 0x3423, 0x0, 0x0);
        gbc.writeMem(0x78f6, { 0x89 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x7c8f, gbc.sp());
        EXPECT(0x78f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 011D
        gbc.setState(0x6b9e, 0x9426, 0x86c0, 0xfbd8, 0xf6dc, 0x5c3e, 0x0, 0x0);
        gbc.writeMem(0x6b9e, { 0x89 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x9426, gbc.sp());
        EXPECT(0x6b9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 011E
        gbc.setState(0x70d1, 0x567a, 0x7ec0, 0x79e, 0xb895, 0x7217, 0x1, 0x1);
        gbc.writeMem(0x70d1, { 0x89 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x567a, gbc.sp());
        EXPECT(0x70d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 011F
        gbc.setState(0x39ec, 0x9fa0, 0xd330, 0xdab6, 0xbf1e, 0x4e0c, 0x0, 0x1);
        gbc.writeMem(0x39ec, { 0x89 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x9fa0, gbc.sp());
        EXPECT(0x39ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0120
        gbc.setState(0x3295, 0x213e, 0x6c50, 0x59f6, 0x345e, 0xc390, 0x1, 0x1);
        gbc.writeMem(0x3295, { 0x89 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x213e, gbc.sp());
        EXPECT(0x3296, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0121
        gbc.setState(0x150c, 0xd99c, 0x2bb0, 0xcfcd, 0xfd14, 0x9e01, 0x1, 0x0);
        gbc.writeMem(0x150c, { 0x89 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xd99c, gbc.sp());
        EXPECT(0x150d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0122
        gbc.setState(0x4071, 0xc5bf, 0x47b0, 0x977f, 0xb6af, 0xf840, 0x1, 0x1);
        gbc.writeMem(0x4071, { 0x89 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xc5bf, gbc.sp());
        EXPECT(0x4072, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0123
        gbc.setState(0xbded, 0xc867, 0xa8b0, 0xecc8, 0xe797, 0x3e55, 0x0, 0x1);
        gbc.writeMem(0xbded, { 0x89 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xc867, gbc.sp());
        EXPECT(0xbdee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xbded));
        // 89 0124
        gbc.setState(0x3f5e, 0x9cc8, 0xf360, 0x2722, 0xc037, 0x38d9, 0x1, 0x1);
        gbc.writeMem(0x3f5e, { 0x89 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x9cc8, gbc.sp());
        EXPECT(0x3f5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0126
        gbc.setState(0x29e7, 0x566f, 0x5d20, 0xed71, 0xeb8f, 0x8c78, 0x1, 0x0);
        gbc.writeMem(0x29e7, { 0x89 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x566f, gbc.sp());
        EXPECT(0x29e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0127
        gbc.setState(0x2100, 0xf3a3, 0xf4c0, 0x59e7, 0xe4b, 0xa6d8, 0x0, 0x0);
        gbc.writeMem(0x2100, { 0x89 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xf3a3, gbc.sp());
        EXPECT(0x2101, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0128
        gbc.setState(0x1a2, 0x78f8, 0x5ac0, 0xd89a, 0xd34c, 0x8f2c, 0x1, 0x1);
        gbc.writeMem(0x1a2, { 0x89 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x78f8, gbc.sp());
        EXPECT(0x1a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0129
        gbc.setState(0x509a, 0x1a06, 0x45b0, 0xff3b, 0x1fc2, 0xbff2, 0x1, 0x0);
        gbc.writeMem(0x509a, { 0x89 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x1a06, gbc.sp());
        EXPECT(0x509b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 012B
        gbc.setState(0xd74b, 0xf672, 0x7560, 0x9e5, 0xe872, 0x3c2c, 0x1, 0x1);
        gbc.writeMem(0xd74b, { 0x89 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xf672, gbc.sp());
        EXPECT(0xd74c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xd74b));
        // 89 012C
        gbc.setState(0xd049, 0x399d, 0xa050, 0x53d1, 0xb5fc, 0xe842, 0x0, 0x1);
        gbc.writeMem(0xd049, { 0x89 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x399d, gbc.sp());
        EXPECT(0xd04a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xd049));
        // 89 012D
        gbc.setState(0x8d8c, 0x5443, 0x340, 0x4833, 0xd992, 0x413, 0x1, 0x1);
        gbc.writeMem(0x8d8c, { 0x89 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x5443, gbc.sp());
        EXPECT(0x8d8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x8d8c));
        // 89 012E
        gbc.setState(0xcb48, 0x7e14, 0x7e20, 0x1442, 0x776, 0xbdfd, 0x0, 0x0);
        gbc.writeMem(0xcb48, { 0x89 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x7e14, gbc.sp());
        EXPECT(0xcb49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xcb48));
        // 89 012F
        gbc.setState(0x6e8d, 0xb510, 0xe880, 0xa038, 0x11c1, 0x8caf, 0x1, 0x1);
        gbc.writeMem(0x6e8d, { 0x89 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xb510, gbc.sp());
        EXPECT(0x6e8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0130
        gbc.setState(0x7d1c, 0x8dd7, 0x5e90, 0xbad2, 0x3da4, 0xa050, 0x0, 0x0);
        gbc.writeMem(0x7d1c, { 0x89 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x8dd7, gbc.sp());
        EXPECT(0x7d1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0131
        gbc.setState(0x1477, 0xb071, 0xe9c0, 0xa2e3, 0x40f3, 0x5c12, 0x1, 0x0);
        gbc.writeMem(0x1477, { 0x89 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xb071, gbc.sp());
        EXPECT(0x1478, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0132
        gbc.setState(0x9bcc, 0x43f6, 0x21d0, 0x3610, 0xd118, 0xe6ad, 0x1, 0x1);
        gbc.writeMem(0x9bcc, { 0x89 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x43f6, gbc.sp());
        EXPECT(0x9bcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x9bcc));
        // 89 0133
        gbc.setState(0x1b79, 0xc7a5, 0x13c0, 0x7c13, 0xeba5, 0x632c, 0x1, 0x0);
        gbc.writeMem(0x1b79, { 0x89 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xc7a5, gbc.sp());
        EXPECT(0x1b7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0134
        gbc.setState(0x64bf, 0xb48a, 0xef60, 0xe0ee, 0x1593, 0x77d2, 0x0, 0x1);
        gbc.writeMem(0x64bf, { 0x89 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xb48a, gbc.sp());
        EXPECT(0x64c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0135
        gbc.setState(0xd2f, 0x70ff, 0x7160, 0x6ea0, 0x25fa, 0xc4f1, 0x0, 0x0);
        gbc.writeMem(0xd2f, { 0x89 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x70ff, gbc.sp());
        EXPECT(0xd30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0136
        gbc.setState(0xe86d, 0x7c69, 0x15b0, 0x615c, 0xb9f, 0x3725, 0x1, 0x0);
        gbc.writeMem(0xe86d, { 0x89 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x7c69, gbc.sp());
        EXPECT(0xe86e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xe86d));
        // 89 0137
        gbc.setState(0x74ef, 0x7a5a, 0x4c50, 0x9b72, 0x7edb, 0x3252, 0x1, 0x1);
        gbc.writeMem(0x74ef, { 0x89 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x7a5a, gbc.sp());
        EXPECT(0x74f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0138
        gbc.setState(0xd06e, 0xa9b, 0xe990, 0xc07a, 0x45e7, 0xe1b8, 0x1, 0x0);
        gbc.writeMem(0xd06e, { 0x89 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xa9b, gbc.sp());
        EXPECT(0xd06f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xd06e));
        // 89 0139
        gbc.setState(0xd248, 0x3e9, 0x2ce0, 0x34eb, 0x14ff, 0x94a9, 0x0, 0x0);
        gbc.writeMem(0xd248, { 0x89 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x3e9, gbc.sp());
        EXPECT(0xd249, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xd248));
        // 89 013A
        gbc.setState(0xa83c, 0xa29, 0x83c0, 0xfe5c, 0x33d, 0x6017, 0x0, 0x0);
        gbc.writeMem(0xa83c, { 0x89 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xa29, gbc.sp());
        EXPECT(0xa83d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xa83c));
        // 89 013B
        gbc.setState(0xd2e0, 0x2b78, 0xa070, 0xe7d1, 0xdf3e, 0x707d, 0x1, 0x1);
        gbc.writeMem(0xd2e0, { 0x89 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x2b78, gbc.sp());
        EXPECT(0xd2e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xd2e0));
        // 89 013C
        gbc.setState(0x90c7, 0x885, 0xe350, 0xc73a, 0x9aa1, 0x2e55, 0x1, 0x1);
        gbc.writeMem(0x90c7, { 0x89 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x885, gbc.sp());
        EXPECT(0x90c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x90c7));
        // 89 013D
        gbc.setState(0x5375, 0xd167, 0x190, 0xf05e, 0x3b71, 0xffb8, 0x0, 0x1);
        gbc.writeMem(0x5375, { 0x89 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xd167, gbc.sp());
        EXPECT(0x5376, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 013E
        gbc.setState(0x95b5, 0x5e0f, 0x3750, 0xc24f, 0xc594, 0xbf6, 0x1, 0x1);
        gbc.writeMem(0x95b5, { 0x89 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x5e0f, gbc.sp());
        EXPECT(0x95b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x95b5));
        // 89 013F
        gbc.setState(0x267f, 0x9e1b, 0xbde0, 0x5955, 0x85c9, 0xcd41, 0x1, 0x1);
        gbc.writeMem(0x267f, { 0x89 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x9e1b, gbc.sp());
        EXPECT(0x2680, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0140
        gbc.setState(0x5fe5, 0xdd3f, 0xf70, 0x2bc8, 0x8d8a, 0x477c, 0x0, 0x0);
        gbc.writeMem(0x5fe5, { 0x89 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xdd3f, gbc.sp());
        EXPECT(0x5fe6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0141
        gbc.setState(0x1f4f, 0xd579, 0xe0, 0xd039, 0x82a4, 0xdb58, 0x1, 0x0);
        gbc.writeMem(0x1f4f, { 0x89 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xd579, gbc.sp());
        EXPECT(0x1f50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0142
        gbc.setState(0x8c69, 0x1bc0, 0xe80, 0xa1e0, 0x4edd, 0x3fbb, 0x1, 0x0);
        gbc.writeMem(0x8c69, { 0x89 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x1bc0, gbc.sp());
        EXPECT(0x8c6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x8c69));
        // 89 0143
        gbc.setState(0x4c76, 0x6a06, 0x6750, 0xc4da, 0xa92, 0xaee1, 0x0, 0x0);
        gbc.writeMem(0x4c76, { 0x89 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x6a06, gbc.sp());
        EXPECT(0x4c77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0144
        gbc.setState(0x392f, 0xba1, 0x8920, 0x5d3a, 0x32b7, 0xdedc, 0x1, 0x0);
        gbc.writeMem(0x392f, { 0x89 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xba1, gbc.sp());
        EXPECT(0x3930, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0145
        gbc.setState(0xdf9a, 0xa8de, 0xe1a0, 0xf119, 0x54de, 0xcc0d, 0x1, 0x0);
        gbc.writeMem(0xdf9a, { 0x89 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xa8de, gbc.sp());
        EXPECT(0xdf9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xdf9a));
        // 89 0146
        gbc.setState(0x3206, 0x2de9, 0x210, 0xd6c3, 0x4bc1, 0xa392, 0x1, 0x1);
        gbc.writeMem(0x3206, { 0x89 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x2de9, gbc.sp());
        EXPECT(0x3207, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0147
        gbc.setState(0x2365, 0x2800, 0x4e70, 0xdbc, 0xe592, 0xdb27, 0x1, 0x0);
        gbc.writeMem(0x2365, { 0x89 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x2800, gbc.sp());
        EXPECT(0x2366, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0148
        gbc.setState(0xae2d, 0x3056, 0x4010, 0x84d0, 0x78c2, 0x9b0c, 0x0, 0x0);
        gbc.writeMem(0xae2d, { 0x89 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x3056, gbc.sp());
        EXPECT(0xae2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xae2d));
        // 89 0149
        gbc.setState(0x7811, 0x5a4b, 0x5d80, 0x44d5, 0x9ace, 0x85c6, 0x0, 0x1);
        gbc.writeMem(0x7811, { 0x89 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x5a4b, gbc.sp());
        EXPECT(0x7812, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 014B
        gbc.setState(0x27dd, 0x2b9d, 0xb8b0, 0xd24e, 0xfae4, 0x8a64, 0x1, 0x0);
        gbc.writeMem(0x27dd, { 0x89 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x2b9d, gbc.sp());
        EXPECT(0x27de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 014C
        gbc.setState(0x19c6, 0x4a43, 0xa600, 0xb691, 0xdcf9, 0x75a8, 0x1, 0x0);
        gbc.writeMem(0x19c6, { 0x89 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x4a43, gbc.sp());
        EXPECT(0x19c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 014D
        gbc.setState(0x78d6, 0xa700, 0x25a0, 0xc2fd, 0xcd2a, 0x15c4, 0x0, 0x1);
        gbc.writeMem(0x78d6, { 0x89 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xa700, gbc.sp());
        EXPECT(0x78d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 014F
        gbc.setState(0x1958, 0x234a, 0xfec0, 0x88bd, 0x2fea, 0x9e67, 0x0, 0x1);
        gbc.writeMem(0x1958, { 0x89 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x234a, gbc.sp());
        EXPECT(0x1959, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0150
        gbc.setState(0xee0, 0xc026, 0x8d80, 0x5b44, 0x1775, 0xaab7, 0x1, 0x0);
        gbc.writeMem(0xee0, { 0x89 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xc026, gbc.sp());
        EXPECT(0xee1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0151
        gbc.setState(0x51dc, 0x38b3, 0xb4d0, 0x7d42, 0x61e0, 0x7d60, 0x1, 0x1);
        gbc.writeMem(0x51dc, { 0x89 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x38b3, gbc.sp());
        EXPECT(0x51dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0152
        gbc.setState(0x3379, 0xed2, 0x720, 0xa528, 0x48f1, 0x4cd9, 0x1, 0x1);
        gbc.writeMem(0x3379, { 0x89 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xed2, gbc.sp());
        EXPECT(0x337a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0153
        gbc.setState(0xe2bb, 0xf759, 0x6380, 0x3058, 0x8d28, 0x5825, 0x1, 0x0);
        gbc.writeMem(0xe2bb, { 0x89 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xf759, gbc.sp());
        EXPECT(0xe2bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xe2bb));
        // 89 0154
        gbc.setState(0xb52d, 0xcfa2, 0xf9e0, 0x758a, 0x96f, 0x8aec, 0x0, 0x0);
        gbc.writeMem(0xb52d, { 0x89 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xcfa2, gbc.sp());
        EXPECT(0xb52e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xb52d));
        // 89 0155
        gbc.setState(0x9671, 0x4c9a, 0xd0a0, 0x89f4, 0x7808, 0xc7fc, 0x1, 0x1);
        gbc.writeMem(0x9671, { 0x89 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x4c9a, gbc.sp());
        EXPECT(0x9672, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x9671));
        // 89 0156
        gbc.setState(0xa9e7, 0xb5b0, 0xa2f0, 0x8a58, 0x5eee, 0xd9a8, 0x0, 0x0);
        gbc.writeMem(0xa9e7, { 0x89 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xb5b0, gbc.sp());
        EXPECT(0xa9e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xa9e7));
        // 89 0157
        gbc.setState(0x1f7c, 0x4ea8, 0x7e70, 0xd53b, 0xfa15, 0xbcd7, 0x1, 0x0);
        gbc.writeMem(0x1f7c, { 0x89 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x4ea8, gbc.sp());
        EXPECT(0x1f7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0159
        gbc.setState(0x6d79, 0xf7ef, 0x6400, 0xa525, 0x7791, 0x3944, 0x0, 0x1);
        gbc.writeMem(0x6d79, { 0x89 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xf7ef, gbc.sp());
        EXPECT(0x6d7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 015A
        gbc.setState(0x22b7, 0x9136, 0x3cd0, 0x1dd3, 0x6e11, 0x7736, 0x1, 0x1);
        gbc.writeMem(0x22b7, { 0x89 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x9136, gbc.sp());
        EXPECT(0x22b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 015B
        gbc.setState(0xb38a, 0x8f48, 0x1fb0, 0x791f, 0x88dc, 0x2bb4, 0x1, 0x0);
        gbc.writeMem(0xb38a, { 0x89 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x8f48, gbc.sp());
        EXPECT(0xb38b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xb38a));
        // 89 015C
        gbc.setState(0xea80, 0xdccb, 0x4bf0, 0xc50f, 0x528a, 0xbdc2, 0x1, 0x0);
        gbc.writeMem(0xea80, { 0x89 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xdccb, gbc.sp());
        EXPECT(0xea81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xea80));
        // 89 015D
        gbc.setState(0x71f5, 0xfa40, 0x38e0, 0x2b84, 0x8ab7, 0x76e6, 0x0, 0x0);
        gbc.writeMem(0x71f5, { 0x89 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xfa40, gbc.sp());
        EXPECT(0x71f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 015E
        gbc.setState(0x83e8, 0x1409, 0x45a0, 0x2f1d, 0x18d2, 0x316d, 0x0, 0x0);
        gbc.writeMem(0x83e8, { 0x89 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x1409, gbc.sp());
        EXPECT(0x83e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x83e8));
        // 89 015F
        gbc.setState(0x4359, 0xbe12, 0xe050, 0x275d, 0x30ce, 0xd4fd, 0x0, 0x0);
        gbc.writeMem(0x4359, { 0x89 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xbe12, gbc.sp());
        EXPECT(0x435a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0160
        gbc.setState(0x5404, 0x2abe, 0x20c0, 0x3304, 0xe4f, 0x563c, 0x0, 0x0);
        gbc.writeMem(0x5404, { 0x89 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2abe, gbc.sp());
        EXPECT(0x5405, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0161
        gbc.setState(0x79bb, 0x909f, 0xf2f0, 0x2d4c, 0x163b, 0x4473, 0x0, 0x1);
        gbc.writeMem(0x79bb, { 0x89 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x909f, gbc.sp());
        EXPECT(0x79bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0162
        gbc.setState(0x47e9, 0x5321, 0xe150, 0xc4b5, 0x27bc, 0x3ab2, 0x1, 0x1);
        gbc.writeMem(0x47e9, { 0x89 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x5321, gbc.sp());
        EXPECT(0x47ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0163
        gbc.setState(0xb83f, 0x9427, 0x430, 0x8204, 0x2687, 0xc6da, 0x1, 0x0);
        gbc.writeMem(0xb83f, { 0x89 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x9427, gbc.sp());
        EXPECT(0xb840, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xb83f));
        // 89 0164
        gbc.setState(0x91db, 0x2717, 0x6b60, 0x2770, 0xa1cb, 0xbe75, 0x1, 0x1);
        gbc.writeMem(0x91db, { 0x89 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x2717, gbc.sp());
        EXPECT(0x91dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x91db));
        // 89 0165
        gbc.setState(0xd425, 0x9b38, 0x56c0, 0x414c, 0x3284, 0x2ddf, 0x1, 0x0);
        gbc.writeMem(0xd425, { 0x89 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x9b38, gbc.sp());
        EXPECT(0xd426, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xd425));
        // 89 0166
        gbc.setState(0x538a, 0x9eca, 0x3ab0, 0xeb8a, 0xebfe, 0x3229, 0x1, 0x1);
        gbc.writeMem(0x538a, { 0x89 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x9eca, gbc.sp());
        EXPECT(0x538b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0167
        gbc.setState(0x320d, 0x7e91, 0xf930, 0x5d81, 0x99a3, 0x529d, 0x1, 0x1);
        gbc.writeMem(0x320d, { 0x89 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x7e91, gbc.sp());
        EXPECT(0x320e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0168
        gbc.setState(0xc21c, 0xaa5e, 0x7630, 0xaba0, 0xa6a1, 0x4df8, 0x1, 0x1);
        gbc.writeMem(0xc21c, { 0x89 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xaa5e, gbc.sp());
        EXPECT(0xc21d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xc21c));
        // 89 0169
        gbc.setState(0x4be8, 0x5cf8, 0xfb10, 0xab01, 0x92eb, 0x265d, 0x0, 0x1);
        gbc.writeMem(0x4be8, { 0x89 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x5cf8, gbc.sp());
        EXPECT(0x4be9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 016B
        gbc.setState(0x3fae, 0xfa9a, 0x27f0, 0x74ee, 0x399b, 0xacc2, 0x1, 0x0);
        gbc.writeMem(0x3fae, { 0x89 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xfa9a, gbc.sp());
        EXPECT(0x3faf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 016C
        gbc.setState(0xa945, 0x5d6c, 0xd8f0, 0x566f, 0x8a8a, 0x140a, 0x0, 0x0);
        gbc.writeMem(0xa945, { 0x89 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x5d6c, gbc.sp());
        EXPECT(0xa946, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xa945));
        // 89 016E
        gbc.setState(0xed9a, 0x6c4a, 0xb3b0, 0x134c, 0x8483, 0xf86d, 0x1, 0x1);
        gbc.writeMem(0xed9a, { 0x89 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x6c4a, gbc.sp());
        EXPECT(0xed9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xed9a));
        // 89 0170
        gbc.setState(0x5f07, 0x7268, 0xce00, 0xc738, 0x637, 0xee45, 0x1, 0x0);
        gbc.writeMem(0x5f07, { 0x89 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x7268, gbc.sp());
        EXPECT(0x5f08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0171
        gbc.setState(0xd7f0, 0xb782, 0x6280, 0xf8c0, 0xeea8, 0xac97, 0x0, 0x0);
        gbc.writeMem(0xd7f0, { 0x89 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xb782, gbc.sp());
        EXPECT(0xd7f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xd7f0));
        // 89 0172
        gbc.setState(0x3f1f, 0x4dda, 0xf310, 0x1a60, 0x873f, 0x8f14, 0x1, 0x1);
        gbc.writeMem(0x3f1f, { 0x89 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x4dda, gbc.sp());
        EXPECT(0x3f20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0173
        gbc.setState(0xe659, 0xa537, 0x62c0, 0x22ca, 0x76cf, 0x3235, 0x0, 0x0);
        gbc.writeMem(0xe659, { 0x89 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xa537, gbc.sp());
        EXPECT(0xe65a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xe659));
        // 89 0175
        gbc.setState(0x3343, 0xf367, 0xf860, 0xd62e, 0x84d, 0xca01, 0x1, 0x0);
        gbc.writeMem(0x3343, { 0x89 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xf367, gbc.sp());
        EXPECT(0x3344, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0176
        gbc.setState(0x34ee, 0xa2e8, 0xfa70, 0xed7f, 0x3561, 0x848e, 0x0, 0x1);
        gbc.writeMem(0x34ee, { 0x89 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xa2e8, gbc.sp());
        EXPECT(0x34ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0177
        gbc.setState(0xac22, 0x26ff, 0xbac0, 0x6ef6, 0x5c04, 0x8e04, 0x1, 0x0);
        gbc.writeMem(0xac22, { 0x89 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x26ff, gbc.sp());
        EXPECT(0xac23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xac22));
        // 89 0178
        gbc.setState(0x1066, 0x9688, 0x8980, 0xca40, 0x112e, 0xa2f1, 0x1, 0x1);
        gbc.writeMem(0x1066, { 0x89 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x9688, gbc.sp());
        EXPECT(0x1067, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0179
        gbc.setState(0x81cf, 0xa72c, 0x1830, 0x4abd, 0xecd2, 0x27b4, 0x1, 0x0);
        gbc.writeMem(0x81cf, { 0x89 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xa72c, gbc.sp());
        EXPECT(0x81d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x81cf));
        // 89 017A
        gbc.setState(0xb346, 0xe7e5, 0x8d60, 0xedea, 0x9a51, 0xbaeb, 0x0, 0x1);
        gbc.writeMem(0xb346, { 0x89 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xe7e5, gbc.sp());
        EXPECT(0xb347, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xb346));
        // 89 017B
        gbc.setState(0x1f9d, 0x1775, 0x2f60, 0x9ca7, 0x6460, 0xbbff, 0x1, 0x0);
        gbc.writeMem(0x1f9d, { 0x89 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x1775, gbc.sp());
        EXPECT(0x1f9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 017C
        gbc.setState(0x631b, 0x704e, 0xdf10, 0x9ed3, 0xc826, 0x40be, 0x0, 0x0);
        gbc.writeMem(0x631b, { 0x89 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x704e, gbc.sp());
        EXPECT(0x631c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 017D
        gbc.setState(0xd558, 0x9fcb, 0x5af0, 0x2c98, 0x94d6, 0xfcee, 0x0, 0x1);
        gbc.writeMem(0xd558, { 0x89 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x9fcb, gbc.sp());
        EXPECT(0xd559, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xd558));
        // 89 017E
        gbc.setState(0xdd1b, 0xad32, 0xf50, 0x81ad, 0x103e, 0x2ad6, 0x0, 0x0);
        gbc.writeMem(0xdd1b, { 0x89 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xad32, gbc.sp());
        EXPECT(0xdd1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xdd1b));
        // 89 0180
        gbc.setState(0x23b4, 0xac5f, 0xda40, 0xcfd4, 0x328d, 0xc51c, 0x1, 0x1);
        gbc.writeMem(0x23b4, { 0x89 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xac5f, gbc.sp());
        EXPECT(0x23b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0181
        gbc.setState(0xa4d, 0x4bc2, 0xfd50, 0x45d0, 0x4396, 0xc49, 0x0, 0x1);
        gbc.writeMem(0xa4d, { 0x89 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x4bc2, gbc.sp());
        EXPECT(0xa4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0182
        gbc.setState(0x9224, 0x3144, 0x24b0, 0xe28e, 0x723b, 0xab9d, 0x0, 0x1);
        gbc.writeMem(0x9224, { 0x89 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x3144, gbc.sp());
        EXPECT(0x9225, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x9224));
        // 89 0183
        gbc.setState(0xbbfb, 0x8f07, 0x29a0, 0x10fc, 0xd9fa, 0x1001, 0x1, 0x0);
        gbc.writeMem(0xbbfb, { 0x89 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x8f07, gbc.sp());
        EXPECT(0xbbfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xbbfb));
        // 89 0184
        gbc.setState(0x4812, 0x59c9, 0xcf60, 0x2bca, 0xf70a, 0x628a, 0x0, 0x0);
        gbc.writeMem(0x4812, { 0x89 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x59c9, gbc.sp());
        EXPECT(0x4813, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0185
        gbc.setState(0x3ea0, 0x92f5, 0xe920, 0xbd7d, 0x644a, 0xab96, 0x1, 0x0);
        gbc.writeMem(0x3ea0, { 0x89 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x92f5, gbc.sp());
        EXPECT(0x3ea1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0186
        gbc.setState(0x6354, 0xc969, 0x1be0, 0x24e, 0xc53f, 0x451e, 0x0, 0x0);
        gbc.writeMem(0x6354, { 0x89 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xc969, gbc.sp());
        EXPECT(0x6355, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0187
        gbc.setState(0xb2ba, 0xc546, 0xf260, 0xe806, 0x8425, 0x4f87, 0x0, 0x1);
        gbc.writeMem(0xb2ba, { 0x89 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xc546, gbc.sp());
        EXPECT(0xb2bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xb2ba));
        // 89 0188
        gbc.setState(0xc714, 0xdd75, 0x9c30, 0xcfee, 0x9071, 0x78e, 0x1, 0x1);
        gbc.writeMem(0xc714, { 0x89 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xdd75, gbc.sp());
        EXPECT(0xc715, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xc714));
        // 89 0189
        gbc.setState(0xb259, 0xa63, 0xc9a0, 0x2aba, 0xeb38, 0x4f0e, 0x0, 0x1);
        gbc.writeMem(0xb259, { 0x89 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xa63, gbc.sp());
        EXPECT(0xb25a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xb259));
        // 89 018B
        gbc.setState(0xb39a, 0xeac5, 0x68d0, 0xb8e6, 0xcaba, 0xbcdf, 0x0, 0x0);
        gbc.writeMem(0xb39a, { 0x89 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xeac5, gbc.sp());
        EXPECT(0xb39b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xb39a));
        // 89 018C
        gbc.setState(0x7aa4, 0xc3bd, 0x740, 0x7b7d, 0xd93, 0xcce6, 0x1, 0x0);
        gbc.writeMem(0x7aa4, { 0x89 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xc3bd, gbc.sp());
        EXPECT(0x7aa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 018D
        gbc.setState(0xc8b8, 0xdbb1, 0x9500, 0xe157, 0x78f5, 0x85a, 0x1, 0x0);
        gbc.writeMem(0xc8b8, { 0x89 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xdbb1, gbc.sp());
        EXPECT(0xc8b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xc8b8));
        // 89 018E
        gbc.setState(0x8952, 0x2e26, 0xb250, 0xa792, 0x4c87, 0x4e4e, 0x1, 0x1);
        gbc.writeMem(0x8952, { 0x89 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x2e26, gbc.sp());
        EXPECT(0x8953, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x8952));
        // 89 018F
        gbc.setState(0x395a, 0xe096, 0xe080, 0x1d32, 0x8406, 0xe76, 0x1, 0x0);
        gbc.writeMem(0x395a, { 0x89 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xe096, gbc.sp());
        EXPECT(0x395b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0191
        gbc.setState(0xd691, 0xf956, 0x8ce0, 0x32dc, 0x1fa2, 0xca9c, 0x0, 0x0);
        gbc.writeMem(0xd691, { 0x89 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xf956, gbc.sp());
        EXPECT(0xd692, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xd691));
        // 89 0192
        gbc.setState(0x9003, 0x7ba2, 0xb500, 0x8dad, 0xc563, 0x22ed, 0x1, 0x0);
        gbc.writeMem(0x9003, { 0x89 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x7ba2, gbc.sp());
        EXPECT(0x9004, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x9003));
        // 89 0193
        gbc.setState(0x1b85, 0x183c, 0xa990, 0x6048, 0x31da, 0x675d, 0x0, 0x1);
        gbc.writeMem(0x1b85, { 0x89 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x183c, gbc.sp());
        EXPECT(0x1b86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0194
        gbc.setState(0x3cc4, 0x7961, 0x1830, 0x6473, 0x6dc5, 0xa5b7, 0x1, 0x0);
        gbc.writeMem(0x3cc4, { 0x89 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x7961, gbc.sp());
        EXPECT(0x3cc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0195
        gbc.setState(0x8277, 0xdd7f, 0x7ce0, 0xb7ec, 0x69e1, 0x5bc7, 0x1, 0x1);
        gbc.writeMem(0x8277, { 0x89 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xdd7f, gbc.sp());
        EXPECT(0x8278, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x8277));
        // 89 0196
        gbc.setState(0xafad, 0x70ee, 0x67f0, 0xac97, 0xc32b, 0x5839, 0x0, 0x0);
        gbc.writeMem(0xafad, { 0x89 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x70ee, gbc.sp());
        EXPECT(0xafae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xafad));
        // 89 0197
        gbc.setState(0x80a4, 0x486f, 0x1390, 0xe319, 0xd31a, 0x9e4d, 0x1, 0x0);
        gbc.writeMem(0x80a4, { 0x89 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x486f, gbc.sp());
        EXPECT(0x80a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x80a4));
        // 89 0198
        gbc.setState(0x9c8f, 0x1951, 0xa1c0, 0x6a2, 0xf179, 0xfe53, 0x0, 0x1);
        gbc.writeMem(0x9c8f, { 0x89 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x1951, gbc.sp());
        EXPECT(0x9c90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x9c8f));
        // 89 0199
        gbc.setState(0x9084, 0xd05b, 0xb720, 0x54c6, 0xf71c, 0xd82b, 0x0, 0x0);
        gbc.writeMem(0x9084, { 0x89 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xd05b, gbc.sp());
        EXPECT(0x9085, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x9084));
        // 89 019A
        gbc.setState(0xbf1b, 0xad1c, 0x7130, 0x86e9, 0x52e3, 0xf9a2, 0x0, 0x0);
        gbc.writeMem(0xbf1b, { 0x89 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xad1c, gbc.sp());
        EXPECT(0xbf1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xbf1b));
        // 89 019B
        gbc.setState(0xabe0, 0x56f5, 0xd80, 0x89e0, 0x34f0, 0xfb68, 0x1, 0x1);
        gbc.writeMem(0xabe0, { 0x89 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x56f5, gbc.sp());
        EXPECT(0xabe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xabe0));
        // 89 019C
        gbc.setState(0x190e, 0x593f, 0xb020, 0xb63a, 0xdb5c, 0x972b, 0x0, 0x0);
        gbc.writeMem(0x190e, { 0x89 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x593f, gbc.sp());
        EXPECT(0x190f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 019D
        gbc.setState(0xe5f, 0xb6c6, 0x2040, 0x344b, 0xbd59, 0x6331, 0x1, 0x1);
        gbc.writeMem(0xe5f, { 0x89 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xb6c6, gbc.sp());
        EXPECT(0xe60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 019E
        gbc.setState(0x7bd, 0x6783, 0xa480, 0xbecb, 0xbb6b, 0xb2fe, 0x1, 0x0);
        gbc.writeMem(0x7bd, { 0x89 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x6783, gbc.sp());
        EXPECT(0x7be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 019F
        gbc.setState(0x8936, 0x4b64, 0x190, 0xc514, 0xa226, 0x2029, 0x1, 0x0);
        gbc.writeMem(0x8936, { 0x89 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x4b64, gbc.sp());
        EXPECT(0x8937, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x8936));
        // 89 01A0
        gbc.setState(0x458e, 0x7cfa, 0x1fa0, 0x5003, 0x4a31, 0x9c3d, 0x0, 0x1);
        gbc.writeMem(0x458e, { 0x89 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x7cfa, gbc.sp());
        EXPECT(0x458f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 01A2
        gbc.setState(0x9a83, 0x88fc, 0x9e40, 0x797b, 0xc606, 0x138b, 0x1, 0x0);
        gbc.writeMem(0x9a83, { 0x89 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x88fc, gbc.sp());
        EXPECT(0x9a84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x9a83));
        // 89 01A3
        gbc.setState(0xb198, 0xf1eb, 0x7b70, 0x4d55, 0xa57a, 0x346, 0x1, 0x0);
        gbc.writeMem(0xb198, { 0x89 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xf1eb, gbc.sp());
        EXPECT(0xb199, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xb198));
        // 89 01A4
        gbc.setState(0x9f28, 0x3b25, 0x60e0, 0x63b0, 0x6e56, 0x4c8, 0x1, 0x0);
        gbc.writeMem(0x9f28, { 0x89 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x3b25, gbc.sp());
        EXPECT(0x9f29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x9f28));
        // 89 01A5
        gbc.setState(0x3d2e, 0x8fdc, 0x6510, 0xdb45, 0x3f25, 0x17fa, 0x0, 0x0);
        gbc.writeMem(0x3d2e, { 0x89 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x8fdc, gbc.sp());
        EXPECT(0x3d2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 01A6
        gbc.setState(0xa123, 0xc98e, 0x2fe0, 0x4f95, 0x7c2, 0x6bee, 0x0, 0x0);
        gbc.writeMem(0xa123, { 0x89 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xc98e, gbc.sp());
        EXPECT(0xa124, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xa123));
        // 89 01A8
        gbc.setState(0x6b39, 0xee56, 0x8b20, 0xb36a, 0xd667, 0xbed6, 0x1, 0x0);
        gbc.writeMem(0x6b39, { 0x89 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xee56, gbc.sp());
        EXPECT(0x6b3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 01A9
        gbc.setState(0xc319, 0xbb09, 0xf490, 0xcf1b, 0xdbc4, 0xdda6, 0x0, 0x1);
        gbc.writeMem(0xc319, { 0x89 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xbb09, gbc.sp());
        EXPECT(0xc31a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xc319));
        // 89 01AA
        gbc.setState(0x12cf, 0xfd9f, 0x20c0, 0x78fd, 0x9908, 0xf23b, 0x1, 0x1);
        gbc.writeMem(0x12cf, { 0x89 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xfd9f, gbc.sp());
        EXPECT(0x12d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 01AB
        gbc.setState(0x23dc, 0xaaf4, 0x2fe0, 0x1fb1, 0xa939, 0x6986, 0x1, 0x1);
        gbc.writeMem(0x23dc, { 0x89 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xaaf4, gbc.sp());
        EXPECT(0x23dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 01AC
        gbc.setState(0x9d5b, 0x6c2a, 0xa30, 0x372a, 0x37ba, 0xceaa, 0x1, 0x1);
        gbc.writeMem(0x9d5b, { 0x89 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x6c2a, gbc.sp());
        EXPECT(0x9d5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x9d5b));
        // 89 01AD
        gbc.setState(0xae0e, 0x63ca, 0xff30, 0x965a, 0x58c5, 0x9993, 0x1, 0x0);
        gbc.writeMem(0xae0e, { 0x89 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x63ca, gbc.sp());
        EXPECT(0xae0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xae0e));
        // 89 01AE
        gbc.setState(0xc5e9, 0xa95e, 0x56b0, 0xf102, 0x6202, 0xd271, 0x0, 0x1);
        gbc.writeMem(0xc5e9, { 0x89 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xa95e, gbc.sp());
        EXPECT(0xc5ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xc5e9));
        // 89 01AF
        gbc.setState(0xd1ab, 0x2076, 0x5140, 0xea17, 0x6abc, 0x1704, 0x0, 0x1);
        gbc.writeMem(0xd1ab, { 0x89 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x2076, gbc.sp());
        EXPECT(0xd1ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xd1ab));
        // 89 01B0
        gbc.setState(0x618d, 0xbc4e, 0x72b0, 0x92f0, 0x3394, 0xcdba, 0x0, 0x0);
        gbc.writeMem(0x618d, { 0x89 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xbc4e, gbc.sp());
        EXPECT(0x618e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 01B1
        gbc.setState(0xa5f8, 0x4de5, 0xe70, 0x4453, 0xcb17, 0x9fb2, 0x0, 0x1);
        gbc.writeMem(0xa5f8, { 0x89 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x4de5, gbc.sp());
        EXPECT(0xa5f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xa5f8));
        // 89 01B2
        gbc.setState(0x67eb, 0x2323, 0xd230, 0x5d29, 0x1103, 0x3581, 0x0, 0x0);
        gbc.writeMem(0x67eb, { 0x89 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x2323, gbc.sp());
        EXPECT(0x67ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 01B3
        gbc.setState(0x9970, 0x8745, 0xe0f0, 0x35d5, 0xb46c, 0xcc87, 0x0, 0x1);
        gbc.writeMem(0x9970, { 0x89 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x8745, gbc.sp());
        EXPECT(0x9971, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x9970));
        // 89 01B4
        gbc.setState(0x18ef, 0x5b61, 0xea00, 0x2b57, 0xe9da, 0xf88d, 0x1, 0x0);
        gbc.writeMem(0x18ef, { 0x89 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x5b61, gbc.sp());
        EXPECT(0x18f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 01B5
        gbc.setState(0xcf8d, 0x5d30, 0xb070, 0x6fd5, 0x424d, 0x49e3, 0x1, 0x1);
        gbc.writeMem(0xcf8d, { 0x89 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x5d30, gbc.sp());
        EXPECT(0xcf8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xcf8d));
        // 89 01B6
        gbc.setState(0x7f3f, 0x7311, 0x68f0, 0xc912, 0x675e, 0xc19f, 0x0, 0x1);
        gbc.writeMem(0x7f3f, { 0x89 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x7311, gbc.sp());
        EXPECT(0x7f40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 01B7
        gbc.setState(0x5b5b, 0x34c5, 0xefd0, 0x945e, 0x6dcf, 0xea43, 0x0, 0x1);
        gbc.writeMem(0x5b5b, { 0x89 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x34c5, gbc.sp());
        EXPECT(0x5b5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 01B8
        gbc.setState(0x47dc, 0x7c12, 0xaa0, 0xe942, 0x318a, 0x84d5, 0x0, 0x0);
        gbc.writeMem(0x47dc, { 0x89 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x7c12, gbc.sp());
        EXPECT(0x47dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 01B9
        gbc.setState(0x7c8f, 0x4281, 0xf130, 0x1311, 0x7031, 0x14bd, 0x1, 0x0);
        gbc.writeMem(0x7c8f, { 0x89 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x4281, gbc.sp());
        EXPECT(0x7c90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 01BA
        gbc.setState(0xab31, 0x72d5, 0x66c0, 0x760b, 0xcd66, 0x8dab, 0x1, 0x1);
        gbc.writeMem(0xab31, { 0x89 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x72d5, gbc.sp());
        EXPECT(0xab32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xab31));
        // 89 01BB
        gbc.setState(0x4151, 0x953f, 0xcea0, 0xdbd2, 0x3601, 0xfa59, 0x0, 0x0);
        gbc.writeMem(0x4151, { 0x89 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x953f, gbc.sp());
        EXPECT(0x4152, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 01BC
        gbc.setState(0x2938, 0xb5a8, 0x1d30, 0x3db3, 0x2bcf, 0xbb8d, 0x0, 0x0);
        gbc.writeMem(0x2938, { 0x89 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xb5a8, gbc.sp());
        EXPECT(0x2939, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 01BD
        gbc.setState(0x6a12, 0x31a1, 0x40, 0x1135, 0x4826, 0x2042, 0x1, 0x1);
        gbc.writeMem(0x6a12, { 0x89 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x31a1, gbc.sp());
        EXPECT(0x6a13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 01BE
        gbc.setState(0x62bc, 0x58e0, 0x2900, 0x4c7c, 0x84e8, 0xf83a, 0x1, 0x1);
        gbc.writeMem(0x62bc, { 0x89 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x58e0, gbc.sp());
        EXPECT(0x62bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 01BF
        gbc.setState(0xe983, 0x5ee2, 0xe8a0, 0x5fa2, 0xff37, 0xe1cd, 0x1, 0x0);
        gbc.writeMem(0xe983, { 0x89 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x5ee2, gbc.sp());
        EXPECT(0xe984, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xe983));
        // 89 01C0
        gbc.setState(0x5da9, 0xf194, 0x8e0, 0xdc25, 0xcedf, 0x746f, 0x1, 0x1);
        gbc.writeMem(0x5da9, { 0x89 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xf194, gbc.sp());
        EXPECT(0x5daa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 01C1
        gbc.setState(0x285f, 0xc18c, 0xedd0, 0x10cb, 0xbd1, 0xd689, 0x1, 0x1);
        gbc.writeMem(0x285f, { 0x89 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xc18c, gbc.sp());
        EXPECT(0x2860, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 01C2
        gbc.setState(0x4d5b, 0x17a4, 0x68b0, 0x516f, 0xc469, 0x2072, 0x1, 0x0);
        gbc.writeMem(0x4d5b, { 0x89 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x17a4, gbc.sp());
        EXPECT(0x4d5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 01C3
        gbc.setState(0xf74, 0x94ad, 0x6940, 0xb29b, 0xfd75, 0xbd2d, 0x1, 0x1);
        gbc.writeMem(0xf74, { 0x89 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x94ad, gbc.sp());
        EXPECT(0xf75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 01C4
        gbc.setState(0xb472, 0xa567, 0x2070, 0x7bbb, 0x547, 0xbe9, 0x0, 0x0);
        gbc.writeMem(0xb472, { 0x89 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa567, gbc.sp());
        EXPECT(0xb473, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xb472));
        // 89 01C5
        gbc.setState(0xeb31, 0xca, 0xd250, 0x226a, 0xfd9d, 0x35d8, 0x1, 0x1);
        gbc.writeMem(0xeb31, { 0x89 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xca, gbc.sp());
        EXPECT(0xeb32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xeb31));
        // 89 01C6
        gbc.setState(0x5138, 0xdbc4, 0xe640, 0x3934, 0xff8d, 0x21b4, 0x1, 0x1);
        gbc.writeMem(0x5138, { 0x89 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xdbc4, gbc.sp());
        EXPECT(0x5139, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 01C7
        gbc.setState(0x500a, 0x4b9d, 0xfaf0, 0xf631, 0xafa, 0x159b, 0x0, 0x0);
        gbc.writeMem(0x500a, { 0x89 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x4b9d, gbc.sp());
        EXPECT(0x500b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 01C8
        gbc.setState(0xe507, 0x661a, 0xfd00, 0x509f, 0x69d4, 0xb771, 0x1, 0x1);
        gbc.writeMem(0xe507, { 0x89 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x661a, gbc.sp());
        EXPECT(0xe508, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xe507));
        // 89 01C9
        gbc.setState(0x11ea, 0xa258, 0x76a0, 0x47b3, 0x95f3, 0x8286, 0x1, 0x1);
        gbc.writeMem(0x11ea, { 0x89 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xa258, gbc.sp());
        EXPECT(0x11eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 01CA
        gbc.setState(0xb003, 0x3d6, 0x71b0, 0x6d9e, 0x6fab, 0xa282, 0x1, 0x1);
        gbc.writeMem(0xb003, { 0x89 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x3d6, gbc.sp());
        EXPECT(0xb004, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xb003));
        // 89 01CB
        gbc.setState(0x1002, 0xd27a, 0x9e60, 0xbdda, 0xaa03, 0x270d, 0x1, 0x1);
        gbc.writeMem(0x1002, { 0x89 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xd27a, gbc.sp());
        EXPECT(0x1003, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 01CC
        gbc.setState(0x2959, 0xdaba, 0x4d90, 0x7c82, 0xd0a7, 0x1b84, 0x0, 0x1);
        gbc.writeMem(0x2959, { 0x89 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xdaba, gbc.sp());
        EXPECT(0x295a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 01CD
        gbc.setState(0xac4, 0xda11, 0x6230, 0xd3fa, 0x4fdd, 0x99cc, 0x1, 0x1);
        gbc.writeMem(0xac4, { 0x89 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xda11, gbc.sp());
        EXPECT(0xac5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 01CF
        gbc.setState(0x4b2f, 0xe22d, 0x2490, 0xe354, 0x5909, 0xffdd, 0x0, 0x1);
        gbc.writeMem(0x4b2f, { 0x89 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe22d, gbc.sp());
        EXPECT(0x4b30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 01D0
        gbc.setState(0x582e, 0xf2e7, 0xe6a0, 0xf31c, 0xc1a, 0x2647, 0x1, 0x0);
        gbc.writeMem(0x582e, { 0x89 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xf2e7, gbc.sp());
        EXPECT(0x582f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 01D1
        gbc.setState(0xcd56, 0x34e, 0x6c30, 0x7afa, 0xe500, 0xb2bc, 0x1, 0x1);
        gbc.writeMem(0xcd56, { 0x89 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x34e, gbc.sp());
        EXPECT(0xcd57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xcd56));
        // 89 01D2
        gbc.setState(0x3651, 0x897b, 0xe600, 0xcd1f, 0x4e8, 0xa2e8, 0x0, 0x1);
        gbc.writeMem(0x3651, { 0x89 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x897b, gbc.sp());
        EXPECT(0x3652, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 01D3
        gbc.setState(0xc1f8, 0x32cd, 0x3a0, 0x6ebd, 0x6e91, 0x41c3, 0x0, 0x0);
        gbc.writeMem(0xc1f8, { 0x89 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x32cd, gbc.sp());
        EXPECT(0xc1f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xc1f8));
        // 89 01D4
        gbc.setState(0xb296, 0xdf0d, 0x4980, 0xc82b, 0xf9e7, 0xc32a, 0x0, 0x0);
        gbc.writeMem(0xb296, { 0x89 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xdf0d, gbc.sp());
        EXPECT(0xb297, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xb296));
        // 89 01D5
        gbc.setState(0x6ca2, 0x2758, 0xfe10, 0xd2a5, 0xd6de, 0x498b, 0x0, 0x1);
        gbc.writeMem(0x6ca2, { 0x89 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x2758, gbc.sp());
        EXPECT(0x6ca3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 01D6
        gbc.setState(0xeb5f, 0x14c6, 0x54b0, 0x2269, 0x10b6, 0x48d4, 0x0, 0x0);
        gbc.writeMem(0xeb5f, { 0x89 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x14c6, gbc.sp());
        EXPECT(0xeb60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xeb5f));
        // 89 01D7
        gbc.setState(0x29ba, 0x3de0, 0xbab0, 0x8ebd, 0x7208, 0x29b2, 0x1, 0x0);
        gbc.writeMem(0x29ba, { 0x89 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x3de0, gbc.sp());
        EXPECT(0x29bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 01D9
        gbc.setState(0xcde6, 0xa402, 0xd490, 0x23a7, 0x4fda, 0x5fbc, 0x0, 0x0);
        gbc.writeMem(0xcde6, { 0x89 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xa402, gbc.sp());
        EXPECT(0xcde7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xcde6));
        // 89 01DA
        gbc.setState(0x1c2d, 0x63d5, 0x7770, 0x5b7a, 0x9bfe, 0xb15d, 0x1, 0x1);
        gbc.writeMem(0x1c2d, { 0x89 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x63d5, gbc.sp());
        EXPECT(0x1c2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 01DB
        gbc.setState(0x4801, 0xf90e, 0xf200, 0x6c55, 0x8050, 0xe85d, 0x0, 0x0);
        gbc.writeMem(0x4801, { 0x89 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xf90e, gbc.sp());
        EXPECT(0x4802, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 01DC
        gbc.setState(0x826, 0xf7ec, 0xd600, 0xbbc8, 0x9fc1, 0xf182, 0x1, 0x0);
        gbc.writeMem(0x826, { 0x89 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xf7ec, gbc.sp());
        EXPECT(0x827, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 01DD
        gbc.setState(0x340e, 0xdb7d, 0x6540, 0x81d8, 0x6cab, 0x5a41, 0x1, 0x1);
        gbc.writeMem(0x340e, { 0x89 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xdb7d, gbc.sp());
        EXPECT(0x340f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 01DE
        gbc.setState(0x6e8b, 0xa190, 0xcd80, 0x2448, 0x777f, 0x9114, 0x0, 0x1);
        gbc.writeMem(0x6e8b, { 0x89 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xa190, gbc.sp());
        EXPECT(0x6e8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 01DF
        gbc.setState(0x9aa6, 0x2293, 0x4cb0, 0xb9b5, 0x85c4, 0x7fe5, 0x1, 0x0);
        gbc.writeMem(0x9aa6, { 0x89 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x2293, gbc.sp());
        EXPECT(0x9aa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x9aa6));
        // 89 01E0
        gbc.setState(0x9362, 0x7324, 0x3070, 0x3c70, 0xa378, 0xd2c9, 0x0, 0x1);
        gbc.writeMem(0x9362, { 0x89 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x7324, gbc.sp());
        EXPECT(0x9363, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x9362));
        // 89 01E1
        gbc.setState(0x7f93, 0x996f, 0xd560, 0x7c14, 0x3888, 0x7cc3, 0x1, 0x0);
        gbc.writeMem(0x7f93, { 0x89 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x996f, gbc.sp());
        EXPECT(0x7f94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 01E2
        gbc.setState(0x3e2d, 0x8aa4, 0x3630, 0x3b3a, 0xcea5, 0x7dc3, 0x0, 0x0);
        gbc.writeMem(0x3e2d, { 0x89 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x8aa4, gbc.sp());
        EXPECT(0x3e2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 01E3
        gbc.setState(0x10ac, 0x4929, 0x77d0, 0x9bb1, 0xfa0f, 0x7be1, 0x0, 0x0);
        gbc.writeMem(0x10ac, { 0x89 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x4929, gbc.sp());
        EXPECT(0x10ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 01E4
        gbc.setState(0x1b4, 0xbc43, 0xd340, 0xbdc6, 0x7247, 0xe203, 0x1, 0x1);
        gbc.writeMem(0x1b4, { 0x89 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xbc43, gbc.sp());
        EXPECT(0x1b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 01E5
        gbc.setState(0x2564, 0x3cf0, 0xc980, 0x63d4, 0x7382, 0x8769, 0x0, 0x0);
        gbc.writeMem(0x2564, { 0x89 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x3cf0, gbc.sp());
        EXPECT(0x2565, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 01E6
        gbc.setState(0xadd, 0xa28c, 0x3570, 0x1163, 0xf245, 0x6cee, 0x0, 0x1);
        gbc.writeMem(0xadd, { 0x89 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xa28c, gbc.sp());
        EXPECT(0xade, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 01E7
        gbc.setState(0x97c7, 0x228c, 0x61a0, 0xbe3f, 0xcc78, 0x9265, 0x1, 0x0);
        gbc.writeMem(0x97c7, { 0x89 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x228c, gbc.sp());
        EXPECT(0x97c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x97c7));
        // 89 01E8
        gbc.setState(0x9be9, 0x88e5, 0x350, 0x3884, 0x2165, 0xf482, 0x0, 0x0);
        gbc.writeMem(0x9be9, { 0x89 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x88e5, gbc.sp());
        EXPECT(0x9bea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x9be9));
        // 89 01E9
        gbc.setState(0x686e, 0xac29, 0xf4d0, 0x86c1, 0x230a, 0x6f55, 0x0, 0x0);
        gbc.writeMem(0x686e, { 0x89 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xac29, gbc.sp());
        EXPECT(0x686f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 01EA
        gbc.setState(0xb3ad, 0x644, 0xdf00, 0xe441, 0x9b2, 0xb81b, 0x0, 0x1);
        gbc.writeMem(0xb3ad, { 0x89 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x644, gbc.sp());
        EXPECT(0xb3ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xb3ad));
        // 89 01EB
        gbc.setState(0x5777, 0xb650, 0x83b0, 0xaa4b, 0xe1ce, 0x7210, 0x1, 0x1);
        gbc.writeMem(0x5777, { 0x89 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xb650, gbc.sp());
        EXPECT(0x5778, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 01EC
        gbc.setState(0xce6b, 0xbf86, 0x7f0, 0x8c9a, 0x5015, 0x823e, 0x0, 0x1);
        gbc.writeMem(0xce6b, { 0x89 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xbf86, gbc.sp());
        EXPECT(0xce6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xce6b));
        // 89 01ED
        gbc.setState(0x4f49, 0xc664, 0xf010, 0xfd62, 0x136a, 0xda3d, 0x0, 0x1);
        gbc.writeMem(0x4f49, { 0x89 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xc664, gbc.sp());
        EXPECT(0x4f4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 01EE
        gbc.setState(0xef1c, 0x34d0, 0xe520, 0xca96, 0x8673, 0xa11e, 0x1, 0x0);
        gbc.writeMem(0xef1c, { 0x89 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x34d0, gbc.sp());
        EXPECT(0xef1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xef1c));
        // 89 01EF
        gbc.setState(0x6313, 0x5fed, 0x7a0, 0x5bf4, 0x4d8a, 0xcfd7, 0x1, 0x1);
        gbc.writeMem(0x6313, { 0x89 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x5fed, gbc.sp());
        EXPECT(0x6314, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 01F0
        gbc.setState(0x2c92, 0xbeb0, 0x2c80, 0xdf95, 0x51ec, 0xbb8a, 0x1, 0x1);
        gbc.writeMem(0x2c92, { 0x89 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xbeb0, gbc.sp());
        EXPECT(0x2c93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 01F1
        gbc.setState(0x156, 0xc14d, 0xb4c0, 0xac6a, 0x1b42, 0xb881, 0x1, 0x0);
        gbc.writeMem(0x156, { 0x89 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xc14d, gbc.sp());
        EXPECT(0x157, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 01F2
        gbc.setState(0xadc3, 0x6f74, 0x850, 0xe447, 0x4e21, 0xff0d, 0x0, 0x0);
        gbc.writeMem(0xadc3, { 0x89 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x6f74, gbc.sp());
        EXPECT(0xadc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xadc3));
        // 89 01F3
        gbc.setState(0x34c9, 0xd13f, 0xcd40, 0x6f62, 0xcbe7, 0xc581, 0x0, 0x1);
        gbc.writeMem(0x34c9, { 0x89 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xd13f, gbc.sp());
        EXPECT(0x34ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 01F4
        gbc.setState(0x2ac7, 0xb3fb, 0xb120, 0xbdc2, 0xfc50, 0x1488, 0x0, 0x0);
        gbc.writeMem(0x2ac7, { 0x89 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xb3fb, gbc.sp());
        EXPECT(0x2ac8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 01F6
        gbc.setState(0xa18, 0x71b9, 0x5b50, 0xffbb, 0x19e9, 0x7d3d, 0x0, 0x0);
        gbc.writeMem(0xa18, { 0x89 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x71b9, gbc.sp());
        EXPECT(0xa19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 01F7
        gbc.setState(0x5a93, 0x143d, 0x6f40, 0xd77c, 0xa887, 0x11ee, 0x1, 0x1);
        gbc.writeMem(0x5a93, { 0x89 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x143d, gbc.sp());
        EXPECT(0x5a94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 01F8
        gbc.setState(0x1ebb, 0xf748, 0xfd90, 0xc6d9, 0xe298, 0x95a8, 0x0, 0x0);
        gbc.writeMem(0x1ebb, { 0x89 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xf748, gbc.sp());
        EXPECT(0x1ebc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 01F9
        gbc.setState(0xef6d, 0xc7e0, 0xa460, 0x1561, 0x7532, 0xed69, 0x0, 0x1);
        gbc.writeMem(0xef6d, { 0x89 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xc7e0, gbc.sp());
        EXPECT(0xef6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xef6d));
        // 89 01FA
        gbc.setState(0xabd3, 0xec4f, 0x5b00, 0x60cb, 0xf0fc, 0x4461, 0x0, 0x1);
        gbc.writeMem(0xabd3, { 0x89 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xec4f, gbc.sp());
        EXPECT(0xabd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xabd3));
        // 89 01FB
        gbc.setState(0xcc9a, 0xbadd, 0xb6b0, 0xcde4, 0xd8fc, 0xcfc3, 0x1, 0x1);
        gbc.writeMem(0xcc9a, { 0x89 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xbadd, gbc.sp());
        EXPECT(0xcc9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xcc9a));
        // 89 01FC
        gbc.setState(0xef0d, 0x8883, 0x4100, 0xba29, 0x79f9, 0x40bf, 0x1, 0x1);
        gbc.writeMem(0xef0d, { 0x89 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x8883, gbc.sp());
        EXPECT(0xef0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xef0d));
        // 89 01FD
        gbc.setState(0xce00, 0xbdd4, 0xacf0, 0x5da6, 0xcdd7, 0x7f5b, 0x1, 0x0);
        gbc.writeMem(0xce00, { 0x89 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xbdd4, gbc.sp());
        EXPECT(0xce01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xce00));
        // 89 01FE
        gbc.setState(0x2c3b, 0x2e31, 0xca0, 0x90d3, 0xdb78, 0x81d2, 0x0, 0x1);
        gbc.writeMem(0x2c3b, { 0x89 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x2e31, gbc.sp());
        EXPECT(0x2c3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0200
        gbc.setState(0x4e43, 0xa6f7, 0xe20, 0xcb83, 0x3f16, 0xeada, 0x0, 0x1);
        gbc.writeMem(0x4e43, { 0x89 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xa6f7, gbc.sp());
        EXPECT(0x4e44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0201
        gbc.setState(0xccbc, 0x78f, 0x1af0, 0x288d, 0x24c3, 0xa857, 0x1, 0x1);
        gbc.writeMem(0xccbc, { 0x89 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x78f, gbc.sp());
        EXPECT(0xccbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xccbc));
        // 89 0203
        gbc.setState(0xc8d5, 0x9247, 0xd040, 0x4729, 0x7225, 0x2eb9, 0x1, 0x0);
        gbc.writeMem(0xc8d5, { 0x89 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x9247, gbc.sp());
        EXPECT(0xc8d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xc8d5));
        // 89 0204
        gbc.setState(0x2fb0, 0xa063, 0x27b0, 0x47cc, 0x40e0, 0x7fbb, 0x0, 0x0);
        gbc.writeMem(0x2fb0, { 0x89 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xa063, gbc.sp());
        EXPECT(0x2fb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0205
        gbc.setState(0x86f2, 0xe188, 0xb10, 0x45ea, 0x87e9, 0xce2f, 0x0, 0x1);
        gbc.writeMem(0x86f2, { 0x89 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xe188, gbc.sp());
        EXPECT(0x86f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x86f2));
        // 89 0206
        gbc.setState(0x3ff0, 0xed20, 0x8310, 0x22cc, 0x505, 0xcae0, 0x1, 0x0);
        gbc.writeMem(0x3ff0, { 0x89 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xed20, gbc.sp());
        EXPECT(0x3ff1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0207
        gbc.setState(0x7b12, 0xed0f, 0xbb40, 0x4123, 0x9a91, 0xa890, 0x1, 0x0);
        gbc.writeMem(0x7b12, { 0x89 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xed0f, gbc.sp());
        EXPECT(0x7b13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0208
        gbc.setState(0x9b9, 0x12fc, 0xec80, 0xedb8, 0xb0c5, 0xe61e, 0x1, 0x0);
        gbc.writeMem(0x9b9, { 0x89 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x12fc, gbc.sp());
        EXPECT(0x9ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0209
        gbc.setState(0x373e, 0x9169, 0xbf0, 0x2d1c, 0x7109, 0x6455, 0x1, 0x1);
        gbc.writeMem(0x373e, { 0x89 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x9169, gbc.sp());
        EXPECT(0x373f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 020A
        gbc.setState(0x8729, 0xc442, 0x27a0, 0xb5c7, 0x46cd, 0x938e, 0x0, 0x0);
        gbc.writeMem(0x8729, { 0x89 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xc442, gbc.sp());
        EXPECT(0x872a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x8729));
        // 89 020B
        gbc.setState(0x9b24, 0x6b51, 0x96d0, 0x4db8, 0xe865, 0x3583, 0x0, 0x1);
        gbc.writeMem(0x9b24, { 0x89 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x6b51, gbc.sp());
        EXPECT(0x9b25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x9b24));
        // 89 020C
        gbc.setState(0x1282, 0x2821, 0xd270, 0xbe97, 0x2cf9, 0x1c53, 0x0, 0x1);
        gbc.writeMem(0x1282, { 0x89 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x2821, gbc.sp());
        EXPECT(0x1283, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 020D
        gbc.setState(0x6325, 0xa55a, 0x1fb0, 0x98d3, 0x3302, 0x8be7, 0x0, 0x0);
        gbc.writeMem(0x6325, { 0x89 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xa55a, gbc.sp());
        EXPECT(0x6326, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 020E
        gbc.setState(0xe92e, 0xe810, 0x5f60, 0x28f9, 0xab1, 0xf0cf, 0x1, 0x1);
        gbc.writeMem(0xe92e, { 0x89 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xe810, gbc.sp());
        EXPECT(0xe92f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xe92e));
        // 89 020F
        gbc.setState(0x8e0, 0x5436, 0x9560, 0x5762, 0xefa4, 0x2f13, 0x0, 0x0);
        gbc.writeMem(0x8e0, { 0x89 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x5436, gbc.sp());
        EXPECT(0x8e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0210
        gbc.setState(0x569, 0x4f8a, 0xea80, 0xca16, 0x7322, 0xc883, 0x1, 0x0);
        gbc.writeMem(0x569, { 0x89 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x4f8a, gbc.sp());
        EXPECT(0x56a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0211
        gbc.setState(0xb890, 0xcb6d, 0xa810, 0xa0c6, 0xb45c, 0x6745, 0x1, 0x0);
        gbc.writeMem(0xb890, { 0x89 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xcb6d, gbc.sp());
        EXPECT(0xb891, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xb890));
        // 89 0212
        gbc.setState(0x36d5, 0x1114, 0xf210, 0xd0d8, 0x88cc, 0x22f7, 0x1, 0x0);
        gbc.writeMem(0x36d5, { 0x89 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x1114, gbc.sp());
        EXPECT(0x36d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0213
        gbc.setState(0x4730, 0x6c29, 0x7600, 0x707d, 0xc4dc, 0xc04f, 0x0, 0x1);
        gbc.writeMem(0x4730, { 0x89 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x6c29, gbc.sp());
        EXPECT(0x4731, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0214
        gbc.setState(0x6ce5, 0xe5c8, 0xd80, 0x474b, 0x56bf, 0xd8a9, 0x1, 0x0);
        gbc.writeMem(0x6ce5, { 0x89 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xe5c8, gbc.sp());
        EXPECT(0x6ce6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0215
        gbc.setState(0xe876, 0x2aa5, 0x9700, 0x64b6, 0xbcc2, 0x260f, 0x0, 0x0);
        gbc.writeMem(0xe876, { 0x89 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x2aa5, gbc.sp());
        EXPECT(0xe877, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xe876));
        // 89 0216
        gbc.setState(0x3da9, 0x3ef0, 0x1cc0, 0x9b7, 0x9c28, 0xbd4, 0x0, 0x1);
        gbc.writeMem(0x3da9, { 0x89 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x3ef0, gbc.sp());
        EXPECT(0x3daa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0217
        gbc.setState(0xd68d, 0x31bb, 0x3370, 0x81e7, 0xf8aa, 0x695f, 0x0, 0x1);
        gbc.writeMem(0xd68d, { 0x89 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x31bb, gbc.sp());
        EXPECT(0xd68e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xd68d));
        // 89 0218
        gbc.setState(0xb390, 0x8392, 0xf50, 0x96ae, 0xfe16, 0x3427, 0x1, 0x0);
        gbc.writeMem(0xb390, { 0x89 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x8392, gbc.sp());
        EXPECT(0xb391, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xb390));
        // 89 0219
        gbc.setState(0x4afb, 0x7572, 0xa900, 0x1e7b, 0x619e, 0xc5, 0x0, 0x1);
        gbc.writeMem(0x4afb, { 0x89 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x7572, gbc.sp());
        EXPECT(0x4afc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 021A
        gbc.setState(0x9eeb, 0x8561, 0x6160, 0xf615, 0x1db5, 0x7d09, 0x1, 0x1);
        gbc.writeMem(0x9eeb, { 0x89 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x8561, gbc.sp());
        EXPECT(0x9eec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x9eeb));
        // 89 021B
        gbc.setState(0x43bf, 0x7fa8, 0x8070, 0x9172, 0xe51f, 0x6830, 0x0, 0x1);
        gbc.writeMem(0x43bf, { 0x89 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x7fa8, gbc.sp());
        EXPECT(0x43c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 021C
        gbc.setState(0xb457, 0x9782, 0x8240, 0xcd59, 0x1179, 0x8c7a, 0x1, 0x1);
        gbc.writeMem(0xb457, { 0x89 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x9782, gbc.sp());
        EXPECT(0xb458, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xb457));
        // 89 021D
        gbc.setState(0x796b, 0x9ac8, 0x4840, 0x3827, 0xa88b, 0xb9ff, 0x0, 0x1);
        gbc.writeMem(0x796b, { 0x89 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x9ac8, gbc.sp());
        EXPECT(0x796c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 021E
        gbc.setState(0xb592, 0xe609, 0x5c00, 0xd265, 0xde0f, 0xd2ef, 0x0, 0x0);
        gbc.writeMem(0xb592, { 0x89 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xe609, gbc.sp());
        EXPECT(0xb593, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xb592));
        // 89 021F
        gbc.setState(0xd2d, 0xadf7, 0x8c80, 0x4a13, 0xd989, 0xfabe, 0x0, 0x1);
        gbc.writeMem(0xd2d, { 0x89 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xadf7, gbc.sp());
        EXPECT(0xd2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0220
        gbc.setState(0x1410, 0xfb64, 0xf170, 0x65f7, 0x86d6, 0x41a4, 0x1, 0x1);
        gbc.writeMem(0x1410, { 0x89 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xfb64, gbc.sp());
        EXPECT(0x1411, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0221
        gbc.setState(0xb003, 0x931e, 0xa710, 0x74a8, 0xf59b, 0xafea, 0x0, 0x1);
        gbc.writeMem(0xb003, { 0x89 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x931e, gbc.sp());
        EXPECT(0xb004, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xb003));
        // 89 0223
        gbc.setState(0x82e3, 0x48fb, 0xd7b0, 0x5dfb, 0xc717, 0xf227, 0x0, 0x1);
        gbc.writeMem(0x82e3, { 0x89 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x48fb, gbc.sp());
        EXPECT(0x82e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x82e3));
        // 89 0224
        gbc.setState(0x22a4, 0xd76b, 0x5e0, 0xcded, 0x92bc, 0xac93, 0x1, 0x0);
        gbc.writeMem(0x22a4, { 0x89 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xd76b, gbc.sp());
        EXPECT(0x22a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0225
        gbc.setState(0xc8f8, 0xc579, 0xa240, 0xb0a3, 0x91b6, 0xcb9b, 0x1, 0x1);
        gbc.writeMem(0xc8f8, { 0x89 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xc579, gbc.sp());
        EXPECT(0xc8f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xc8f8));
        // 89 0226
        gbc.setState(0xc452, 0x3d8f, 0x6e60, 0x736f, 0x1296, 0x3274, 0x0, 0x1);
        gbc.writeMem(0xc452, { 0x89 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x3d8f, gbc.sp());
        EXPECT(0xc453, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xc452));
        // 89 0227
        gbc.setState(0xd78a, 0x1a8f, 0xb410, 0xd3ad, 0x56f6, 0xde95, 0x0, 0x0);
        gbc.writeMem(0xd78a, { 0x89 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x1a8f, gbc.sp());
        EXPECT(0xd78b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xd78a));
        // 89 0228
        gbc.setState(0x6dec, 0x5bb6, 0xe830, 0xdcd5, 0xaa0f, 0x8bb3, 0x0, 0x1);
        gbc.writeMem(0x6dec, { 0x89 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x5bb6, gbc.sp());
        EXPECT(0x6ded, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0229
        gbc.setState(0x3190, 0xe733, 0xd740, 0x425c, 0x52d6, 0x545d, 0x0, 0x0);
        gbc.writeMem(0x3190, { 0x89 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xe733, gbc.sp());
        EXPECT(0x3191, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 022A
        gbc.setState(0xa841, 0x2bb6, 0xac0, 0x69d, 0x9a8, 0x958a, 0x0, 0x1);
        gbc.writeMem(0xa841, { 0x89 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x2bb6, gbc.sp());
        EXPECT(0xa842, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xa841));
        // 89 022B
        gbc.setState(0x132, 0xb2db, 0xaef0, 0xb258, 0xa54c, 0x4b52, 0x0, 0x0);
        gbc.writeMem(0x132, { 0x89 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xb2db, gbc.sp());
        EXPECT(0x133, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 022C
        gbc.setState(0x158f, 0xac04, 0x5b00, 0x785d, 0xdb16, 0x4f54, 0x0, 0x0);
        gbc.writeMem(0x158f, { 0x89 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xac04, gbc.sp());
        EXPECT(0x1590, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 022D
        gbc.setState(0x757b, 0x797e, 0xfdf0, 0x81a0, 0x9d93, 0x7626, 0x0, 0x0);
        gbc.writeMem(0x757b, { 0x89 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x797e, gbc.sp());
        EXPECT(0x757c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 022E
        gbc.setState(0x2c6e, 0x2588, 0xbb40, 0xba63, 0x7ed5, 0x37e1, 0x1, 0x0);
        gbc.writeMem(0x2c6e, { 0x89 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x2588, gbc.sp());
        EXPECT(0x2c6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 022F
        gbc.setState(0xc998, 0x614e, 0xba00, 0x82c9, 0x2bc6, 0x1abb, 0x1, 0x1);
        gbc.writeMem(0xc998, { 0x89 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x614e, gbc.sp());
        EXPECT(0xc999, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xc998));
        // 89 0230
        gbc.setState(0x8445, 0x8dfe, 0x7290, 0x2e79, 0xc761, 0xc2b7, 0x0, 0x1);
        gbc.writeMem(0x8445, { 0x89 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x8dfe, gbc.sp());
        EXPECT(0x8446, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x8445));
        // 89 0231
        gbc.setState(0x18b4, 0x369d, 0xff40, 0x861, 0xc8f, 0x508e, 0x0, 0x1);
        gbc.writeMem(0x18b4, { 0x89 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x369d, gbc.sp());
        EXPECT(0x18b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0232
        gbc.setState(0xde5b, 0xe774, 0xecc0, 0x94de, 0xecf2, 0xedaf, 0x0, 0x0);
        gbc.writeMem(0xde5b, { 0x89 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xe774, gbc.sp());
        EXPECT(0xde5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xde5b));
        // 89 0234
        gbc.setState(0x63c1, 0x8095, 0x38e0, 0xef71, 0xb92e, 0x4f6d, 0x0, 0x0);
        gbc.writeMem(0x63c1, { 0x89 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x8095, gbc.sp());
        EXPECT(0x63c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0235
        gbc.setState(0x4455, 0xfbb3, 0x6ad0, 0x3838, 0x6ba4, 0xd964, 0x1, 0x1);
        gbc.writeMem(0x4455, { 0x89 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xfbb3, gbc.sp());
        EXPECT(0x4456, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0236
        gbc.setState(0xd19b, 0x3c72, 0xeb30, 0x8819, 0x6625, 0xa2, 0x1, 0x1);
        gbc.writeMem(0xd19b, { 0x89 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x3c72, gbc.sp());
        EXPECT(0xd19c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xd19b));
        // 89 0237
        gbc.setState(0x6da0, 0x48a8, 0x4a50, 0xdc4d, 0x5c36, 0xb9e2, 0x0, 0x0);
        gbc.writeMem(0x6da0, { 0x89 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x48a8, gbc.sp());
        EXPECT(0x6da1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0238
        gbc.setState(0xa3af, 0x8213, 0x9180, 0xb131, 0x4d6a, 0xd2dd, 0x1, 0x1);
        gbc.writeMem(0xa3af, { 0x89 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x8213, gbc.sp());
        EXPECT(0xa3b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xa3af));
        // 89 0239
        gbc.setState(0xb3fb, 0xd50d, 0x8ff0, 0xc9ae, 0x4687, 0xdd00, 0x1, 0x1);
        gbc.writeMem(0xb3fb, { 0x89 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xd50d, gbc.sp());
        EXPECT(0xb3fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xb3fb));
        // 89 023A
        gbc.setState(0xa9ef, 0xe290, 0xdeb0, 0xfcd2, 0x6044, 0xfc0, 0x0, 0x1);
        gbc.writeMem(0xa9ef, { 0x89 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xe290, gbc.sp());
        EXPECT(0xa9f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xa9ef));
        // 89 023B
        gbc.setState(0xc8c5, 0x42aa, 0x16a0, 0xb8ce, 0x1a31, 0x7bb9, 0x1, 0x1);
        gbc.writeMem(0xc8c5, { 0x89 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x42aa, gbc.sp());
        EXPECT(0xc8c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xc8c5));
        // 89 023C
        gbc.setState(0x1c13, 0xb55, 0x30f0, 0x37cf, 0x3da2, 0xbb2b, 0x0, 0x1);
        gbc.writeMem(0x1c13, { 0x89 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xb55, gbc.sp());
        EXPECT(0x1c14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 023D
        gbc.setState(0xeee7, 0x8543, 0xefe0, 0xdf62, 0xdfdf, 0x4124, 0x0, 0x0);
        gbc.writeMem(0xeee7, { 0x89 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x8543, gbc.sp());
        EXPECT(0xeee8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xeee7));
        // 89 023E
        gbc.setState(0x13ff, 0x9e55, 0xca10, 0xb6e1, 0x7e37, 0x8fbd, 0x0, 0x0);
        gbc.writeMem(0x13ff, { 0x89 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x9e55, gbc.sp());
        EXPECT(0x1400, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0240
        gbc.setState(0x215, 0x2236, 0x6050, 0x3c58, 0x7c1, 0x5161, 0x1, 0x0);
        gbc.writeMem(0x215, { 0x89 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x2236, gbc.sp());
        EXPECT(0x216, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0241
        gbc.setState(0xec3, 0x82ad, 0xbcc0, 0xb724, 0xf25, 0xad56, 0x0, 0x1);
        gbc.writeMem(0xec3, { 0x89 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x82ad, gbc.sp());
        EXPECT(0xec4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0242
        gbc.setState(0xec6f, 0x7b76, 0x2f70, 0x2604, 0x561d, 0xceb1, 0x0, 0x1);
        gbc.writeMem(0xec6f, { 0x89 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x7b76, gbc.sp());
        EXPECT(0xec70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xec6f));
        // 89 0243
        gbc.setState(0x85bb, 0xf684, 0xda40, 0x85a7, 0x3e59, 0x2036, 0x1, 0x1);
        gbc.writeMem(0x85bb, { 0x89 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xf684, gbc.sp());
        EXPECT(0x85bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x85bb));
        // 89 0244
        gbc.setState(0x24f6, 0xfdb7, 0xc6d0, 0x69bc, 0xeb39, 0x82bb, 0x0, 0x1);
        gbc.writeMem(0x24f6, { 0x89 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xfdb7, gbc.sp());
        EXPECT(0x24f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0245
        gbc.setState(0x981e, 0x2ed5, 0xb100, 0x6890, 0xdd6e, 0xcb24, 0x0, 0x0);
        gbc.writeMem(0x981e, { 0x89 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x2ed5, gbc.sp());
        EXPECT(0x981f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x981e));
        // 89 0246
        gbc.setState(0x7274, 0x9596, 0x1060, 0x8f79, 0xcdf9, 0x3225, 0x0, 0x0);
        gbc.writeMem(0x7274, { 0x89 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x9596, gbc.sp());
        EXPECT(0x7275, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0247
        gbc.setState(0xa2b5, 0x3c48, 0x6330, 0xbdcd, 0x52b7, 0x6044, 0x0, 0x1);
        gbc.writeMem(0xa2b5, { 0x89 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x3c48, gbc.sp());
        EXPECT(0xa2b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xa2b5));
        // 89 0248
        gbc.setState(0xb62b, 0x664c, 0x7f30, 0x64e8, 0x9728, 0x7248, 0x0, 0x0);
        gbc.writeMem(0xb62b, { 0x89 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x664c, gbc.sp());
        EXPECT(0xb62c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xb62b));
        // 89 0249
        gbc.setState(0x1f60, 0xa29e, 0x530, 0x63ca, 0x2819, 0x4ae6, 0x1, 0x1);
        gbc.writeMem(0x1f60, { 0x89 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xa29e, gbc.sp());
        EXPECT(0x1f61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 024A
        gbc.setState(0xd877, 0xeeb1, 0xd60, 0xaf67, 0xfdc3, 0xea67, 0x1, 0x0);
        gbc.writeMem(0xd877, { 0x89 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xeeb1, gbc.sp());
        EXPECT(0xd878, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xd877));
        // 89 024B
        gbc.setState(0x92e9, 0x7c99, 0x3d60, 0xd022, 0xd90, 0x1be9, 0x0, 0x1);
        gbc.writeMem(0x92e9, { 0x89 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x7c99, gbc.sp());
        EXPECT(0x92ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x92e9));
        // 89 024C
        gbc.setState(0xa7e, 0x1f47, 0xc770, 0xd6b7, 0x5a0, 0x253e, 0x1, 0x0);
        gbc.writeMem(0xa7e, { 0x89 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x1f47, gbc.sp());
        EXPECT(0xa7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 024D
        gbc.setState(0x182, 0xe942, 0xd070, 0x16f0, 0x8f6d, 0x4969, 0x1, 0x1);
        gbc.writeMem(0x182, { 0x89 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xe942, gbc.sp());
        EXPECT(0x183, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 024E
        gbc.setState(0xa63d, 0xc6f6, 0xa190, 0xac0c, 0xbb94, 0x18c5, 0x0, 0x0);
        gbc.writeMem(0xa63d, { 0x89 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xc6f6, gbc.sp());
        EXPECT(0xa63e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xa63d));
        // 89 024F
        gbc.setState(0xa2b9, 0x5aa8, 0xd0, 0x992c, 0xaad7, 0x3596, 0x1, 0x1);
        gbc.writeMem(0xa2b9, { 0x89 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x5aa8, gbc.sp());
        EXPECT(0xa2ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xa2b9));
        // 89 0250
        gbc.setState(0x6f33, 0x58fb, 0x3d60, 0x35bb, 0x7895, 0x691a, 0x1, 0x1);
        gbc.writeMem(0x6f33, { 0x89 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x58fb, gbc.sp());
        EXPECT(0x6f34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0251
        gbc.setState(0xa644, 0xfd6, 0xd220, 0x3c13, 0x30ca, 0x1cd0, 0x1, 0x1);
        gbc.writeMem(0xa644, { 0x89 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xfd6, gbc.sp());
        EXPECT(0xa645, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xa644));
        // 89 0252
        gbc.setState(0xc8f5, 0xe16a, 0xb680, 0x50e8, 0xf935, 0x8537, 0x1, 0x0);
        gbc.writeMem(0xc8f5, { 0x89 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xe16a, gbc.sp());
        EXPECT(0xc8f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xc8f5));
        // 89 0253
        gbc.setState(0x424d, 0x178d, 0xa890, 0x7bf3, 0x1f33, 0x6c1d, 0x0, 0x1);
        gbc.writeMem(0x424d, { 0x89 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x178d, gbc.sp());
        EXPECT(0x424e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0254
        gbc.setState(0x9f4, 0xff4f, 0x93a0, 0x6dae, 0x1d45, 0x2019, 0x1, 0x1);
        gbc.writeMem(0x9f4, { 0x89 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xff4f, gbc.sp());
        EXPECT(0x9f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0256
        gbc.setState(0x3fe1, 0x4834, 0x4f50, 0xa928, 0xd625, 0x8728, 0x1, 0x0);
        gbc.writeMem(0x3fe1, { 0x89 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x4834, gbc.sp());
        EXPECT(0x3fe2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0257
        gbc.setState(0xa484, 0x303a, 0xf320, 0x9121, 0x1075, 0x499, 0x1, 0x1);
        gbc.writeMem(0xa484, { 0x89 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x303a, gbc.sp());
        EXPECT(0xa485, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xa484));
        // 89 0258
        gbc.setState(0xe433, 0xc89a, 0xa80, 0x139a, 0xbb64, 0xb6a7, 0x1, 0x1);
        gbc.writeMem(0xe433, { 0x89 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xc89a, gbc.sp());
        EXPECT(0xe434, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xe433));
        // 89 0259
        gbc.setState(0xafb0, 0xaf17, 0xa130, 0x1be3, 0xb472, 0xedd7, 0x1, 0x0);
        gbc.writeMem(0xafb0, { 0x89 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xaf17, gbc.sp());
        EXPECT(0xafb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xafb0));
        // 89 025A
        gbc.setState(0xa725, 0xb319, 0xab10, 0xab05, 0xaacf, 0x9f92, 0x1, 0x0);
        gbc.writeMem(0xa725, { 0x89 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xb319, gbc.sp());
        EXPECT(0xa726, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xa725));
        // 89 025D
        gbc.setState(0xe4d7, 0x15c1, 0xe550, 0xc71d, 0xa888, 0x2cea, 0x0, 0x1);
        gbc.writeMem(0xe4d7, { 0x89 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x15c1, gbc.sp());
        EXPECT(0xe4d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xe4d7));
        // 89 025E
        gbc.setState(0x19eb, 0xaaef, 0x2600, 0xfbfa, 0xec92, 0x13c6, 0x0, 0x1);
        gbc.writeMem(0x19eb, { 0x89 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xaaef, gbc.sp());
        EXPECT(0x19ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 025F
        gbc.setState(0x4c81, 0x7802, 0xe450, 0xb757, 0x56cf, 0x4472, 0x0, 0x1);
        gbc.writeMem(0x4c81, { 0x89 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x7802, gbc.sp());
        EXPECT(0x4c82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0260
        gbc.setState(0x55dd, 0x844b, 0x5880, 0xb68b, 0x2da2, 0xbd43, 0x0, 0x0);
        gbc.writeMem(0x55dd, { 0x89 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x844b, gbc.sp());
        EXPECT(0x55de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0261
        gbc.setState(0xd2ee, 0x5f5c, 0x1a40, 0x1f6d, 0x909, 0x4083, 0x0, 0x0);
        gbc.writeMem(0xd2ee, { 0x89 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x5f5c, gbc.sp());
        EXPECT(0xd2ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xd2ee));
        // 89 0262
        gbc.setState(0xaa9b, 0x4189, 0xf770, 0x8f07, 0xcd15, 0xe798, 0x1, 0x1);
        gbc.writeMem(0xaa9b, { 0x89 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x4189, gbc.sp());
        EXPECT(0xaa9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xaa9b));
        // 89 0263
        gbc.setState(0x43cd, 0x59ca, 0x7c20, 0x789f, 0x10e8, 0xa824, 0x1, 0x1);
        gbc.writeMem(0x43cd, { 0x89 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x59ca, gbc.sp());
        EXPECT(0x43ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0264
        gbc.setState(0xe965, 0xdc2f, 0x90d0, 0xac02, 0xc933, 0x8284, 0x0, 0x1);
        gbc.writeMem(0xe965, { 0x89 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xdc2f, gbc.sp());
        EXPECT(0xe966, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xe965));
        // 89 0265
        gbc.setState(0xfb9, 0xb4e7, 0xa0c0, 0xee3f, 0x8f68, 0xa6cd, 0x0, 0x1);
        gbc.writeMem(0xfb9, { 0x89 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xb4e7, gbc.sp());
        EXPECT(0xfba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0266
        gbc.setState(0x5e0b, 0xa8b6, 0xd460, 0x1e31, 0xd661, 0xb50f, 0x0, 0x1);
        gbc.writeMem(0x5e0b, { 0x89 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xa8b6, gbc.sp());
        EXPECT(0x5e0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0267
        gbc.setState(0x2f7, 0xb2f, 0x68b0, 0xa0fe, 0x8b1b, 0xe10d, 0x0, 0x1);
        gbc.writeMem(0x2f7, { 0x89 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xb2f, gbc.sp());
        EXPECT(0x2f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0268
        gbc.setState(0xce1c, 0x9b72, 0xc270, 0x4604, 0x68bc, 0x1870, 0x1, 0x0);
        gbc.writeMem(0xce1c, { 0x89 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x9b72, gbc.sp());
        EXPECT(0xce1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xce1c));
        // 89 0269
        gbc.setState(0xc425, 0xa319, 0x2ea0, 0xc61c, 0x8ad3, 0xc5c1, 0x1, 0x1);
        gbc.writeMem(0xc425, { 0x89 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xa319, gbc.sp());
        EXPECT(0xc426, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xc425));
        // 89 026A
        gbc.setState(0xb382, 0x29b, 0xc5f0, 0x87c9, 0xcd68, 0x1de8, 0x1, 0x0);
        gbc.writeMem(0xb382, { 0x89 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x29b, gbc.sp());
        EXPECT(0xb383, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xb382));
        // 89 026B
        gbc.setState(0x9741, 0xd0d, 0x7c30, 0xb613, 0x8294, 0x91a6, 0x1, 0x1);
        gbc.writeMem(0x9741, { 0x89 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xd0d, gbc.sp());
        EXPECT(0x9742, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x9741));
        // 89 026C
        gbc.setState(0x7373, 0x3b4e, 0x1b90, 0x4531, 0x561d, 0xe29d, 0x1, 0x0);
        gbc.writeMem(0x7373, { 0x89 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x3b4e, gbc.sp());
        EXPECT(0x7374, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 026D
        gbc.setState(0x523a, 0xb5c1, 0x9130, 0x2057, 0x7558, 0xd865, 0x0, 0x0);
        gbc.writeMem(0x523a, { 0x89 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xb5c1, gbc.sp());
        EXPECT(0x523b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 026E
        gbc.setState(0x76dc, 0x9960, 0xb4c0, 0xb20f, 0xeed1, 0x375a, 0x1, 0x1);
        gbc.writeMem(0x76dc, { 0x89 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x9960, gbc.sp());
        EXPECT(0x76dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 026F
        gbc.setState(0xa130, 0xd745, 0x1aa0, 0x9b27, 0x57f2, 0xf58a, 0x1, 0x1);
        gbc.writeMem(0xa130, { 0x89 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xd745, gbc.sp());
        EXPECT(0xa131, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xa130));
        // 89 0270
        gbc.setState(0x300, 0x32c7, 0xd20, 0x293b, 0xdff5, 0x1e9c, 0x1, 0x1);
        gbc.writeMem(0x300, { 0x89 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x32c7, gbc.sp());
        EXPECT(0x301, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0272
        gbc.setState(0xde66, 0x777c, 0xd7d0, 0x2f14, 0xa8f6, 0xa86e, 0x0, 0x0);
        gbc.writeMem(0xde66, { 0x89 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x777c, gbc.sp());
        EXPECT(0xde67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xde66));
        // 89 0273
        gbc.setState(0x72e3, 0x37d9, 0x4a90, 0x655b, 0x6650, 0xec4e, 0x0, 0x0);
        gbc.writeMem(0x72e3, { 0x89 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x37d9, gbc.sp());
        EXPECT(0x72e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0274
        gbc.setState(0x799b, 0x3283, 0xc30, 0x623f, 0xc54f, 0x6877, 0x1, 0x0);
        gbc.writeMem(0x799b, { 0x89 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x3283, gbc.sp());
        EXPECT(0x799c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0275
        gbc.setState(0xee5e, 0xa87c, 0xb3d0, 0xec83, 0xc14, 0xd394, 0x0, 0x1);
        gbc.writeMem(0xee5e, { 0x89 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xa87c, gbc.sp());
        EXPECT(0xee5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xee5e));
        // 89 0276
        gbc.setState(0x64e5, 0xfde, 0x2a50, 0x2b6e, 0xccbe, 0xd982, 0x0, 0x1);
        gbc.writeMem(0x64e5, { 0x89 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xfde, gbc.sp());
        EXPECT(0x64e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0277
        gbc.setState(0x6bb9, 0x264, 0x3c90, 0xfa4b, 0xb8ec, 0xef76, 0x0, 0x0);
        gbc.writeMem(0x6bb9, { 0x89 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x264, gbc.sp());
        EXPECT(0x6bba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0278
        gbc.setState(0x5913, 0x87a6, 0x7530, 0x21a5, 0xbc8d, 0x4b58, 0x0, 0x1);
        gbc.writeMem(0x5913, { 0x89 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x87a6, gbc.sp());
        EXPECT(0x5914, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0279
        gbc.setState(0x2333, 0xb45e, 0xd800, 0x70e3, 0x872d, 0xe20d, 0x0, 0x1);
        gbc.writeMem(0x2333, { 0x89 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xb45e, gbc.sp());
        EXPECT(0x2334, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 027A
        gbc.setState(0x61d4, 0x2ef1, 0x8680, 0xb50a, 0x1d7, 0xb6ba, 0x1, 0x0);
        gbc.writeMem(0x61d4, { 0x89 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x2ef1, gbc.sp());
        EXPECT(0x61d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 027B
        gbc.setState(0x6112, 0x64d9, 0xbea0, 0xcd0f, 0x5221, 0xb4ca, 0x1, 0x1);
        gbc.writeMem(0x6112, { 0x89 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x64d9, gbc.sp());
        EXPECT(0x6113, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 027C
        gbc.setState(0x6889, 0x94e6, 0x74b0, 0x8e62, 0xd5a8, 0x24b5, 0x0, 0x0);
        gbc.writeMem(0x6889, { 0x89 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x94e6, gbc.sp());
        EXPECT(0x688a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 027D
        gbc.setState(0x74fc, 0x763e, 0x32d0, 0xdc98, 0x986a, 0x3ed9, 0x1, 0x1);
        gbc.writeMem(0x74fc, { 0x89 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x763e, gbc.sp());
        EXPECT(0x74fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 027E
        gbc.setState(0x9c90, 0x6be6, 0x60c0, 0x8a80, 0x6c9b, 0x5f01, 0x1, 0x0);
        gbc.writeMem(0x9c90, { 0x89 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x6be6, gbc.sp());
        EXPECT(0x9c91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x9c90));
        // 89 027F
        gbc.setState(0x1de3, 0xbdc6, 0x36a0, 0xb2c0, 0xe209, 0x8167, 0x0, 0x0);
        gbc.writeMem(0x1de3, { 0x89 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xbdc6, gbc.sp());
        EXPECT(0x1de4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0280
        gbc.setState(0x90a5, 0xc03c, 0xc080, 0xfdb1, 0x8a5e, 0x9ae9, 0x1, 0x0);
        gbc.writeMem(0x90a5, { 0x89 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xc03c, gbc.sp());
        EXPECT(0x90a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x90a5));
        // 89 0281
        gbc.setState(0x9f75, 0x76db, 0xe90, 0xc0b9, 0x59ba, 0x7164, 0x0, 0x0);
        gbc.writeMem(0x9f75, { 0x89 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x76db, gbc.sp());
        EXPECT(0x9f76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x9f75));
        // 89 0282
        gbc.setState(0xbef1, 0x53b7, 0xd7d0, 0xb734, 0xe683, 0xe819, 0x1, 0x1);
        gbc.writeMem(0xbef1, { 0x89 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x53b7, gbc.sp());
        EXPECT(0xbef2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xbef1));
        // 89 0283
        gbc.setState(0xd124, 0xae30, 0xf2a0, 0xe008, 0xc734, 0xd725, 0x1, 0x1);
        gbc.writeMem(0xd124, { 0x89 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xae30, gbc.sp());
        EXPECT(0xd125, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xd124));
        // 89 0284
        gbc.setState(0x9307, 0x735b, 0xb000, 0x5657, 0xab60, 0x9593, 0x0, 0x0);
        gbc.writeMem(0x9307, { 0x89 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x735b, gbc.sp());
        EXPECT(0x9308, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x9307));
        // 89 0285
        gbc.setState(0x5136, 0x6984, 0xe3c0, 0xfa0f, 0x2e03, 0xbe7d, 0x0, 0x1);
        gbc.writeMem(0x5136, { 0x89 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x6984, gbc.sp());
        EXPECT(0x5137, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0286
        gbc.setState(0xd82, 0x32e, 0xd160, 0xdb61, 0xadd5, 0x3e49, 0x0, 0x1);
        gbc.writeMem(0xd82, { 0x89 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x32e, gbc.sp());
        EXPECT(0xd83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0287
        gbc.setState(0x4a01, 0xd3b3, 0x7770, 0xde76, 0x9775, 0x7858, 0x1, 0x0);
        gbc.writeMem(0x4a01, { 0x89 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xd3b3, gbc.sp());
        EXPECT(0x4a02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0288
        gbc.setState(0x1df2, 0x81a9, 0x40c0, 0xbd33, 0x6075, 0xd873, 0x1, 0x0);
        gbc.writeMem(0x1df2, { 0x89 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x81a9, gbc.sp());
        EXPECT(0x1df3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0289
        gbc.setState(0x1a1f, 0xc563, 0xa310, 0xbee, 0x8be4, 0xa648, 0x1, 0x1);
        gbc.writeMem(0x1a1f, { 0x89 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xc563, gbc.sp());
        EXPECT(0x1a20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 028A
        gbc.setState(0xd183, 0xf0b1, 0x1360, 0xb204, 0x42e8, 0x141d, 0x0, 0x1);
        gbc.writeMem(0xd183, { 0x89 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xf0b1, gbc.sp());
        EXPECT(0xd184, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xd183));
        // 89 028B
        gbc.setState(0xee15, 0x903d, 0xafe0, 0x7db1, 0x534d, 0x4375, 0x1, 0x1);
        gbc.writeMem(0xee15, { 0x89 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x903d, gbc.sp());
        EXPECT(0xee16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xee15));
        // 89 028C
        gbc.setState(0x7a65, 0x7a56, 0xead0, 0x5f21, 0x79df, 0x2220, 0x0, 0x1);
        gbc.writeMem(0x7a65, { 0x89 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x7a56, gbc.sp());
        EXPECT(0x7a66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 028D
        gbc.setState(0x5c02, 0xe422, 0x5d20, 0x2d9a, 0x1d0b, 0xaf1a, 0x0, 0x1);
        gbc.writeMem(0x5c02, { 0x89 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xe422, gbc.sp());
        EXPECT(0x5c03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 028E
        gbc.setState(0xd472, 0x131f, 0xb810, 0x56ca, 0x87f6, 0x32da, 0x1, 0x0);
        gbc.writeMem(0xd472, { 0x89 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x131f, gbc.sp());
        EXPECT(0xd473, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xd472));
        // 89 028F
        gbc.setState(0x66, 0x1106, 0xff90, 0xc795, 0x2eb7, 0xcc0b, 0x0, 0x0);
        gbc.writeMem(0x66, { 0x89 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x1106, gbc.sp());
        EXPECT(0x67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0290
        gbc.setState(0xbcce, 0xe032, 0xa8f0, 0xa06, 0x30ee, 0xd8d3, 0x1, 0x0);
        gbc.writeMem(0xbcce, { 0x89 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xe032, gbc.sp());
        EXPECT(0xbccf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xbcce));
        // 89 0291
        gbc.setState(0x3413, 0x2b4e, 0x2bc0, 0xb24c, 0x8fca, 0x7da9, 0x1, 0x0);
        gbc.writeMem(0x3413, { 0x89 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x2b4e, gbc.sp());
        EXPECT(0x3414, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0292
        gbc.setState(0xb21a, 0x1dd5, 0xaae0, 0xc56c, 0x78b9, 0x2d00, 0x1, 0x0);
        gbc.writeMem(0xb21a, { 0x89 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x1dd5, gbc.sp());
        EXPECT(0xb21b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xb21a));
        // 89 0293
        gbc.setState(0xc04f, 0xc030, 0xec0, 0x4a81, 0x6ca3, 0x1ef2, 0x0, 0x0);
        gbc.writeMem(0xc04f, { 0x89 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xc030, gbc.sp());
        EXPECT(0xc050, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xc04f));
        // 89 0294
        gbc.setState(0x9855, 0x4612, 0xff10, 0x3e7a, 0xc72d, 0xde79, 0x1, 0x1);
        gbc.writeMem(0x9855, { 0x89 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x4612, gbc.sp());
        EXPECT(0x9856, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x9855));
        // 89 0295
        gbc.setState(0x69aa, 0x187f, 0xd590, 0x6af1, 0x49cd, 0xe69c, 0x1, 0x1);
        gbc.writeMem(0x69aa, { 0x89 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x187f, gbc.sp());
        EXPECT(0x69ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0296
        gbc.setState(0x549e, 0x44c, 0x9b60, 0x3e83, 0xddc2, 0xb5ff, 0x0, 0x1);
        gbc.writeMem(0x549e, { 0x89 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x44c, gbc.sp());
        EXPECT(0x549f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0297
        gbc.setState(0xeaa5, 0xdf9a, 0x7aa0, 0x90ad, 0x9fb6, 0x78f0, 0x1, 0x0);
        gbc.writeMem(0xeaa5, { 0x89 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xdf9a, gbc.sp());
        EXPECT(0xeaa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xeaa5));
        // 89 0299
        gbc.setState(0x579c, 0x5ed0, 0xdcd0, 0xa8c5, 0x621b, 0x1228, 0x1, 0x1);
        gbc.writeMem(0x579c, { 0x89 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x5ed0, gbc.sp());
        EXPECT(0x579d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 029A
        gbc.setState(0x5445, 0x158d, 0x2070, 0xc5e, 0xe3da, 0x53a, 0x1, 0x0);
        gbc.writeMem(0x5445, { 0x89 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x158d, gbc.sp());
        EXPECT(0x5446, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 029B
        gbc.setState(0x5c22, 0xc2c0, 0x57b0, 0x1dc0, 0x612d, 0xd0b6, 0x0, 0x1);
        gbc.writeMem(0x5c22, { 0x89 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xc2c0, gbc.sp());
        EXPECT(0x5c23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 029C
        gbc.setState(0x706e, 0x73ce, 0xa3c0, 0xcbc, 0x632c, 0x6d73, 0x1, 0x1);
        gbc.writeMem(0x706e, { 0x89 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x73ce, gbc.sp());
        EXPECT(0x706f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 029D
        gbc.setState(0x7074, 0x54ec, 0x33d0, 0x334c, 0x34e0, 0x7627, 0x0, 0x1);
        gbc.writeMem(0x7074, { 0x89 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x54ec, gbc.sp());
        EXPECT(0x7075, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 029E
        gbc.setState(0x2e74, 0xaeaf, 0xdf00, 0xddf0, 0x7c, 0x53eb, 0x1, 0x1);
        gbc.writeMem(0x2e74, { 0x89 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xaeaf, gbc.sp());
        EXPECT(0x2e75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 029F
        gbc.setState(0xb887, 0x239e, 0x47f0, 0xcec4, 0x5140, 0x5b30, 0x1, 0x1);
        gbc.writeMem(0xb887, { 0x89 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x239e, gbc.sp());
        EXPECT(0xb888, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xb887));
        // 89 02A0
        gbc.setState(0x2fc6, 0x8516, 0xd470, 0x4167, 0xddd5, 0xc1ea, 0x0, 0x1);
        gbc.writeMem(0x2fc6, { 0x89 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x8516, gbc.sp());
        EXPECT(0x2fc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 02A1
        gbc.setState(0x5b35, 0xda3a, 0xe0e0, 0x44f8, 0x874, 0xfef1, 0x0, 0x0);
        gbc.writeMem(0x5b35, { 0x89 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xda3a, gbc.sp());
        EXPECT(0x5b36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 02A2
        gbc.setState(0x478c, 0xee8a, 0x4860, 0x14b4, 0xf40, 0x9efc, 0x0, 0x0);
        gbc.writeMem(0x478c, { 0x89 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xee8a, gbc.sp());
        EXPECT(0x478d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 02A3
        gbc.setState(0x58ce, 0x7fb3, 0xf620, 0xa37f, 0x6a86, 0x5836, 0x1, 0x1);
        gbc.writeMem(0x58ce, { 0x89 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x7fb3, gbc.sp());
        EXPECT(0x58cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 02A4
        gbc.setState(0xb245, 0xb648, 0xeda0, 0x4bf8, 0xdcc0, 0xc115, 0x0, 0x0);
        gbc.writeMem(0xb245, { 0x89 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xb648, gbc.sp());
        EXPECT(0xb246, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xb245));
        // 89 02A5
        gbc.setState(0x7096, 0x72, 0x6550, 0x20d2, 0x739e, 0x618c, 0x0, 0x1);
        gbc.writeMem(0x7096, { 0x89 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x72, gbc.sp());
        EXPECT(0x7097, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 02A6
        gbc.setState(0x8efa, 0xdb17, 0x4d10, 0x1acc, 0xca4e, 0x8bfe, 0x0, 0x1);
        gbc.writeMem(0x8efa, { 0x89 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xdb17, gbc.sp());
        EXPECT(0x8efb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x8efa));
        // 89 02A8
        gbc.setState(0x5ad, 0x2340, 0x7300, 0xd9bf, 0x6a21, 0xa777, 0x1, 0x1);
        gbc.writeMem(0x5ad, { 0x89 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x2340, gbc.sp());
        EXPECT(0x5ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 02A9
        gbc.setState(0x6160, 0x9600, 0xd990, 0x3c71, 0x3ec2, 0x8e58, 0x0, 0x0);
        gbc.writeMem(0x6160, { 0x89 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x9600, gbc.sp());
        EXPECT(0x6161, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 02AA
        gbc.setState(0x5554, 0xbb5b, 0x46f0, 0xfeb3, 0xd375, 0xf812, 0x1, 0x1);
        gbc.writeMem(0x5554, { 0x89 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xbb5b, gbc.sp());
        EXPECT(0x5555, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 02AB
        gbc.setState(0x86c3, 0xacff, 0x7340, 0x1b16, 0x9e3b, 0xa808, 0x0, 0x1);
        gbc.writeMem(0x86c3, { 0x89 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xacff, gbc.sp());
        EXPECT(0x86c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x86c3));
        // 89 02AC
        gbc.setState(0x1aac, 0x5e9a, 0xecd0, 0x8bb4, 0x658, 0xa42b, 0x1, 0x0);
        gbc.writeMem(0x1aac, { 0x89 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x5e9a, gbc.sp());
        EXPECT(0x1aad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 02AD
        gbc.setState(0x7a14, 0xbd16, 0xdd30, 0xf0d8, 0x8ea6, 0xc31a, 0x0, 0x0);
        gbc.writeMem(0x7a14, { 0x89 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xbd16, gbc.sp());
        EXPECT(0x7a15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 02AE
        gbc.setState(0xc21d, 0x8af0, 0x1140, 0x114d, 0x7c4a, 0x8c16, 0x0, 0x0);
        gbc.writeMem(0xc21d, { 0x89 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x8af0, gbc.sp());
        EXPECT(0xc21e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xc21d));
        // 89 02AF
        gbc.setState(0xda65, 0x90be, 0x30, 0x9008, 0xeeb1, 0xf04, 0x0, 0x0);
        gbc.writeMem(0xda65, { 0x89 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x90be, gbc.sp());
        EXPECT(0xda66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xda65));
        // 89 02B0
        gbc.setState(0xa391, 0xfbff, 0xc1e0, 0xde67, 0xb0b6, 0xdd65, 0x1, 0x1);
        gbc.writeMem(0xa391, { 0x89 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xfbff, gbc.sp());
        EXPECT(0xa392, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xa391));
        // 89 02B1
        gbc.setState(0x758a, 0x4d6e, 0x6e70, 0xcb99, 0xf6eb, 0x2764, 0x0, 0x1);
        gbc.writeMem(0x758a, { 0x89 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x4d6e, gbc.sp());
        EXPECT(0x758b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 02B2
        gbc.setState(0x27b6, 0xd63e, 0xd020, 0x99cd, 0x767c, 0x1a1b, 0x1, 0x0);
        gbc.writeMem(0x27b6, { 0x89 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xd63e, gbc.sp());
        EXPECT(0x27b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 02B3
        gbc.setState(0xdb82, 0x64ce, 0x9c70, 0x93de, 0x9d3, 0xf9c1, 0x1, 0x1);
        gbc.writeMem(0xdb82, { 0x89 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x64ce, gbc.sp());
        EXPECT(0xdb83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xdb82));
        // 89 02B4
        gbc.setState(0x9530, 0xdd0f, 0x51f0, 0xe2d1, 0x53b8, 0xa0f, 0x1, 0x1);
        gbc.writeMem(0x9530, { 0x89 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xdd0f, gbc.sp());
        EXPECT(0x9531, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x9530));
        // 89 02B5
        gbc.setState(0xbeee, 0x7a5b, 0xa5e0, 0xaddf, 0x1037, 0xf3b2, 0x0, 0x0);
        gbc.writeMem(0xbeee, { 0x89 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x7a5b, gbc.sp());
        EXPECT(0xbeef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xbeee));
        // 89 02B6
        gbc.setState(0x921b, 0x5626, 0xab60, 0xdd8f, 0x3177, 0x24da, 0x0, 0x0);
        gbc.writeMem(0x921b, { 0x89 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x5626, gbc.sp());
        EXPECT(0x921c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x921b));
        // 89 02B7
        gbc.setState(0xd341, 0x64ae, 0xe340, 0x11b9, 0xa686, 0x8e0, 0x1, 0x1);
        gbc.writeMem(0xd341, { 0x89 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x64ae, gbc.sp());
        EXPECT(0xd342, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xd341));
        // 89 02B8
        gbc.setState(0x78aa, 0x8431, 0x8120, 0xee72, 0x606e, 0x574e, 0x1, 0x1);
        gbc.writeMem(0x78aa, { 0x89 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x8431, gbc.sp());
        EXPECT(0x78ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 02B9
        gbc.setState(0x9037, 0x29d1, 0x2b20, 0x7c67, 0xf23c, 0xb967, 0x1, 0x1);
        gbc.writeMem(0x9037, { 0x89 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x29d1, gbc.sp());
        EXPECT(0x9038, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x9037));
        // 89 02BA
        gbc.setState(0x26e2, 0x32dd, 0x6390, 0xa6d3, 0x58e, 0xcaf7, 0x1, 0x0);
        gbc.writeMem(0x26e2, { 0x89 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x32dd, gbc.sp());
        EXPECT(0x26e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 02BB
        gbc.setState(0xed97, 0x301a, 0xc160, 0x6071, 0x7674, 0xe1a3, 0x1, 0x0);
        gbc.writeMem(0xed97, { 0x89 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x301a, gbc.sp());
        EXPECT(0xed98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xed97));
        // 89 02BD
        gbc.setState(0x8516, 0x6bb9, 0xb270, 0x9354, 0xf945, 0xb6f0, 0x1, 0x0);
        gbc.writeMem(0x8516, { 0x89 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x6bb9, gbc.sp());
        EXPECT(0x8517, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x8516));
        // 89 02BE
        gbc.setState(0xa87e, 0x4baf, 0x5ae0, 0xc3da, 0x821a, 0x2f60, 0x1, 0x1);
        gbc.writeMem(0xa87e, { 0x89 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x4baf, gbc.sp());
        EXPECT(0xa87f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xa87e));
        // 89 02BF
        gbc.setState(0x32ba, 0x3dd, 0x45e0, 0xe1c6, 0x55f4, 0x89a0, 0x0, 0x0);
        gbc.writeMem(0x32ba, { 0x89 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x3dd, gbc.sp());
        EXPECT(0x32bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 02C1
        gbc.setState(0x1ea8, 0xb2bc, 0x3190, 0xde5f, 0x52f8, 0xa4a8, 0x1, 0x1);
        gbc.writeMem(0x1ea8, { 0x89 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xb2bc, gbc.sp());
        EXPECT(0x1ea9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 02C2
        gbc.setState(0xeac, 0x3b47, 0xafa0, 0x24c5, 0x4019, 0x178a, 0x1, 0x0);
        gbc.writeMem(0xeac, { 0x89 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x3b47, gbc.sp());
        EXPECT(0xead, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 02C3
        gbc.setState(0xd16b, 0x227, 0x9970, 0x5eae, 0xfff7, 0x98e0, 0x1, 0x0);
        gbc.writeMem(0xd16b, { 0x89 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x227, gbc.sp());
        EXPECT(0xd16c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xd16b));
        // 89 02C4
        gbc.setState(0xa458, 0xeb47, 0x6800, 0x8c8f, 0x7a83, 0x9d89, 0x0, 0x0);
        gbc.writeMem(0xa458, { 0x89 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xeb47, gbc.sp());
        EXPECT(0xa459, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xa458));
        // 89 02C5
        gbc.setState(0x55e2, 0x3d46, 0x99f0, 0x20b3, 0xb9f1, 0x27af, 0x1, 0x0);
        gbc.writeMem(0x55e2, { 0x89 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x3d46, gbc.sp());
        EXPECT(0x55e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 02C6
        gbc.setState(0xba79, 0x3dfe, 0x15e0, 0x81b8, 0xd1e3, 0xc15f, 0x1, 0x0);
        gbc.writeMem(0xba79, { 0x89 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x3dfe, gbc.sp());
        EXPECT(0xba7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xba79));
        // 89 02C8
        gbc.setState(0xa24e, 0x788, 0x1bf0, 0x29f9, 0x9c0c, 0x6c67, 0x1, 0x1);
        gbc.writeMem(0xa24e, { 0x89 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x788, gbc.sp());
        EXPECT(0xa24f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xa24e));
        // 89 02C9
        gbc.setState(0x7a19, 0x593b, 0x71e0, 0x67dd, 0x3d53, 0x7a03, 0x1, 0x0);
        gbc.writeMem(0x7a19, { 0x89 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x593b, gbc.sp());
        EXPECT(0x7a1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 02CA
        gbc.setState(0x7e1d, 0xfeb7, 0x2330, 0xfb2, 0x8402, 0xc28a, 0x0, 0x1);
        gbc.writeMem(0x7e1d, { 0x89 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xfeb7, gbc.sp());
        EXPECT(0x7e1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 02CB
        gbc.setState(0x5764, 0x92ef, 0x45c0, 0x753f, 0x74fb, 0x3fb9, 0x1, 0x0);
        gbc.writeMem(0x5764, { 0x89 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x92ef, gbc.sp());
        EXPECT(0x5765, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 02CC
        gbc.setState(0xdc17, 0xac20, 0x4ad0, 0x46c9, 0xda1c, 0xa316, 0x1, 0x1);
        gbc.writeMem(0xdc17, { 0x89 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xac20, gbc.sp());
        EXPECT(0xdc18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xdc17));
        // 89 02CD
        gbc.setState(0xd425, 0x3e7b, 0xd0f0, 0xf090, 0x5610, 0xeef7, 0x1, 0x1);
        gbc.writeMem(0xd425, { 0x89 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x3e7b, gbc.sp());
        EXPECT(0xd426, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xd425));
        // 89 02CE
        gbc.setState(0x85b6, 0x1855, 0x2d10, 0x96ae, 0xa8e3, 0x254f, 0x0, 0x0);
        gbc.writeMem(0x85b6, { 0x89 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x1855, gbc.sp());
        EXPECT(0x85b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x85b6));
        // 89 02CF
        gbc.setState(0x7, 0x9580, 0x7b00, 0x2dab, 0x819b, 0x5651, 0x0, 0x0);
        gbc.writeMem(0x7, { 0x89 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x9580, gbc.sp());
        EXPECT(0x8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 02D0
        gbc.setState(0x76f1, 0xc781, 0xd2a0, 0xc940, 0xd864, 0x5e89, 0x0, 0x1);
        gbc.writeMem(0x76f1, { 0x89 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xc781, gbc.sp());
        EXPECT(0x76f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 02D1
        gbc.setState(0x5d2d, 0xbb86, 0xebc0, 0x126e, 0x3622, 0x125c, 0x0, 0x0);
        gbc.writeMem(0x5d2d, { 0x89 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xbb86, gbc.sp());
        EXPECT(0x5d2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 02D2
        gbc.setState(0x90a5, 0x1f61, 0xe9e0, 0xa4d4, 0xe324, 0x9de4, 0x0, 0x0);
        gbc.writeMem(0x90a5, { 0x89 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x1f61, gbc.sp());
        EXPECT(0x90a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x90a5));
        // 89 02D3
        gbc.setState(0x5bd5, 0xcbd8, 0xdef0, 0xdd5c, 0xd89e, 0x2b1c, 0x0, 0x1);
        gbc.writeMem(0x5bd5, { 0x89 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xcbd8, gbc.sp());
        EXPECT(0x5bd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 02D4
        gbc.setState(0xed67, 0x1958, 0x2da0, 0x4e9a, 0x7182, 0x8422, 0x0, 0x0);
        gbc.writeMem(0xed67, { 0x89 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x1958, gbc.sp());
        EXPECT(0xed68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xed67));
        // 89 02D5
        gbc.setState(0xbe6d, 0x7598, 0x95b0, 0x3bc0, 0x7d5, 0xb154, 0x0, 0x1);
        gbc.writeMem(0xbe6d, { 0x89 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x7598, gbc.sp());
        EXPECT(0xbe6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xbe6d));
        // 89 02D6
        gbc.setState(0xdd1e, 0xda19, 0x7aa0, 0xf0d2, 0x9cbf, 0x64db, 0x1, 0x0);
        gbc.writeMem(0xdd1e, { 0x89 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xda19, gbc.sp());
        EXPECT(0xdd1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xdd1e));
        // 89 02D7
        gbc.setState(0x29e6, 0x859f, 0x6b10, 0x305e, 0xde15, 0xf913, 0x0, 0x1);
        gbc.writeMem(0x29e6, { 0x89 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x859f, gbc.sp());
        EXPECT(0x29e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 02D8
        gbc.setState(0x68b3, 0x4c12, 0xa090, 0x693b, 0x7da8, 0x146c, 0x0, 0x1);
        gbc.writeMem(0x68b3, { 0x89 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x4c12, gbc.sp());
        EXPECT(0x68b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 02D9
        gbc.setState(0x9a21, 0x8dd, 0xd910, 0x9069, 0x81e0, 0x8268, 0x0, 0x1);
        gbc.writeMem(0x9a21, { 0x89 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x8dd, gbc.sp());
        EXPECT(0x9a22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x9a21));
        // 89 02DA
        gbc.setState(0x4db0, 0x78c3, 0x1a90, 0xba87, 0xabf5, 0x98aa, 0x1, 0x1);
        gbc.writeMem(0x4db0, { 0x89 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x78c3, gbc.sp());
        EXPECT(0x4db1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 02DB
        gbc.setState(0x2db2, 0xccae, 0xecd0, 0xdb1c, 0x1530, 0x463, 0x0, 0x0);
        gbc.writeMem(0x2db2, { 0x89 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xccae, gbc.sp());
        EXPECT(0x2db3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 02DC
        gbc.setState(0x8d45, 0x6d65, 0xa830, 0x323c, 0x2f02, 0x22cb, 0x1, 0x0);
        gbc.writeMem(0x8d45, { 0x89 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x6d65, gbc.sp());
        EXPECT(0x8d46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x8d45));
        // 89 02DD
        gbc.setState(0x5a36, 0xe6b5, 0x8da0, 0x23b2, 0xa77d, 0xa350, 0x1, 0x1);
        gbc.writeMem(0x5a36, { 0x89 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xe6b5, gbc.sp());
        EXPECT(0x5a37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 02DE
        gbc.setState(0x63dd, 0x9c0a, 0x4e70, 0x6542, 0x42f0, 0x3f9a, 0x1, 0x1);
        gbc.writeMem(0x63dd, { 0x89 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x9c0a, gbc.sp());
        EXPECT(0x63de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 02DF
        gbc.setState(0xaaa0, 0x4179, 0xfbc0, 0x9394, 0x5a22, 0x6c2b, 0x0, 0x0);
        gbc.writeMem(0xaaa0, { 0x89 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x4179, gbc.sp());
        EXPECT(0xaaa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xaaa0));
        // 89 02E0
        gbc.setState(0x7d82, 0xf9aa, 0xcd00, 0x3a3a, 0x1dcf, 0x43b7, 0x1, 0x0);
        gbc.writeMem(0x7d82, { 0x89 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xf9aa, gbc.sp());
        EXPECT(0x7d83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 02E1
        gbc.setState(0x49bc, 0x5e8f, 0x1460, 0xbcc1, 0xd7c1, 0xae45, 0x0, 0x0);
        gbc.writeMem(0x49bc, { 0x89 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x5e8f, gbc.sp());
        EXPECT(0x49bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 02E2
        gbc.setState(0x9a22, 0xfd76, 0xa10, 0x551, 0x9b8d, 0xe878, 0x1, 0x0);
        gbc.writeMem(0x9a22, { 0x89 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xfd76, gbc.sp());
        EXPECT(0x9a23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x9a22));
        // 89 02E3
        gbc.setState(0x2edb, 0x9523, 0x1b40, 0xc58f, 0x5b20, 0xce52, 0x1, 0x1);
        gbc.writeMem(0x2edb, { 0x89 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x9523, gbc.sp());
        EXPECT(0x2edc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 02E4
        gbc.setState(0x2d38, 0x6d12, 0xb660, 0xc1c3, 0x61f5, 0xe1a7, 0x1, 0x1);
        gbc.writeMem(0x2d38, { 0x89 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x6d12, gbc.sp());
        EXPECT(0x2d39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 02E5
        gbc.setState(0x6b79, 0x5852, 0xed0, 0x1746, 0x6582, 0x997d, 0x1, 0x0);
        gbc.writeMem(0x6b79, { 0x89 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x5852, gbc.sp());
        EXPECT(0x6b7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 02E6
        gbc.setState(0xd511, 0x9140, 0x8b10, 0xe102, 0x666, 0xba6e, 0x0, 0x0);
        gbc.writeMem(0xd511, { 0x89 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x9140, gbc.sp());
        EXPECT(0xd512, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xd511));
        // 89 02E7
        gbc.setState(0xfe0, 0xd2f6, 0xc410, 0x6108, 0x8257, 0x41f, 0x1, 0x0);
        gbc.writeMem(0xfe0, { 0x89 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xd2f6, gbc.sp());
        EXPECT(0xfe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 02E8
        gbc.setState(0x961c, 0xaabf, 0x3e00, 0x342a, 0x8890, 0xcbc8, 0x0, 0x1);
        gbc.writeMem(0x961c, { 0x89 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xaabf, gbc.sp());
        EXPECT(0x961d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x961c));
        // 89 02E9
        gbc.setState(0x3f25, 0xb2a0, 0x69e0, 0xa337, 0xca23, 0x958, 0x0, 0x1);
        gbc.writeMem(0x3f25, { 0x89 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xb2a0, gbc.sp());
        EXPECT(0x3f26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 02EA
        gbc.setState(0xe269, 0x92d3, 0x7ff0, 0xf404, 0x364, 0x3434, 0x0, 0x0);
        gbc.writeMem(0xe269, { 0x89 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x92d3, gbc.sp());
        EXPECT(0xe26a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xe269));
        // 89 02EB
        gbc.setState(0x9cb5, 0xea89, 0xb6a0, 0xa4c3, 0x75b9, 0x706, 0x0, 0x0);
        gbc.writeMem(0x9cb5, { 0x89 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xea89, gbc.sp());
        EXPECT(0x9cb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x9cb5));
        // 89 02EC
        gbc.setState(0x8138, 0xa333, 0x3700, 0x1c60, 0x74d3, 0xd715, 0x0, 0x1);
        gbc.writeMem(0x8138, { 0x89 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xa333, gbc.sp());
        EXPECT(0x8139, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x8138));
        // 89 02EE
        gbc.setState(0xef8d, 0xed76, 0x67b0, 0x9aa1, 0xecb4, 0xf55b, 0x0, 0x1);
        gbc.writeMem(0xef8d, { 0x89 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xed76, gbc.sp());
        EXPECT(0xef8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xef8d));
        // 89 02EF
        gbc.setState(0x34fa, 0x6c8b, 0xb900, 0x3ebd, 0x18ea, 0xb90e, 0x0, 0x1);
        gbc.writeMem(0x34fa, { 0x89 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x6c8b, gbc.sp());
        EXPECT(0x34fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 02F0
        gbc.setState(0x5ca8, 0x54d3, 0x2da0, 0xe77e, 0x9c50, 0x7926, 0x1, 0x1);
        gbc.writeMem(0x5ca8, { 0x89 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x54d3, gbc.sp());
        EXPECT(0x5ca9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 02F1
        gbc.setState(0x94c6, 0x156c, 0xde70, 0xc7ee, 0x3dca, 0x4479, 0x1, 0x0);
        gbc.writeMem(0x94c6, { 0x89 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x156c, gbc.sp());
        EXPECT(0x94c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x94c6));
        // 89 02F2
        gbc.setState(0x277, 0xf4ec, 0x33d0, 0x1a50, 0xb99d, 0x57b, 0x0, 0x0);
        gbc.writeMem(0x277, { 0x89 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xf4ec, gbc.sp());
        EXPECT(0x278, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 02F3
        gbc.setState(0xd7ab, 0x7d02, 0x43d0, 0xb7d1, 0x5053, 0xf2b0, 0x1, 0x1);
        gbc.writeMem(0xd7ab, { 0x89 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x7d02, gbc.sp());
        EXPECT(0xd7ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xd7ab));
        // 89 02F4
        gbc.setState(0x994f, 0xee1, 0xa9b0, 0x9ac0, 0x67b5, 0x36c9, 0x0, 0x0);
        gbc.writeMem(0x994f, { 0x89 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xee1, gbc.sp());
        EXPECT(0x9950, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x994f));
        // 89 02F5
        gbc.setState(0xb396, 0x28f9, 0x69e0, 0xb21e, 0x6bee, 0xceeb, 0x0, 0x1);
        gbc.writeMem(0xb396, { 0x89 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x28f9, gbc.sp());
        EXPECT(0xb397, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xb396));
        // 89 02F6
        gbc.setState(0x614a, 0x1bd1, 0x9d00, 0x96ed, 0x6c93, 0xb636, 0x1, 0x1);
        gbc.writeMem(0x614a, { 0x89 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x1bd1, gbc.sp());
        EXPECT(0x614b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 02F7
        gbc.setState(0x1fe0, 0x69fd, 0x88e0, 0x5f63, 0x90f4, 0x365d, 0x1, 0x1);
        gbc.writeMem(0x1fe0, { 0x89 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x69fd, gbc.sp());
        EXPECT(0x1fe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 02F8
        gbc.setState(0xb13a, 0xa1c5, 0xfb60, 0xe3af, 0x6b99, 0x9248, 0x1, 0x1);
        gbc.writeMem(0xb13a, { 0x89 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xa1c5, gbc.sp());
        EXPECT(0xb13b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xb13a));
        // 89 02F9
        gbc.setState(0xd89d, 0x46bc, 0xcae0, 0xbc20, 0xf545, 0x5a53, 0x0, 0x1);
        gbc.writeMem(0xd89d, { 0x89 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x46bc, gbc.sp());
        EXPECT(0xd89e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xd89d));
        // 89 02FA
        gbc.setState(0x3f04, 0xddd0, 0xf550, 0x418d, 0x9aeb, 0x79b2, 0x0, 0x1);
        gbc.writeMem(0x3f04, { 0x89 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xddd0, gbc.sp());
        EXPECT(0x3f05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 02FB
        gbc.setState(0x3a55, 0xcf4b, 0x41c0, 0xe56, 0x36ea, 0xeade, 0x0, 0x0);
        gbc.writeMem(0x3a55, { 0x89 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xcf4b, gbc.sp());
        EXPECT(0x3a56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 02FC
        gbc.setState(0x6a6d, 0x33a1, 0x21a0, 0xd213, 0x581b, 0xae70, 0x1, 0x0);
        gbc.writeMem(0x6a6d, { 0x89 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x33a1, gbc.sp());
        EXPECT(0x6a6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 02FD
        gbc.setState(0xbc54, 0xbd35, 0xeb50, 0xb6c3, 0x6ee1, 0x50a6, 0x1, 0x0);
        gbc.writeMem(0xbc54, { 0x89 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xbd35, gbc.sp());
        EXPECT(0xbc55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xbc54));
        // 89 02FF
        gbc.setState(0xa6c5, 0xb152, 0x82a0, 0xb0c, 0xf54c, 0x1ad4, 0x1, 0x1);
        gbc.writeMem(0xa6c5, { 0x89 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xb152, gbc.sp());
        EXPECT(0xa6c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xa6c5));
        // 89 0300
        gbc.setState(0x2659, 0x4fa6, 0xa880, 0x3bed, 0x6a6a, 0xe90f, 0x1, 0x0);
        gbc.writeMem(0x2659, { 0x89 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x4fa6, gbc.sp());
        EXPECT(0x265a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0301
        gbc.setState(0xb6bc, 0x2c35, 0xc060, 0xbdd8, 0xa29b, 0xfb6a, 0x0, 0x1);
        gbc.writeMem(0xb6bc, { 0x89 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x2c35, gbc.sp());
        EXPECT(0xb6bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xb6bc));
        // 89 0302
        gbc.setState(0x4ce3, 0xdbf9, 0xb040, 0xdb82, 0x6e13, 0xd269, 0x0, 0x0);
        gbc.writeMem(0x4ce3, { 0x89 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xdbf9, gbc.sp());
        EXPECT(0x4ce4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0303
        gbc.setState(0x45cd, 0x8a3d, 0xfb50, 0xe4f7, 0x4be6, 0x52a3, 0x1, 0x0);
        gbc.writeMem(0x45cd, { 0x89 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x8a3d, gbc.sp());
        EXPECT(0x45ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0304
        gbc.setState(0x90b0, 0x71ca, 0xb3d0, 0xa3ea, 0x9e46, 0x86bb, 0x0, 0x1);
        gbc.writeMem(0x90b0, { 0x89 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x71ca, gbc.sp());
        EXPECT(0x90b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x90b0));
        // 89 0305
        gbc.setState(0xae8f, 0x4d4, 0x9960, 0x98bb, 0x1596, 0xcbd1, 0x0, 0x0);
        gbc.writeMem(0xae8f, { 0x89 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x4d4, gbc.sp());
        EXPECT(0xae90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xae8f));
        // 89 0306
        gbc.setState(0xc109, 0x7cec, 0x5b10, 0x342b, 0xd046, 0x1a1d, 0x0, 0x0);
        gbc.writeMem(0xc109, { 0x89 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x7cec, gbc.sp());
        EXPECT(0xc10a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xc109));
        // 89 0307
        gbc.setState(0x10bd, 0xd68, 0x46c0, 0xe9c, 0xf97c, 0xcc38, 0x1, 0x1);
        gbc.writeMem(0x10bd, { 0x89 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xd68, gbc.sp());
        EXPECT(0x10be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0309
        gbc.setState(0xed46, 0x392f, 0xc260, 0x751e, 0x276, 0x19c2, 0x1, 0x0);
        gbc.writeMem(0xed46, { 0x89 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x392f, gbc.sp());
        EXPECT(0xed47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xed46));
        // 89 030A
        gbc.setState(0xb3ea, 0xa931, 0xe9d0, 0x5685, 0x259f, 0xa5c9, 0x0, 0x1);
        gbc.writeMem(0xb3ea, { 0x89 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xa931, gbc.sp());
        EXPECT(0xb3eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xb3ea));
        // 89 030B
        gbc.setState(0x2cf3, 0xecaf, 0xe4a0, 0xcd44, 0x4604, 0xfa43, 0x1, 0x0);
        gbc.writeMem(0x2cf3, { 0x89 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xecaf, gbc.sp());
        EXPECT(0x2cf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 030C
        gbc.setState(0x9922, 0xaaf2, 0xc400, 0x4330, 0x9b7d, 0xa19d, 0x1, 0x0);
        gbc.writeMem(0x9922, { 0x89 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xaaf2, gbc.sp());
        EXPECT(0x9923, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x9922));
        // 89 030D
        gbc.setState(0xe8d9, 0xf727, 0xfe60, 0x766a, 0xc9a7, 0xb5ac, 0x0, 0x0);
        gbc.writeMem(0xe8d9, { 0x89 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xf727, gbc.sp());
        EXPECT(0xe8da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xe8d9));
        // 89 030E
        gbc.setState(0xc7d, 0x9938, 0x3a90, 0x763c, 0xdc6d, 0x8b2b, 0x1, 0x1);
        gbc.writeMem(0xc7d, { 0x89 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x9938, gbc.sp());
        EXPECT(0xc7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 030F
        gbc.setState(0x3d0f, 0x9dcb, 0xc090, 0xe50d, 0x6efe, 0x8a49, 0x0, 0x1);
        gbc.writeMem(0x3d0f, { 0x89 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x9dcb, gbc.sp());
        EXPECT(0x3d10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0310
        gbc.setState(0x2ffe, 0x7c8, 0x2a00, 0x4599, 0x584f, 0xf740, 0x1, 0x0);
        gbc.writeMem(0x2ffe, { 0x89 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x7c8, gbc.sp());
        EXPECT(0x2fff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0311
        gbc.setState(0x1a8e, 0x7eb3, 0x69d0, 0x6b32, 0xbd62, 0x6e3a, 0x0, 0x0);
        gbc.writeMem(0x1a8e, { 0x89 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x7eb3, gbc.sp());
        EXPECT(0x1a8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0313
        gbc.setState(0xe642, 0x2058, 0x2500, 0x286b, 0x61aa, 0x1cd7, 0x0, 0x1);
        gbc.writeMem(0xe642, { 0x89 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x2058, gbc.sp());
        EXPECT(0xe643, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xe642));
        // 89 0314
        gbc.setState(0x9e78, 0xbed3, 0xe1e0, 0x2a4c, 0xeb1, 0x994, 0x0, 0x1);
        gbc.writeMem(0x9e78, { 0x89 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xbed3, gbc.sp());
        EXPECT(0x9e79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x9e78));
        // 89 0315
        gbc.setState(0x6292, 0x6a00, 0xe790, 0xe6d2, 0xb11e, 0x6552, 0x1, 0x0);
        gbc.writeMem(0x6292, { 0x89 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x6a00, gbc.sp());
        EXPECT(0x6293, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0316
        gbc.setState(0x544c, 0xe166, 0xc690, 0x1d46, 0xf529, 0x5928, 0x0, 0x1);
        gbc.writeMem(0x544c, { 0x89 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xe166, gbc.sp());
        EXPECT(0x544d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0317
        gbc.setState(0x687f, 0x4662, 0x5900, 0x3ce2, 0x1ed0, 0xfbe4, 0x1, 0x1);
        gbc.writeMem(0x687f, { 0x89 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x4662, gbc.sp());
        EXPECT(0x6880, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0318
        gbc.setState(0xe16f, 0x27be, 0x6290, 0x3b1c, 0xe132, 0xe2aa, 0x0, 0x0);
        gbc.writeMem(0xe16f, { 0x89 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x27be, gbc.sp());
        EXPECT(0xe170, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xe16f));
        // 89 0319
        gbc.setState(0xd1c0, 0xb7b0, 0x5210, 0xd198, 0x2ff1, 0x8b74, 0x1, 0x0);
        gbc.writeMem(0xd1c0, { 0x89 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xb7b0, gbc.sp());
        EXPECT(0xd1c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xd1c0));
        // 89 031A
        gbc.setState(0xa757, 0xb45, 0xa040, 0x7f71, 0x6931, 0xd866, 0x1, 0x0);
        gbc.writeMem(0xa757, { 0x89 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xb45, gbc.sp());
        EXPECT(0xa758, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xa757));
        // 89 031B
        gbc.setState(0xaafb, 0x9999, 0xd480, 0xdfe5, 0x6376, 0xffec, 0x0, 0x0);
        gbc.writeMem(0xaafb, { 0x89 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x9999, gbc.sp());
        EXPECT(0xaafc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xaafb));
        // 89 031C
        gbc.setState(0x4817, 0xb716, 0xd430, 0xbd1d, 0x3ba3, 0x650b, 0x0, 0x1);
        gbc.writeMem(0x4817, { 0x89 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xb716, gbc.sp());
        EXPECT(0x4818, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 031D
        gbc.setState(0x160d, 0x6927, 0x7750, 0x1bfa, 0x751b, 0x43cd, 0x1, 0x0);
        gbc.writeMem(0x160d, { 0x89 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x6927, gbc.sp());
        EXPECT(0x160e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 031E
        gbc.setState(0x9f52, 0x9056, 0x7af0, 0x9c24, 0x9a86, 0x1a0b, 0x1, 0x0);
        gbc.writeMem(0x9f52, { 0x89 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x9056, gbc.sp());
        EXPECT(0x9f53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x9f52));
        // 89 031F
        gbc.setState(0x426e, 0x80e6, 0x5940, 0x5a24, 0xbd36, 0x756a, 0x1, 0x0);
        gbc.writeMem(0x426e, { 0x89 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x80e6, gbc.sp());
        EXPECT(0x426f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0321
        gbc.setState(0xca40, 0xbe9a, 0xddc0, 0xe693, 0x34a7, 0x3110, 0x0, 0x0);
        gbc.writeMem(0xca40, { 0x89 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xbe9a, gbc.sp());
        EXPECT(0xca41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xca40));
        // 89 0322
        gbc.setState(0x9c54, 0x8675, 0x3740, 0x94ee, 0x58e9, 0x95f3, 0x1, 0x1);
        gbc.writeMem(0x9c54, { 0x89 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x8675, gbc.sp());
        EXPECT(0x9c55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x9c54));
        // 89 0323
        gbc.setState(0xbd31, 0x46dd, 0x96a0, 0x1dbb, 0x890b, 0x45d9, 0x1, 0x0);
        gbc.writeMem(0xbd31, { 0x89 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x46dd, gbc.sp());
        EXPECT(0xbd32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xbd31));
        // 89 0324
        gbc.setState(0x25bd, 0x5386, 0x6290, 0x6258, 0xeb82, 0xada0, 0x0, 0x1);
        gbc.writeMem(0x25bd, { 0x89 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x5386, gbc.sp());
        EXPECT(0x25be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0325
        gbc.setState(0xd89c, 0x4439, 0xde80, 0x2a68, 0xe771, 0xd253, 0x0, 0x0);
        gbc.writeMem(0xd89c, { 0x89 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x4439, gbc.sp());
        EXPECT(0xd89d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xd89c));
        // 89 0326
        gbc.setState(0xdb57, 0x5d19, 0xe8b0, 0xb8af, 0x6d1a, 0xef87, 0x0, 0x1);
        gbc.writeMem(0xdb57, { 0x89 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x5d19, gbc.sp());
        EXPECT(0xdb58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xdb57));
        // 89 0327
        gbc.setState(0x34f7, 0x5d14, 0x2d40, 0xd58d, 0xf0fe, 0x5d0f, 0x0, 0x0);
        gbc.writeMem(0x34f7, { 0x89 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x5d14, gbc.sp());
        EXPECT(0x34f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0328
        gbc.setState(0xaec5, 0x4bc4, 0xaa20, 0x12b4, 0x38de, 0x1f34, 0x0, 0x1);
        gbc.writeMem(0xaec5, { 0x89 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x4bc4, gbc.sp());
        EXPECT(0xaec6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xaec5));
        // 89 0329
        gbc.setState(0x3c7a, 0xa12f, 0xddd0, 0xe00d, 0xaf7b, 0xfeed, 0x1, 0x0);
        gbc.writeMem(0x3c7a, { 0x89 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xa12f, gbc.sp());
        EXPECT(0x3c7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 032A
        gbc.setState(0xd83e, 0x82db, 0x9fa0, 0x71ce, 0x21e9, 0xf58c, 0x1, 0x0);
        gbc.writeMem(0xd83e, { 0x89 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x82db, gbc.sp());
        EXPECT(0xd83f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xd83e));
        // 89 032B
        gbc.setState(0x2be7, 0x83d0, 0x24d0, 0x1d39, 0xf109, 0x71d5, 0x1, 0x1);
        gbc.writeMem(0x2be7, { 0x89 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x83d0, gbc.sp());
        EXPECT(0x2be8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 032C
        gbc.setState(0x52e1, 0xc932, 0x8440, 0xbb39, 0xa694, 0x128c, 0x0, 0x0);
        gbc.writeMem(0x52e1, { 0x89 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xc932, gbc.sp());
        EXPECT(0x52e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 032D
        gbc.setState(0x3a98, 0xf6c5, 0x4d10, 0x55da, 0xa036, 0x3d88, 0x0, 0x1);
        gbc.writeMem(0x3a98, { 0x89 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xf6c5, gbc.sp());
        EXPECT(0x3a99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 032E
        gbc.setState(0xd56b, 0x4051, 0x4e00, 0x6cbc, 0x3f29, 0x1d8d, 0x1, 0x1);
        gbc.writeMem(0xd56b, { 0x89 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x4051, gbc.sp());
        EXPECT(0xd56c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xd56b));
        // 89 032F
        gbc.setState(0x123e, 0x10df, 0xd8e0, 0x54c, 0xbcac, 0xd960, 0x0, 0x1);
        gbc.writeMem(0x123e, { 0x89 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x10df, gbc.sp());
        EXPECT(0x123f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0330
        gbc.setState(0x8a75, 0xd774, 0xb0c0, 0xc2b8, 0xcbb0, 0xce5c, 0x1, 0x1);
        gbc.writeMem(0x8a75, { 0x89 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xd774, gbc.sp());
        EXPECT(0x8a76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x8a75));
        // 89 0331
        gbc.setState(0x33fc, 0x8d60, 0x3250, 0xcce7, 0xd49e, 0x6938, 0x0, 0x0);
        gbc.writeMem(0x33fc, { 0x89 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x8d60, gbc.sp());
        EXPECT(0x33fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0332
        gbc.setState(0xd087, 0x8ed7, 0xec20, 0xdf88, 0x99ef, 0xf8bd, 0x1, 0x0);
        gbc.writeMem(0xd087, { 0x89 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x8ed7, gbc.sp());
        EXPECT(0xd088, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xd087));
        // 89 0333
        gbc.setState(0x5f68, 0x65a0, 0x9750, 0xb1e1, 0x11ad, 0x4b67, 0x0, 0x0);
        gbc.writeMem(0x5f68, { 0x89 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x65a0, gbc.sp());
        EXPECT(0x5f69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0334
        gbc.setState(0xb684, 0x8422, 0x74a0, 0x559e, 0x827f, 0x6eb4, 0x0, 0x0);
        gbc.writeMem(0xb684, { 0x89 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x8422, gbc.sp());
        EXPECT(0xb685, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xb684));
        // 89 0335
        gbc.setState(0x42, 0x13, 0x2450, 0xbc32, 0x8912, 0xef21, 0x0, 0x1);
        gbc.writeMem(0x42, { 0x89 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x13, gbc.sp());
        EXPECT(0x43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0336
        gbc.setState(0xe342, 0xcd1d, 0xe480, 0xcf37, 0xe82a, 0xe3e8, 0x0, 0x1);
        gbc.writeMem(0xe342, { 0x89 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xcd1d, gbc.sp());
        EXPECT(0xe343, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xe342));
        // 89 0337
        gbc.setState(0x59f4, 0x369b, 0xca0, 0xf1ba, 0x5e37, 0x2dbf, 0x0, 0x1);
        gbc.writeMem(0x59f4, { 0x89 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x369b, gbc.sp());
        EXPECT(0x59f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0338
        gbc.setState(0x327c, 0x6a52, 0x5780, 0x7cd6, 0xc4b3, 0x9766, 0x0, 0x0);
        gbc.writeMem(0x327c, { 0x89 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x6a52, gbc.sp());
        EXPECT(0x327d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0339
        gbc.setState(0x1383, 0x7074, 0xc690, 0x3cf, 0x9193, 0xded6, 0x0, 0x1);
        gbc.writeMem(0x1383, { 0x89 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x7074, gbc.sp());
        EXPECT(0x1384, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 033A
        gbc.setState(0x1e0a, 0xcc90, 0xdd40, 0x523c, 0x5aab, 0x4ad8, 0x0, 0x0);
        gbc.writeMem(0x1e0a, { 0x89 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xcc90, gbc.sp());
        EXPECT(0x1e0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 033B
        gbc.setState(0x8c15, 0xba1e, 0x74e0, 0x299b, 0x5f93, 0xe384, 0x0, 0x1);
        gbc.writeMem(0x8c15, { 0x89 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xba1e, gbc.sp());
        EXPECT(0x8c16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x8c15));
        // 89 033C
        gbc.setState(0xe03c, 0x6145, 0xbd0, 0x909f, 0x60da, 0xbef2, 0x1, 0x1);
        gbc.writeMem(0xe03c, { 0x89 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x6145, gbc.sp());
        EXPECT(0xe03d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xe03c));
        // 89 033D
        gbc.setState(0x9bdd, 0xd1b1, 0xe620, 0x4654, 0x6b8e, 0xfaa7, 0x0, 0x1);
        gbc.writeMem(0x9bdd, { 0x89 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xd1b1, gbc.sp());
        EXPECT(0x9bde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x9bdd));
        // 89 033E
        gbc.setState(0x9ebd, 0xb8c0, 0xee70, 0x2441, 0x1585, 0x8a3e, 0x1, 0x1);
        gbc.writeMem(0x9ebd, { 0x89 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xb8c0, gbc.sp());
        EXPECT(0x9ebe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x9ebd));
        // 89 033F
        gbc.setState(0x6aa7, 0x6f9a, 0xedf0, 0x5fa9, 0xa56, 0x543c, 0x1, 0x1);
        gbc.writeMem(0x6aa7, { 0x89 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x6f9a, gbc.sp());
        EXPECT(0x6aa8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0340
        gbc.setState(0xdb37, 0x611f, 0x9270, 0xc125, 0x37d7, 0xbf42, 0x0, 0x1);
        gbc.writeMem(0xdb37, { 0x89 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x611f, gbc.sp());
        EXPECT(0xdb38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xdb37));
        // 89 0342
        gbc.setState(0x5909, 0x7105, 0xcf0, 0x6b97, 0xb97c, 0xb879, 0x0, 0x1);
        gbc.writeMem(0x5909, { 0x89 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x7105, gbc.sp());
        EXPECT(0x590a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0343
        gbc.setState(0x426c, 0x56e1, 0xb080, 0x6ab0, 0x3b92, 0x9129, 0x0, 0x1);
        gbc.writeMem(0x426c, { 0x89 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x56e1, gbc.sp());
        EXPECT(0x426d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0344
        gbc.setState(0x2ca8, 0x9cc, 0x82c0, 0x2e33, 0xfbb7, 0x1e2c, 0x0, 0x1);
        gbc.writeMem(0x2ca8, { 0x89 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x9cc, gbc.sp());
        EXPECT(0x2ca9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0345
        gbc.setState(0xc946, 0x972b, 0x2480, 0x1eb5, 0x3150, 0x894b, 0x0, 0x1);
        gbc.writeMem(0xc946, { 0x89 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x972b, gbc.sp());
        EXPECT(0xc947, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xc946));
        // 89 0346
        gbc.setState(0xceba, 0xe016, 0x3150, 0x4a1d, 0x9fdb, 0xf030, 0x1, 0x1);
        gbc.writeMem(0xceba, { 0x89 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xe016, gbc.sp());
        EXPECT(0xcebb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xceba));
        // 89 0347
        gbc.setState(0x6858, 0xde67, 0xbc70, 0x142d, 0xf630, 0xd0b3, 0x0, 0x0);
        gbc.writeMem(0x6858, { 0x89 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xde67, gbc.sp());
        EXPECT(0x6859, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0348
        gbc.setState(0xd0f1, 0x8be, 0x8e50, 0xb974, 0xff1c, 0xf475, 0x1, 0x1);
        gbc.writeMem(0xd0f1, { 0x89 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x8be, gbc.sp());
        EXPECT(0xd0f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xd0f1));
        // 89 0349
        gbc.setState(0x6b58, 0x9069, 0x83e0, 0x8eea, 0xab0d, 0x5489, 0x0, 0x0);
        gbc.writeMem(0x6b58, { 0x89 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x9069, gbc.sp());
        EXPECT(0x6b59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 034A
        gbc.setState(0xc6e4, 0x76d9, 0xafe0, 0x73f2, 0xfc4c, 0x62f, 0x0, 0x0);
        gbc.writeMem(0xc6e4, { 0x89 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x76d9, gbc.sp());
        EXPECT(0xc6e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xc6e4));
        // 89 034B
        gbc.setState(0xbe12, 0xef4e, 0x270, 0xe753, 0x31c2, 0x147f, 0x1, 0x0);
        gbc.writeMem(0xbe12, { 0x89 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xef4e, gbc.sp());
        EXPECT(0xbe13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xbe12));
        // 89 034C
        gbc.setState(0x9998, 0x578a, 0x65d0, 0x1005, 0x9860, 0xa5d9, 0x0, 0x1);
        gbc.writeMem(0x9998, { 0x89 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x578a, gbc.sp());
        EXPECT(0x9999, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x9998));
        // 89 034D
        gbc.setState(0xd04f, 0x5127, 0x5380, 0x1a10, 0x373b, 0xfb61, 0x0, 0x0);
        gbc.writeMem(0xd04f, { 0x89 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x5127, gbc.sp());
        EXPECT(0xd050, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xd04f));
        // 89 034E
        gbc.setState(0xb804, 0x46ef, 0xe420, 0x517f, 0xfeec, 0x54a5, 0x0, 0x0);
        gbc.writeMem(0xb804, { 0x89 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x46ef, gbc.sp());
        EXPECT(0xb805, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xb804));
        // 89 034F
        gbc.setState(0x4bd0, 0xa68b, 0x7960, 0x4b0b, 0x4939, 0x936c, 0x0, 0x0);
        gbc.writeMem(0x4bd0, { 0x89 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xa68b, gbc.sp());
        EXPECT(0x4bd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0350
        gbc.setState(0xbc97, 0x21fc, 0xd7d0, 0xc559, 0xec96, 0x9537, 0x0, 0x0);
        gbc.writeMem(0xbc97, { 0x89 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x21fc, gbc.sp());
        EXPECT(0xbc98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xbc97));
        // 89 0351
        gbc.setState(0x7b15, 0x3e03, 0x12f0, 0xc0aa, 0xba69, 0x993e, 0x1, 0x0);
        gbc.writeMem(0x7b15, { 0x89 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x3e03, gbc.sp());
        EXPECT(0x7b16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0352
        gbc.setState(0xd2b2, 0xe97d, 0x55c0, 0xff94, 0xec7, 0x444c, 0x0, 0x1);
        gbc.writeMem(0xd2b2, { 0x89 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe97d, gbc.sp());
        EXPECT(0xd2b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xd2b2));
        // 89 0353
        gbc.setState(0x72a7, 0xf01, 0xe680, 0xb6bc, 0x2b04, 0x37ab, 0x0, 0x1);
        gbc.writeMem(0x72a7, { 0x89 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xf01, gbc.sp());
        EXPECT(0x72a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0354
        gbc.setState(0xe4e4, 0x8c9f, 0x62c0, 0x5d34, 0x52a9, 0xae9f, 0x1, 0x1);
        gbc.writeMem(0xe4e4, { 0x89 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x8c9f, gbc.sp());
        EXPECT(0xe4e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xe4e4));
        // 89 0355
        gbc.setState(0xeb75, 0x4a92, 0x9ae0, 0xdd54, 0xa9d5, 0xf838, 0x1, 0x1);
        gbc.writeMem(0xeb75, { 0x89 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x4a92, gbc.sp());
        EXPECT(0xeb76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xeb75));
        // 89 0356
        gbc.setState(0x3776, 0x3788, 0xb990, 0x4d2b, 0xa3e5, 0x5b88, 0x1, 0x0);
        gbc.writeMem(0x3776, { 0x89 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x3788, gbc.sp());
        EXPECT(0x3777, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0357
        gbc.setState(0x3af7, 0xc25e, 0x5d60, 0x3abd, 0xb574, 0x4ed6, 0x1, 0x1);
        gbc.writeMem(0x3af7, { 0x89 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xc25e, gbc.sp());
        EXPECT(0x3af8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0358
        gbc.setState(0xd50f, 0x7881, 0x4fe0, 0xc059, 0x643b, 0x2cc2, 0x0, 0x0);
        gbc.writeMem(0xd50f, { 0x89 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x7881, gbc.sp());
        EXPECT(0xd510, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xd50f));
        // 89 0359
        gbc.setState(0x203b, 0x9868, 0x4bf0, 0xf8f4, 0x1b3c, 0x3e57, 0x0, 0x1);
        gbc.writeMem(0x203b, { 0x89 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x9868, gbc.sp());
        EXPECT(0x203c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 035A
        gbc.setState(0x3785, 0xca28, 0x1b00, 0xe056, 0x9e5c, 0xd3c6, 0x0, 0x1);
        gbc.writeMem(0x3785, { 0x89 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xca28, gbc.sp());
        EXPECT(0x3786, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 035B
        gbc.setState(0x2107, 0x3d12, 0x9b50, 0x4d66, 0x5b7, 0x127f, 0x1, 0x0);
        gbc.writeMem(0x2107, { 0x89 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x3d12, gbc.sp());
        EXPECT(0x2108, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 035C
        gbc.setState(0xb737, 0x81eb, 0xcbd0, 0xb1ad, 0x9188, 0x8607, 0x0, 0x0);
        gbc.writeMem(0xb737, { 0x89 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x81eb, gbc.sp());
        EXPECT(0xb738, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xb737));
        // 89 035D
        gbc.setState(0x61d0, 0x9717, 0x5930, 0x347c, 0x6b4b, 0x7dba, 0x1, 0x0);
        gbc.writeMem(0x61d0, { 0x89 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x9717, gbc.sp());
        EXPECT(0x61d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 035E
        gbc.setState(0xac30, 0x8e8e, 0xdce0, 0xc862, 0x82da, 0xfefd, 0x1, 0x0);
        gbc.writeMem(0xac30, { 0x89 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x8e8e, gbc.sp());
        EXPECT(0xac31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xac30));
        // 89 035F
        gbc.setState(0x362f, 0x9ee9, 0x2e10, 0xad71, 0xb9ce, 0x57b0, 0x1, 0x0);
        gbc.writeMem(0x362f, { 0x89 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x9ee9, gbc.sp());
        EXPECT(0x3630, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0360
        gbc.setState(0x2f41, 0xfc2c, 0xbeb0, 0xa3cc, 0xbc61, 0xf081, 0x0, 0x1);
        gbc.writeMem(0x2f41, { 0x89 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xfc2c, gbc.sp());
        EXPECT(0x2f42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0361
        gbc.setState(0x8456, 0x5463, 0x1510, 0x96b5, 0x77e6, 0x1670, 0x0, 0x0);
        gbc.writeMem(0x8456, { 0x89 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x5463, gbc.sp());
        EXPECT(0x8457, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x8456));
        // 89 0362
        gbc.setState(0x4607, 0xd16b, 0x4490, 0x9d26, 0x209f, 0xf122, 0x0, 0x1);
        gbc.writeMem(0x4607, { 0x89 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xd16b, gbc.sp());
        EXPECT(0x4608, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0363
        gbc.setState(0x80e4, 0x4e98, 0x9670, 0xdbb0, 0x2a41, 0x8c26, 0x1, 0x1);
        gbc.writeMem(0x80e4, { 0x89 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x4e98, gbc.sp());
        EXPECT(0x80e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x80e4));
        // 89 0365
        gbc.setState(0xacfd, 0x7124, 0xe060, 0x3f1d, 0xbeda, 0x2cc3, 0x0, 0x1);
        gbc.writeMem(0xacfd, { 0x89 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x7124, gbc.sp());
        EXPECT(0xacfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xacfd));
        // 89 0366
        gbc.setState(0xb1b8, 0x8b27, 0x1640, 0x14d3, 0x7e16, 0x4068, 0x0, 0x1);
        gbc.writeMem(0xb1b8, { 0x89 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x8b27, gbc.sp());
        EXPECT(0xb1b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xb1b8));
        // 89 0367
        gbc.setState(0x8ea4, 0x2bdd, 0x6890, 0x6e84, 0x52a9, 0x8d22, 0x1, 0x1);
        gbc.writeMem(0x8ea4, { 0x89 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x2bdd, gbc.sp());
        EXPECT(0x8ea5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x8ea4));
        // 89 0368
        gbc.setState(0x85b4, 0xee3c, 0xddb0, 0xaf70, 0x3271, 0xc366, 0x0, 0x1);
        gbc.writeMem(0x85b4, { 0x89 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xee3c, gbc.sp());
        EXPECT(0x85b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x85b4));
        // 89 036A
        gbc.setState(0xe6b6, 0x8641, 0x7800, 0xbb82, 0xe117, 0x376c, 0x0, 0x1);
        gbc.writeMem(0xe6b6, { 0x89 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x8641, gbc.sp());
        EXPECT(0xe6b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xe6b6));
        // 89 036B
        gbc.setState(0x6e2a, 0x484b, 0x5880, 0x9d69, 0xd4eb, 0x80ce, 0x0, 0x1);
        gbc.writeMem(0x6e2a, { 0x89 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x484b, gbc.sp());
        EXPECT(0x6e2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 036C
        gbc.setState(0xb7dc, 0xa91, 0x2ac0, 0xb342, 0xf237, 0x79f2, 0x1, 0x0);
        gbc.writeMem(0xb7dc, { 0x89 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xa91, gbc.sp());
        EXPECT(0xb7dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xb7dc));
        // 89 036D
        gbc.setState(0x2969, 0x890f, 0xd3a0, 0xecbd, 0xf5c9, 0x55a4, 0x0, 0x1);
        gbc.writeMem(0x2969, { 0x89 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x890f, gbc.sp());
        EXPECT(0x296a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 036E
        gbc.setState(0xcdf6, 0xa1ad, 0x14e0, 0xcb7b, 0x6fb0, 0x956b, 0x0, 0x1);
        gbc.writeMem(0xcdf6, { 0x89 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xa1ad, gbc.sp());
        EXPECT(0xcdf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xcdf6));
        // 89 036F
        gbc.setState(0xc1e8, 0xdad0, 0xb10, 0xc929, 0xdb34, 0xcb91, 0x1, 0x1);
        gbc.writeMem(0xc1e8, { 0x89 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xdad0, gbc.sp());
        EXPECT(0xc1e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xc1e8));
        // 89 0370
        gbc.setState(0xdda3, 0x7861, 0x8e90, 0x22f6, 0x5b90, 0xeedb, 0x0, 0x0);
        gbc.writeMem(0xdda3, { 0x89 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x7861, gbc.sp());
        EXPECT(0xdda4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xdda3));
        // 89 0371
        gbc.setState(0x612, 0x8852, 0xfd0, 0xc9b7, 0x8bd6, 0xd300, 0x1, 0x0);
        gbc.writeMem(0x612, { 0x89 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x8852, gbc.sp());
        EXPECT(0x613, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0372
        gbc.setState(0x8c49, 0x4f24, 0xdb70, 0x862f, 0x8f97, 0x7d9e, 0x0, 0x1);
        gbc.writeMem(0x8c49, { 0x89 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x4f24, gbc.sp());
        EXPECT(0x8c4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x8c49));
        // 89 0373
        gbc.setState(0xc85f, 0xd7e6, 0x9fb0, 0x4c29, 0x6f70, 0xed86, 0x0, 0x1);
        gbc.writeMem(0xc85f, { 0x89 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xd7e6, gbc.sp());
        EXPECT(0xc860, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xc85f));
        // 89 0374
        gbc.setState(0x7a31, 0x656c, 0x8ed0, 0x48ad, 0xf711, 0xf892, 0x1, 0x1);
        gbc.writeMem(0x7a31, { 0x89 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x656c, gbc.sp());
        EXPECT(0x7a32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0375
        gbc.setState(0xbb65, 0x2bfe, 0x9070, 0x80d1, 0x9a7d, 0x23b7, 0x0, 0x1);
        gbc.writeMem(0xbb65, { 0x89 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x2bfe, gbc.sp());
        EXPECT(0xbb66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xbb65));
        // 89 0376
        gbc.setState(0x4e01, 0xc2e4, 0xc970, 0x5f89, 0x705f, 0x19dc, 0x1, 0x0);
        gbc.writeMem(0x4e01, { 0x89 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xc2e4, gbc.sp());
        EXPECT(0x4e02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0377
        gbc.setState(0x7683, 0xdb8f, 0xef50, 0x2155, 0xa1d5, 0x7ae0, 0x0, 0x1);
        gbc.writeMem(0x7683, { 0x89 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xdb8f, gbc.sp());
        EXPECT(0x7684, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0378
        gbc.setState(0x4425, 0x9158, 0xe20, 0xe229, 0x153e, 0xcc3f, 0x0, 0x0);
        gbc.writeMem(0x4425, { 0x89 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x9158, gbc.sp());
        EXPECT(0x4426, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0379
        gbc.setState(0x7895, 0xb958, 0x2b70, 0xc975, 0x4312, 0x3851, 0x1, 0x0);
        gbc.writeMem(0x7895, { 0x89 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xb958, gbc.sp());
        EXPECT(0x7896, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 037A
        gbc.setState(0xbe38, 0x54ae, 0x49f0, 0xa43c, 0x7282, 0xbfd1, 0x0, 0x1);
        gbc.writeMem(0xbe38, { 0x89 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x54ae, gbc.sp());
        EXPECT(0xbe39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xbe38));
        // 89 037B
        gbc.setState(0x3b68, 0x9ddb, 0x4740, 0xada9, 0xeca2, 0x3c3c, 0x1, 0x1);
        gbc.writeMem(0x3b68, { 0x89 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x9ddb, gbc.sp());
        EXPECT(0x3b69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 037C
        gbc.setState(0x272e, 0x3eb1, 0x7610, 0x794c, 0x2737, 0x38ae, 0x0, 0x1);
        gbc.writeMem(0x272e, { 0x89 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x3eb1, gbc.sp());
        EXPECT(0x272f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 037D
        gbc.setState(0x913c, 0xf7a2, 0x61d0, 0x930a, 0x1234, 0x6322, 0x1, 0x0);
        gbc.writeMem(0x913c, { 0x89 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xf7a2, gbc.sp());
        EXPECT(0x913d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x913c));
        // 89 037E
        gbc.setState(0x660b, 0x9ca6, 0xcaa0, 0x2a8c, 0xe66c, 0x6668, 0x1, 0x1);
        gbc.writeMem(0x660b, { 0x89 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x9ca6, gbc.sp());
        EXPECT(0x660c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 037F
        gbc.setState(0x6b30, 0x5b9b, 0x5890, 0x553c, 0xaeb2, 0x7e9e, 0x0, 0x1);
        gbc.writeMem(0x6b30, { 0x89 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x5b9b, gbc.sp());
        EXPECT(0x6b31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0380
        gbc.setState(0x38c0, 0xe94a, 0x9ab0, 0x4019, 0x77c, 0x1677, 0x0, 0x1);
        gbc.writeMem(0x38c0, { 0x89 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xe94a, gbc.sp());
        EXPECT(0x38c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0381
        gbc.setState(0x7146, 0x4d49, 0xf640, 0x5224, 0xd71a, 0xa45, 0x1, 0x0);
        gbc.writeMem(0x7146, { 0x89 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x4d49, gbc.sp());
        EXPECT(0x7147, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0382
        gbc.setState(0x23af, 0x95c0, 0xd1d0, 0x9a6e, 0xa5c2, 0x4dff, 0x0, 0x1);
        gbc.writeMem(0x23af, { 0x89 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x95c0, gbc.sp());
        EXPECT(0x23b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0383
        gbc.setState(0x9a06, 0x6e64, 0xbb40, 0xa6a4, 0xa037, 0xc5df, 0x1, 0x0);
        gbc.writeMem(0x9a06, { 0x89 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x6e64, gbc.sp());
        EXPECT(0x9a07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x9a06));
        // 89 0384
        gbc.setState(0x6ef4, 0xa6ba, 0xd430, 0x9806, 0x45b2, 0xc2e0, 0x0, 0x0);
        gbc.writeMem(0x6ef4, { 0x89 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xa6ba, gbc.sp());
        EXPECT(0x6ef5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0385
        gbc.setState(0xa2e0, 0xa7dc, 0xfed0, 0x3daa, 0xdeaa, 0xc053, 0x0, 0x0);
        gbc.writeMem(0xa2e0, { 0x89 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xa7dc, gbc.sp());
        EXPECT(0xa2e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xa2e0));
        // 89 0386
        gbc.setState(0xabbd, 0x8007, 0xf070, 0x13b3, 0x2ad0, 0xb527, 0x1, 0x1);
        gbc.writeMem(0xabbd, { 0x89 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x8007, gbc.sp());
        EXPECT(0xabbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xabbd));
        // 89 0387
        gbc.setState(0x28a, 0x10c, 0x2ee0, 0x3dbe, 0x1230, 0xfd3b, 0x0, 0x1);
        gbc.writeMem(0x28a, { 0x89 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x10c, gbc.sp());
        EXPECT(0x28b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0388
        gbc.setState(0x744e, 0x79f0, 0xd9c0, 0xb09b, 0x4757, 0xfc0f, 0x0, 0x1);
        gbc.writeMem(0x744e, { 0x89 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x79f0, gbc.sp());
        EXPECT(0x744f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0389
        gbc.setState(0xabd9, 0x166a, 0xc9a0, 0x65af, 0x2d4e, 0x5f69, 0x1, 0x1);
        gbc.writeMem(0xabd9, { 0x89 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x166a, gbc.sp());
        EXPECT(0xabda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xabd9));
        // 89 038B
        gbc.setState(0xb783, 0x6f2d, 0xa900, 0x97f8, 0x9e6d, 0x1b3d, 0x1, 0x1);
        gbc.writeMem(0xb783, { 0x89 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x6f2d, gbc.sp());
        EXPECT(0xb784, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xb783));
        // 89 038C
        gbc.setState(0xcdcc, 0x740e, 0x5c40, 0x8c78, 0x98b5, 0x8b42, 0x1, 0x1);
        gbc.writeMem(0xcdcc, { 0x89 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x740e, gbc.sp());
        EXPECT(0xcdcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xcdcc));
        // 89 038D
        gbc.setState(0x3edb, 0xd298, 0xf5a0, 0xecf5, 0xf0d5, 0x2f24, 0x1, 0x1);
        gbc.writeMem(0x3edb, { 0x89 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xd298, gbc.sp());
        EXPECT(0x3edc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 038E
        gbc.setState(0x1006, 0x249e, 0x5410, 0x39df, 0xfec8, 0xc445, 0x0, 0x0);
        gbc.writeMem(0x1006, { 0x89 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x249e, gbc.sp());
        EXPECT(0x1007, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0390
        gbc.setState(0x4426, 0xeaf6, 0xdac0, 0x5455, 0xae0, 0x148, 0x0, 0x0);
        gbc.writeMem(0x4426, { 0x89 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xeaf6, gbc.sp());
        EXPECT(0x4427, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0391
        gbc.setState(0x2ab, 0x9381, 0x21d0, 0xb699, 0xc489, 0x5d74, 0x0, 0x1);
        gbc.writeMem(0x2ab, { 0x89 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x9381, gbc.sp());
        EXPECT(0x2ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0392
        gbc.setState(0x2d23, 0x735f, 0xf580, 0xb1e9, 0xe798, 0x96b7, 0x1, 0x1);
        gbc.writeMem(0x2d23, { 0x89 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x735f, gbc.sp());
        EXPECT(0x2d24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0393
        gbc.setState(0x3d8, 0xe446, 0x3fd0, 0x4501, 0xd160, 0x8f6e, 0x0, 0x0);
        gbc.writeMem(0x3d8, { 0x89 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xe446, gbc.sp());
        EXPECT(0x3d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 0394
        gbc.setState(0x1d15, 0x1a66, 0x5a80, 0x97ea, 0x7844, 0x77b5, 0x1, 0x1);
        gbc.writeMem(0x1d15, { 0x89 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x1a66, gbc.sp());
        EXPECT(0x1d16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 0395
        gbc.setState(0xd4fe, 0x22e7, 0x7a00, 0x37c9, 0x80ea, 0xf5e8, 0x1, 0x0);
        gbc.writeMem(0xd4fe, { 0x89 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x22e7, gbc.sp());
        EXPECT(0xd4ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xd4fe));
        // 89 0397
        gbc.setState(0x95e9, 0x2005, 0x1900, 0x4796, 0x3f70, 0x37b0, 0x0, 0x1);
        gbc.writeMem(0x95e9, { 0x89 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x2005, gbc.sp());
        EXPECT(0x95ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x95e9));
        // 89 0398
        gbc.setState(0xe0ef, 0x4976, 0xb590, 0x7e77, 0x3659, 0x6ac4, 0x1, 0x0);
        gbc.writeMem(0xe0ef, { 0x89 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x4976, gbc.sp());
        EXPECT(0xe0f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xe0ef));
        // 89 0399
        gbc.setState(0xedeb, 0xce92, 0x100, 0x3e33, 0xfc46, 0x2972, 0x0, 0x1);
        gbc.writeMem(0xedeb, { 0x89 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xce92, gbc.sp());
        EXPECT(0xedec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xedeb));
        // 89 039A
        gbc.setState(0x27ed, 0x3e03, 0xad0, 0xe848, 0xa3a4, 0x7441, 0x0, 0x0);
        gbc.writeMem(0x27ed, { 0x89 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x3e03, gbc.sp());
        EXPECT(0x27ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 039B
        gbc.setState(0x3a78, 0xfa5b, 0x3850, 0x70f2, 0x7cc5, 0x2254, 0x0, 0x1);
        gbc.writeMem(0x3a78, { 0x89 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xfa5b, gbc.sp());
        EXPECT(0x3a79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 039C
        gbc.setState(0x8de, 0xbf8, 0xd830, 0x5849, 0x53d7, 0x784, 0x1, 0x0);
        gbc.writeMem(0x8de, { 0x89 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xbf8, gbc.sp());
        EXPECT(0x8df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 039D
        gbc.setState(0x3455, 0x7ed3, 0x64f0, 0x8711, 0x4925, 0x6722, 0x1, 0x1);
        gbc.writeMem(0x3455, { 0x89 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x7ed3, gbc.sp());
        EXPECT(0x3456, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 039E
        gbc.setState(0x5e1d, 0x9965, 0xb530, 0x972f, 0x1429, 0x7b13, 0x0, 0x1);
        gbc.writeMem(0x5e1d, { 0x89 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x9965, gbc.sp());
        EXPECT(0x5e1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 039F
        gbc.setState(0xda5b, 0x4849, 0x6cb0, 0xe49c, 0x6db7, 0xedf3, 0x1, 0x0);
        gbc.writeMem(0xda5b, { 0x89 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x4849, gbc.sp());
        EXPECT(0xda5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xda5b));
        // 89 03A0
        gbc.setState(0x16d3, 0xf8, 0x4f30, 0xf9a3, 0x28e5, 0x5eb0, 0x0, 0x1);
        gbc.writeMem(0x16d3, { 0x89 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xf8, gbc.sp());
        EXPECT(0x16d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 03A1
        gbc.setState(0x8bc3, 0xf3f9, 0x5d40, 0x411, 0x585c, 0x2a1, 0x1, 0x0);
        gbc.writeMem(0x8bc3, { 0x89 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xf3f9, gbc.sp());
        EXPECT(0x8bc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x8bc3));
        // 89 03A2
        gbc.setState(0xeede, 0x2706, 0x680, 0x9fbb, 0x923, 0xc0dd, 0x0, 0x0);
        gbc.writeMem(0xeede, { 0x89 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x2706, gbc.sp());
        EXPECT(0xeedf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xeede));
        // 89 03A3
        gbc.setState(0xcf8a, 0xc1ad, 0xd6c0, 0x6ffc, 0x4b4, 0x64cb, 0x0, 0x1);
        gbc.writeMem(0xcf8a, { 0x89 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xc1ad, gbc.sp());
        EXPECT(0xcf8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xcf8a));
        // 89 03A4
        gbc.setState(0xa745, 0xb81f, 0xc580, 0x996, 0x5342, 0x6898, 0x0, 0x1);
        gbc.writeMem(0xa745, { 0x89 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xb81f, gbc.sp());
        EXPECT(0xa746, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xa745));
        // 89 03A5
        gbc.setState(0xa890, 0xedac, 0xf000, 0x3f04, 0xd52, 0x6a2c, 0x0, 0x0);
        gbc.writeMem(0xa890, { 0x89 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xedac, gbc.sp());
        EXPECT(0xa891, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xa890));
        // 89 03A6
        gbc.setState(0x3bb8, 0xa7ac, 0xd460, 0xf2fa, 0x65df, 0x4a1d, 0x0, 0x1);
        gbc.writeMem(0x3bb8, { 0x89 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xa7ac, gbc.sp());
        EXPECT(0x3bb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 03A7
        gbc.setState(0x6b5f, 0xc2ae, 0x8aa0, 0xb51d, 0x35cb, 0xb58e, 0x0, 0x1);
        gbc.writeMem(0x6b5f, { 0x89 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xc2ae, gbc.sp());
        EXPECT(0x6b60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 03A8
        gbc.setState(0xd2e2, 0xac7d, 0xfb30, 0xdf2f, 0xeccb, 0xc5a5, 0x1, 0x1);
        gbc.writeMem(0xd2e2, { 0x89 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xac7d, gbc.sp());
        EXPECT(0xd2e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xd2e2));
        // 89 03A9
        gbc.setState(0x3d36, 0x54c9, 0x8420, 0x2057, 0x7905, 0xde6e, 0x0, 0x0);
        gbc.writeMem(0x3d36, { 0x89 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x54c9, gbc.sp());
        EXPECT(0x3d37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 03AA
        gbc.setState(0x493d, 0xb061, 0x3e50, 0x554b, 0xbaf4, 0xacce, 0x1, 0x1);
        gbc.writeMem(0x493d, { 0x89 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xb061, gbc.sp());
        EXPECT(0x493e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 03AB
        gbc.setState(0x4c9e, 0xb79d, 0xcaa0, 0x34dd, 0x5fa9, 0x80ef, 0x0, 0x0);
        gbc.writeMem(0x4c9e, { 0x89 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xb79d, gbc.sp());
        EXPECT(0x4c9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 03AC
        gbc.setState(0xddad, 0x6226, 0x6330, 0x8a95, 0x8c3c, 0x5787, 0x1, 0x1);
        gbc.writeMem(0xddad, { 0x89 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x6226, gbc.sp());
        EXPECT(0xddae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xddad));
        // 89 03AD
        gbc.setState(0x895a, 0x9310, 0x2370, 0x4bbb, 0x5b94, 0xb61a, 0x1, 0x1);
        gbc.writeMem(0x895a, { 0x89 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x9310, gbc.sp());
        EXPECT(0x895b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x895a));
        // 89 03AE
        gbc.setState(0x7eda, 0xc136, 0x3250, 0xa6c6, 0x73dc, 0x2116, 0x0, 0x0);
        gbc.writeMem(0x7eda, { 0x89 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xc136, gbc.sp());
        EXPECT(0x7edb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 03AF
        gbc.setState(0xcca2, 0x82ef, 0x7110, 0x5cf7, 0x7219, 0x2bb6, 0x1, 0x0);
        gbc.writeMem(0xcca2, { 0x89 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x82ef, gbc.sp());
        EXPECT(0xcca3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xcca2));
        // 89 03B0
        gbc.setState(0xe58a, 0x720, 0x1240, 0xaa88, 0x8476, 0xf2a9, 0x0, 0x0);
        gbc.writeMem(0xe58a, { 0x89 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x720, gbc.sp());
        EXPECT(0xe58b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xe58a));
        // 89 03B1
        gbc.setState(0xd387, 0x8d51, 0xe510, 0xe87f, 0xf0f2, 0xcc4f, 0x0, 0x1);
        gbc.writeMem(0xd387, { 0x89 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x8d51, gbc.sp());
        EXPECT(0xd388, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xd387));
        // 89 03B2
        gbc.setState(0x2366, 0xf3e2, 0x4a10, 0xcdcd, 0xa214, 0xcc5c, 0x1, 0x0);
        gbc.writeMem(0x2366, { 0x89 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xf3e2, gbc.sp());
        EXPECT(0x2367, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 03B3
        gbc.setState(0x92b8, 0xf3a9, 0x5d00, 0xb9a7, 0xd218, 0x6ab9, 0x1, 0x1);
        gbc.writeMem(0x92b8, { 0x89 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xf3a9, gbc.sp());
        EXPECT(0x92b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x92b8));
        // 89 03B4
        gbc.setState(0x5ed3, 0x2227, 0x8400, 0xd9da, 0xaf94, 0x13ea, 0x0, 0x1);
        gbc.writeMem(0x5ed3, { 0x89 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x2227, gbc.sp());
        EXPECT(0x5ed4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 03B5
        gbc.setState(0xed26, 0xeda1, 0x62f0, 0xfafc, 0x5f14, 0xc50d, 0x0, 0x0);
        gbc.writeMem(0xed26, { 0x89 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xeda1, gbc.sp());
        EXPECT(0xed27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xed26));
        // 89 03B6
        gbc.setState(0x2840, 0x4cd8, 0x1a40, 0xd790, 0x7437, 0x7f1a, 0x0, 0x0);
        gbc.writeMem(0x2840, { 0x89 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x4cd8, gbc.sp());
        EXPECT(0x2841, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 03B7
        gbc.setState(0x6962, 0x5248, 0x42f0, 0x4db5, 0x3f61, 0xbcc4, 0x0, 0x1);
        gbc.writeMem(0x6962, { 0x89 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x5248, gbc.sp());
        EXPECT(0x6963, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 03B8
        gbc.setState(0x75d9, 0x27b9, 0xeb90, 0xb018, 0x245d, 0xcbb2, 0x1, 0x1);
        gbc.writeMem(0x75d9, { 0x89 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x27b9, gbc.sp());
        EXPECT(0x75da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 03B9
        gbc.setState(0xa79f, 0xdaa7, 0x8b10, 0x5aed, 0x1438, 0xf8a6, 0x0, 0x0);
        gbc.writeMem(0xa79f, { 0x89 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xdaa7, gbc.sp());
        EXPECT(0xa7a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xa79f));
        // 89 03BA
        gbc.setState(0x7036, 0x2949, 0x9a80, 0x84e5, 0xe5eb, 0x287, 0x0, 0x0);
        gbc.writeMem(0x7036, { 0x89 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x2949, gbc.sp());
        EXPECT(0x7037, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 03BB
        gbc.setState(0xc254, 0xd7fc, 0xb940, 0x5e3a, 0xecfe, 0x797, 0x0, 0x1);
        gbc.writeMem(0xc254, { 0x89 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xd7fc, gbc.sp());
        EXPECT(0xc255, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xc254));
        // 89 03BC
        gbc.setState(0x6d9d, 0x5c36, 0x17a0, 0x137b, 0x1f01, 0x7c04, 0x0, 0x0);
        gbc.writeMem(0x6d9d, { 0x89 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x5c36, gbc.sp());
        EXPECT(0x6d9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 03BD
        gbc.setState(0x5bbc, 0x3519, 0x7c70, 0xc67e, 0x6e11, 0x5ae3, 0x0, 0x1);
        gbc.writeMem(0x5bbc, { 0x89 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x3519, gbc.sp());
        EXPECT(0x5bbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 03BE
        gbc.setState(0x847c, 0x3f7e, 0xfec0, 0x6178, 0x916c, 0x6aef, 0x1, 0x0);
        gbc.writeMem(0x847c, { 0x89 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x3f7e, gbc.sp());
        EXPECT(0x847d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x847c));
        // 89 03BF
        gbc.setState(0x76bc, 0x9880, 0x7470, 0x819b, 0xf660, 0x4038, 0x0, 0x0);
        gbc.writeMem(0x76bc, { 0x89 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x9880, gbc.sp());
        EXPECT(0x76bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 03C0
        gbc.setState(0x1a94, 0x799d, 0xa740, 0x76e5, 0x4e2f, 0x9d6b, 0x0, 0x1);
        gbc.writeMem(0x1a94, { 0x89 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x799d, gbc.sp());
        EXPECT(0x1a95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 03C1
        gbc.setState(0xc122, 0x768, 0x53d0, 0x306f, 0x5c25, 0xade0, 0x1, 0x1);
        gbc.writeMem(0xc122, { 0x89 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x768, gbc.sp());
        EXPECT(0xc123, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xc122));
        // 89 03C2
        gbc.setState(0x6233, 0x6415, 0xa960, 0xa5fb, 0x1aca, 0xaf1b, 0x1, 0x1);
        gbc.writeMem(0x6233, { 0x89 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x6415, gbc.sp());
        EXPECT(0x6234, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 03C3
        gbc.setState(0xbb63, 0x789d, 0x1680, 0x9d4a, 0x5504, 0xbbeb, 0x0, 0x1);
        gbc.writeMem(0xbb63, { 0x89 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x789d, gbc.sp());
        EXPECT(0xbb64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xbb63));
        // 89 03C4
        gbc.setState(0x4eab, 0x2e3, 0x6250, 0xc7d9, 0x4283, 0x52e3, 0x1, 0x0);
        gbc.writeMem(0x4eab, { 0x89 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x2e3, gbc.sp());
        EXPECT(0x4eac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 03C5
        gbc.setState(0xbd6e, 0x972d, 0xbd60, 0xf48, 0x14bc, 0xea45, 0x1, 0x1);
        gbc.writeMem(0xbd6e, { 0x89 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x972d, gbc.sp());
        EXPECT(0xbd6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xbd6e));
        // 89 03C6
        gbc.setState(0xd334, 0xa906, 0x5800, 0x31ee, 0x6bce, 0x251, 0x1, 0x1);
        gbc.writeMem(0xd334, { 0x89 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xa906, gbc.sp());
        EXPECT(0xd335, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xd334));
        // 89 03C7
        gbc.setState(0x8c3c, 0xd9dd, 0x2100, 0x60c4, 0x9947, 0x9b67, 0x1, 0x0);
        gbc.writeMem(0x8c3c, { 0x89 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xd9dd, gbc.sp());
        EXPECT(0x8c3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x8c3c));
        // 89 03C8
        gbc.setState(0x5dd5, 0x4d40, 0x47d0, 0x5319, 0x91c1, 0x2e7d, 0x1, 0x1);
        gbc.writeMem(0x5dd5, { 0x89 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x4d40, gbc.sp());
        EXPECT(0x5dd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 03C9
        gbc.setState(0x74c7, 0xf8f6, 0xbf60, 0x28f4, 0x9428, 0xc1ce, 0x0, 0x1);
        gbc.writeMem(0x74c7, { 0x89 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xf8f6, gbc.sp());
        EXPECT(0x74c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 03CB
        gbc.setState(0x2a8a, 0x36c1, 0x6d0, 0x6656, 0xff03, 0x4286, 0x1, 0x1);
        gbc.writeMem(0x2a8a, { 0x89 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x36c1, gbc.sp());
        EXPECT(0x2a8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 03CC
        gbc.setState(0xd659, 0x1b01, 0x8f40, 0xae0b, 0xd05f, 0x5d1b, 0x0, 0x1);
        gbc.writeMem(0xd659, { 0x89 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x1b01, gbc.sp());
        EXPECT(0xd65a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xd659));
        // 89 03CD
        gbc.setState(0x4971, 0xc8e9, 0x3c80, 0xa33d, 0x371e, 0xf48d, 0x1, 0x1);
        gbc.writeMem(0x4971, { 0x89 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xc8e9, gbc.sp());
        EXPECT(0x4972, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 03CE
        gbc.setState(0x6ae8, 0x3a37, 0x8080, 0xe390, 0x2562, 0xaf4, 0x1, 0x0);
        gbc.writeMem(0x6ae8, { 0x89 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x3a37, gbc.sp());
        EXPECT(0x6ae9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 03CF
        gbc.setState(0x46ba, 0x72ea, 0x4ce0, 0x35f8, 0xe2ae, 0x2b9e, 0x0, 0x1);
        gbc.writeMem(0x46ba, { 0x89 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x72ea, gbc.sp());
        EXPECT(0x46bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 03D0
        gbc.setState(0x5b09, 0xaf1a, 0x3ec0, 0xc03c, 0x511, 0xbf83, 0x1, 0x1);
        gbc.writeMem(0x5b09, { 0x89 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xaf1a, gbc.sp());
        EXPECT(0x5b0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 03D1
        gbc.setState(0x2160, 0x8289, 0xdba0, 0xe6f4, 0xb941, 0xee67, 0x0, 0x1);
        gbc.writeMem(0x2160, { 0x89 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x8289, gbc.sp());
        EXPECT(0x2161, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 03D2
        gbc.setState(0x3c80, 0x2669, 0xd320, 0xc907, 0x24c0, 0x7096, 0x1, 0x0);
        gbc.writeMem(0x3c80, { 0x89 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x2669, gbc.sp());
        EXPECT(0x3c81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 03D3
        gbc.setState(0x2a01, 0x365c, 0xfe40, 0x4c55, 0x1014, 0x6bdd, 0x0, 0x0);
        gbc.writeMem(0x2a01, { 0x89 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x365c, gbc.sp());
        EXPECT(0x2a02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 03D4
        gbc.setState(0x4052, 0x42b0, 0x7c10, 0x8415, 0x4376, 0x1263, 0x1, 0x0);
        gbc.writeMem(0x4052, { 0x89 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x42b0, gbc.sp());
        EXPECT(0x4053, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 03D5
        gbc.setState(0x8ab1, 0xcb7e, 0xb6a0, 0xb8f0, 0x526e, 0xe2b3, 0x1, 0x1);
        gbc.writeMem(0x8ab1, { 0x89 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xcb7e, gbc.sp());
        EXPECT(0x8ab2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x8ab1));
        // 89 03D6
        gbc.setState(0xb903, 0x8b00, 0x4c50, 0xb348, 0x1893, 0x7c77, 0x1, 0x0);
        gbc.writeMem(0xb903, { 0x89 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x8b00, gbc.sp());
        EXPECT(0xb904, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xb903));
        // 89 03D7
        gbc.setState(0x8da2, 0x34b9, 0x64d0, 0xc3e9, 0xe18e, 0x5520, 0x0, 0x0);
        gbc.writeMem(0x8da2, { 0x89 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x34b9, gbc.sp());
        EXPECT(0x8da3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x8da2));
        // 89 03D8
        gbc.setState(0x940, 0x21b6, 0x12f0, 0x1f80, 0xc6b8, 0x22bc, 0x1, 0x1);
        gbc.writeMem(0x940, { 0x89 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x21b6, gbc.sp());
        EXPECT(0x941, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 03D9
        gbc.setState(0x8493, 0xfb05, 0x22e0, 0x52d8, 0x6e34, 0xbdb0, 0x0, 0x1);
        gbc.writeMem(0x8493, { 0x89 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xfb05, gbc.sp());
        EXPECT(0x8494, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x8493));
        // 89 03DA
        gbc.setState(0x27bd, 0xaa36, 0xbd80, 0xe121, 0x25e5, 0x550b, 0x0, 0x1);
        gbc.writeMem(0x27bd, { 0x89 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xaa36, gbc.sp());
        EXPECT(0x27be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 03DB
        gbc.setState(0x526, 0xe6d, 0x8260, 0xdfa1, 0x8e1f, 0x7be5, 0x1, 0x0);
        gbc.writeMem(0x526, { 0x89 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xe6d, gbc.sp());
        EXPECT(0x527, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 03DC
        gbc.setState(0xd8a8, 0x615d, 0x40d0, 0xd301, 0x2f62, 0xa5d, 0x1, 0x0);
        gbc.writeMem(0xd8a8, { 0x89 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x615d, gbc.sp());
        EXPECT(0xd8a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xd8a8));
        // 89 03DD
        gbc.setState(0x32ba, 0x4f49, 0x89c0, 0x79d6, 0x4d8a, 0xf7ca, 0x1, 0x1);
        gbc.writeMem(0x32ba, { 0x89 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x4f49, gbc.sp());
        EXPECT(0x32bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 03DE
        gbc.setState(0xc082, 0xa102, 0xeec0, 0x60a4, 0x4f18, 0xe610, 0x1, 0x1);
        gbc.writeMem(0xc082, { 0x89 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xa102, gbc.sp());
        EXPECT(0xc083, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xc082));
        // 89 03DF
        gbc.setState(0x3ce9, 0xa66c, 0xaef0, 0xa54, 0xb4da, 0xfcec, 0x0, 0x0);
        gbc.writeMem(0x3ce9, { 0x89 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xa66c, gbc.sp());
        EXPECT(0x3cea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 03E0
        gbc.setState(0xc802, 0x1345, 0xef50, 0x3d46, 0x6e28, 0xffa2, 0x0, 0x0);
        gbc.writeMem(0xc802, { 0x89 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x1345, gbc.sp());
        EXPECT(0xc803, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xc802));
        // 89 03E1
        gbc.setState(0x6494, 0x6a4d, 0x4110, 0x6693, 0xecb1, 0x8ab8, 0x0, 0x0);
        gbc.writeMem(0x6494, { 0x89 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x6a4d, gbc.sp());
        EXPECT(0x6495, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 03E3
        gbc.setState(0x3ef4, 0x4ab5, 0x84c0, 0xb764, 0x3d42, 0x3c47, 0x0, 0x1);
        gbc.writeMem(0x3ef4, { 0x89 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x4ab5, gbc.sp());
        EXPECT(0x3ef5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 03E4
        gbc.setState(0x4157, 0xe12f, 0xf1b0, 0x6157, 0x5dfb, 0xe0f0, 0x1, 0x1);
        gbc.writeMem(0x4157, { 0x89 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xe12f, gbc.sp());
        EXPECT(0x4158, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 89 03E5
        gbc.setState(0xd52c, 0xc4f7, 0x1a80, 0x9769, 0x1579, 0x4462, 0x1, 0x1);
        gbc.writeMem(0xd52c, { 0x89 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xc4f7, gbc.sp());
        EXPECT(0xd52d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xd52c));
        // 89 03E6
        gbc.setState(0x5ffa, 0x343a, 0x3070, 0x73b0, 0x749a, 0x328d, 0x1, 0x1);
        gbc.writeMem(0x5ffa, { 0x89 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x343a, gbc.sp());
        EXPECT(0x5ffb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 89 03E7
        gbc.setState(0x97f8, 0xed6b, 0x8970, 0x1a3a, 0x1427, 0xa74f, 0x0, 0x1);
        gbc.writeMem(0x97f8, { 0x89 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xed6b, gbc.sp());
        EXPECT(0x97f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x97f8));
    }
