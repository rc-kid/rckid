    TEST(gbcemu, opcode_f7) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // F7 0000
        gbc.setState(0x7454, 0xa828, 0xb460, 0xaa5d, 0x57ce, 0xcd9d, 0x0, 0x1);
        gbc.writeMem(0x7454, { 0xf7 });
        gbc.writeMem(0xa826, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xa826, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xa826));
        EXPECT(0x74, gbc.readMem(0xa827));
        // F7 0007
        gbc.setState(0x8cc6, 0xedac, 0x6200, 0x7df2, 0x2acc, 0x4651, 0x0, 0x0);
        gbc.writeMem(0x8cc6, { 0xf7 });
        gbc.writeMem(0xedaa, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xedaa, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x8cc6));
        EXPECT(0xc7, gbc.readMem(0xedaa));
        EXPECT(0x8c, gbc.readMem(0xedab));
        // F7 0008
        gbc.setState(0xa388, 0xc99f, 0x5620, 0x75dd, 0xafc6, 0x9997, 0x1, 0x1);
        gbc.writeMem(0xa388, { 0xf7 });
        gbc.writeMem(0xc99d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xc99d, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xa388));
        EXPECT(0x89, gbc.readMem(0xc99d));
        EXPECT(0xa3, gbc.readMem(0xc99e));
        // F7 000A
        gbc.setState(0x1766, 0xfbab, 0x1e0, 0x74ec, 0x70e2, 0xf321, 0x1, 0x0);
        gbc.writeMem(0x1766, { 0xf7 });
        gbc.writeMem(0xfba9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xfba9, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0xfba9));
        EXPECT(0x17, gbc.readMem(0xfbaa));
        // F7 0011
        gbc.setState(0xb4ce, 0x9e4b, 0x6960, 0xfa69, 0x1f02, 0xe3dc, 0x1, 0x1);
        gbc.writeMem(0x9e49, { 0x0, 0x0 });
        gbc.writeMem(0xb4ce, { 0xf7 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x9e49, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0x9e49));
        EXPECT(0xb4, gbc.readMem(0x9e4a));
        EXPECT(0xf7, gbc.readMem(0xb4ce));
        // F7 0012
        gbc.setState(0xc81d, 0x8703, 0x9b80, 0xe765, 0x9d83, 0xd1fb, 0x0, 0x0);
        gbc.writeMem(0x8701, { 0x0, 0x0 });
        gbc.writeMem(0xc81d, { 0xf7 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x8701, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0x8701));
        EXPECT(0xc8, gbc.readMem(0x8702));
        EXPECT(0xf7, gbc.readMem(0xc81d));
        // F7 0013
        gbc.setState(0x18ef, 0xe246, 0x46a0, 0xe1cc, 0x6a49, 0x85fe, 0x1, 0x0);
        gbc.writeMem(0x18ef, { 0xf7 });
        gbc.writeMem(0xe244, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xe244, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xe244));
        EXPECT(0x18, gbc.readMem(0xe245));
        // F7 0015
        gbc.setState(0x12eb, 0xecab, 0xae80, 0x6d38, 0xbdb8, 0xdd11, 0x1, 0x1);
        gbc.writeMem(0x12eb, { 0xf7 });
        gbc.writeMem(0xeca9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xeca9, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xeca9));
        EXPECT(0x12, gbc.readMem(0xecaa));
        // F7 0016
        gbc.setState(0x4bf1, 0xfd76, 0x4330, 0x30a2, 0x1b54, 0x4202, 0x1, 0x0);
        gbc.writeMem(0x4bf1, { 0xf7 });
        gbc.writeMem(0xfd74, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xfd74, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xfd74));
        EXPECT(0x4b, gbc.readMem(0xfd75));
        // F7 0018
        gbc.setState(0x70ff, 0xfcba, 0x4f40, 0x7109, 0x13b, 0x9f7d, 0x0, 0x0);
        gbc.writeMem(0x70ff, { 0xf7 });
        gbc.writeMem(0xfcb8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xfcb8, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xfcb8));
        EXPECT(0x71, gbc.readMem(0xfcb9));
        // F7 0019
        gbc.setState(0x51a3, 0xb800, 0xdba0, 0x733a, 0x1ced, 0xd14e, 0x0, 0x1);
        gbc.writeMem(0x51a3, { 0xf7 });
        gbc.writeMem(0xb7fe, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xb7fe, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xb7fe));
        EXPECT(0x51, gbc.readMem(0xb7ff));
        // F7 001A
        gbc.setState(0x6493, 0xa070, 0x4ec0, 0xf9d9, 0x3189, 0x1314, 0x0, 0x1);
        gbc.writeMem(0x6493, { 0xf7 });
        gbc.writeMem(0xa06e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xa06e, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xa06e));
        EXPECT(0x64, gbc.readMem(0xa06f));
        // F7 001D
        gbc.setState(0xa1f8, 0x9880, 0x15b0, 0xee74, 0xe16e, 0xc6af, 0x1, 0x0);
        gbc.writeMem(0x987e, { 0x0, 0x0 });
        gbc.writeMem(0xa1f8, { 0xf7 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x987e, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0x987e));
        EXPECT(0xa1, gbc.readMem(0x987f));
        EXPECT(0xf7, gbc.readMem(0xa1f8));
        // F7 001F
        gbc.setState(0xc46, 0xe223, 0xfa60, 0xae0e, 0x76e0, 0xc0bf, 0x0, 0x1);
        gbc.writeMem(0xc46, { 0xf7 });
        gbc.writeMem(0xe221, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xe221, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xe221));
        EXPECT(0xc, gbc.readMem(0xe222));
        // F7 0020
        gbc.setState(0xa5b7, 0xda0b, 0x2f0, 0xa04f, 0xaf46, 0x76a4, 0x1, 0x0);
        gbc.writeMem(0xa5b7, { 0xf7 });
        gbc.writeMem(0xda09, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xda09, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xa5b7));
        EXPECT(0xb8, gbc.readMem(0xda09));
        EXPECT(0xa5, gbc.readMem(0xda0a));
        // F7 0022
        gbc.setState(0x8f24, 0xf8f5, 0x6010, 0xeb3b, 0x39d4, 0x90db, 0x0, 0x1);
        gbc.writeMem(0x8f24, { 0xf7 });
        gbc.writeMem(0xf8f3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf8f3, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x8f24));
        EXPECT(0x25, gbc.readMem(0xf8f3));
        EXPECT(0x8f, gbc.readMem(0xf8f4));
        // F7 0023
        gbc.setState(0x27de, 0xeef7, 0xae0, 0x6d15, 0x1458, 0x269b, 0x1, 0x0);
        gbc.writeMem(0x27de, { 0xf7 });
        gbc.writeMem(0xeef5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xeef5, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xeef5));
        EXPECT(0x27, gbc.readMem(0xeef6));
        // F7 0026
        gbc.setState(0xb806, 0xcd38, 0x8470, 0x3734, 0x3558, 0x3035, 0x0, 0x0);
        gbc.writeMem(0xb806, { 0xf7 });
        gbc.writeMem(0xcd36, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xcd36, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xb806));
        EXPECT(0x7, gbc.readMem(0xcd36));
        EXPECT(0xb8, gbc.readMem(0xcd37));
        // F7 0027
        gbc.setState(0x5d42, 0xdf1d, 0xd8f0, 0x9ec7, 0xdf91, 0x7312, 0x0, 0x1);
        gbc.writeMem(0x5d42, { 0xf7 });
        gbc.writeMem(0xdf1b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xdf1b, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xdf1b));
        EXPECT(0x5d, gbc.readMem(0xdf1c));
        // F7 0028
        gbc.setState(0x3e81, 0xb791, 0xd2f0, 0x7357, 0x4afb, 0x29d9, 0x1, 0x0);
        gbc.writeMem(0x3e81, { 0xf7 });
        gbc.writeMem(0xb78f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xb78f, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xb78f));
        EXPECT(0x3e, gbc.readMem(0xb790));
        // F7 002A
        gbc.setState(0x793e, 0x92a8, 0xa8c0, 0x56d8, 0xd38, 0xa753, 0x0, 0x1);
        gbc.writeMem(0x793e, { 0xf7 });
        gbc.writeMem(0x92a6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x92a6, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x92a6));
        EXPECT(0x79, gbc.readMem(0x92a7));
        // F7 002D
        gbc.setState(0x951b, 0xd8b4, 0x92b0, 0x9bad, 0x1c3b, 0xf0d3, 0x0, 0x0);
        gbc.writeMem(0x951b, { 0xf7 });
        gbc.writeMem(0xd8b2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xd8b2, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x951b));
        EXPECT(0x1c, gbc.readMem(0xd8b2));
        EXPECT(0x95, gbc.readMem(0xd8b3));
        // F7 002F
        gbc.setState(0x7d8a, 0xca1b, 0x63e0, 0xa735, 0xcf14, 0xa5d, 0x0, 0x0);
        gbc.writeMem(0x7d8a, { 0xf7 });
        gbc.writeMem(0xca19, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xca19, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xca19));
        EXPECT(0x7d, gbc.readMem(0xca1a));
        // F7 0030
        gbc.setState(0x7b92, 0xa8e4, 0x3d30, 0xc96e, 0x6a0, 0xa4a, 0x1, 0x0);
        gbc.writeMem(0x7b92, { 0xf7 });
        gbc.writeMem(0xa8e2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xa8e2, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xa8e2));
        EXPECT(0x7b, gbc.readMem(0xa8e3));
        // F7 0031
        gbc.setState(0xe714, 0xbff4, 0xb6d0, 0x25e9, 0xdea, 0xdf3d, 0x1, 0x0);
        gbc.writeMem(0xbff2, { 0x0, 0x0 });
        gbc.writeMem(0xe714, { 0xf7 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xbff2, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xbff2));
        EXPECT(0xe7, gbc.readMem(0xbff3));
        EXPECT(0xf7, gbc.readMem(0xe714));
        // F7 0033
        gbc.setState(0xcc, 0xca05, 0xa9f0, 0x13ef, 0x957c, 0x25f8, 0x0, 0x0);
        gbc.writeMem(0xcc, { 0xf7 });
        gbc.writeMem(0xca03, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xca03, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xca03));
        EXPECT(0x0, gbc.readMem(0xca04));
        // F7 0034
        gbc.setState(0xa06d, 0xa6f2, 0x3b30, 0xa1d, 0x557b, 0x3e71, 0x0, 0x0);
        gbc.writeMem(0xa06d, { 0xf7 });
        gbc.writeMem(0xa6f0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xa6f0, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xa06d));
        EXPECT(0x6e, gbc.readMem(0xa6f0));
        EXPECT(0xa0, gbc.readMem(0xa6f1));
        // F7 0036
        gbc.setState(0xccdb, 0xce36, 0xe7a0, 0x3263, 0xbff9, 0x5f1b, 0x0, 0x0);
        gbc.writeMem(0xccdb, { 0xf7 });
        gbc.writeMem(0xce34, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xce34, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xccdb));
        EXPECT(0xdc, gbc.readMem(0xce34));
        EXPECT(0xcc, gbc.readMem(0xce35));
        // F7 0038
        gbc.setState(0xab36, 0xa4d9, 0x1e80, 0xd406, 0x169b, 0xc9c0, 0x1, 0x0);
        gbc.writeMem(0xa4d7, { 0x0, 0x0 });
        gbc.writeMem(0xab36, { 0xf7 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xa4d7, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xa4d7));
        EXPECT(0xab, gbc.readMem(0xa4d8));
        EXPECT(0xf7, gbc.readMem(0xab36));
        // F7 0039
        gbc.setState(0x33fa, 0xfc0c, 0x5a60, 0xdcbf, 0x1390, 0x5982, 0x0, 0x1);
        gbc.writeMem(0x33fa, { 0xf7 });
        gbc.writeMem(0xfc0a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xfc0a, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xfc0a));
        EXPECT(0x33, gbc.readMem(0xfc0b));
        // F7 003A
        gbc.setState(0x474b, 0xabc3, 0xbba0, 0x6a02, 0x40db, 0xf616, 0x1, 0x1);
        gbc.writeMem(0x474b, { 0xf7 });
        gbc.writeMem(0xabc1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xabc1, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xabc1));
        EXPECT(0x47, gbc.readMem(0xabc2));
        // F7 003B
        gbc.setState(0x868d, 0xd3ee, 0xae90, 0xc68b, 0xdda4, 0x75a3, 0x0, 0x1);
        gbc.writeMem(0x868d, { 0xf7 });
        gbc.writeMem(0xd3ec, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xd3ec, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x868d));
        EXPECT(0x8e, gbc.readMem(0xd3ec));
        EXPECT(0x86, gbc.readMem(0xd3ed));
        // F7 003D
        gbc.setState(0xb3a6, 0x8024, 0x8b00, 0x46b2, 0x9892, 0x3f1e, 0x0, 0x1);
        gbc.writeMem(0x8022, { 0x0, 0x0 });
        gbc.writeMem(0xb3a6, { 0xf7 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x8022, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x8022));
        EXPECT(0xb3, gbc.readMem(0x8023));
        EXPECT(0xf7, gbc.readMem(0xb3a6));
        // F7 003E
        gbc.setState(0xc8a5, 0xba05, 0xef30, 0x4134, 0x43d9, 0x1f3d, 0x0, 0x0);
        gbc.writeMem(0xba03, { 0x0, 0x0 });
        gbc.writeMem(0xc8a5, { 0xf7 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xba03, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xba03));
        EXPECT(0xc8, gbc.readMem(0xba04));
        EXPECT(0xf7, gbc.readMem(0xc8a5));
        // F7 003F
        gbc.setState(0xed13, 0xcb7b, 0x1fa0, 0x9b1b, 0xeee1, 0x7ccb, 0x0, 0x1);
        gbc.writeMem(0xcb79, { 0x0, 0x0 });
        gbc.writeMem(0xed13, { 0xf7 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xcb79, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xcb79));
        EXPECT(0xed, gbc.readMem(0xcb7a));
        EXPECT(0xf7, gbc.readMem(0xed13));
        // F7 0040
        gbc.setState(0xb9a1, 0xecac, 0x8360, 0xfa2f, 0x151b, 0x53fc, 0x0, 0x1);
        gbc.writeMem(0xb9a1, { 0xf7 });
        gbc.writeMem(0xecaa, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xecaa, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xb9a1));
        EXPECT(0xa2, gbc.readMem(0xecaa));
        EXPECT(0xb9, gbc.readMem(0xecab));
        // F7 0042
        gbc.setState(0x3594, 0xe30c, 0xfdb0, 0x1bf5, 0x72d9, 0xfb21, 0x1, 0x1);
        gbc.writeMem(0x3594, { 0xf7 });
        gbc.writeMem(0xe30a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xe30a, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xe30a));
        EXPECT(0x35, gbc.readMem(0xe30b));
        // F7 0043
        gbc.setState(0x2ad, 0xd7dd, 0x5bd0, 0x4227, 0x9486, 0xa46f, 0x0, 0x0);
        gbc.writeMem(0x2ad, { 0xf7 });
        gbc.writeMem(0xd7db, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xd7db, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xd7db));
        EXPECT(0x2, gbc.readMem(0xd7dc));
        // F7 0044
        gbc.setState(0x2041, 0xb966, 0xd370, 0x618, 0x3164, 0xb887, 0x1, 0x0);
        gbc.writeMem(0x2041, { 0xf7 });
        gbc.writeMem(0xb964, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xb964, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xb964));
        EXPECT(0x20, gbc.readMem(0xb965));
        // F7 0046
        gbc.setState(0xd7d1, 0x925f, 0xf390, 0x6a98, 0xc440, 0xe302, 0x1, 0x0);
        gbc.writeMem(0x925d, { 0x0, 0x0 });
        gbc.writeMem(0xd7d1, { 0xf7 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x925d, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0x925d));
        EXPECT(0xd7, gbc.readMem(0x925e));
        EXPECT(0xf7, gbc.readMem(0xd7d1));
        // F7 0047
        gbc.setState(0x1abe, 0xfa41, 0x1090, 0x6e83, 0x9692, 0xbf47, 0x0, 0x1);
        gbc.writeMem(0x1abe, { 0xf7 });
        gbc.writeMem(0xfa3f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xfa3f, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xfa3f));
        EXPECT(0x1a, gbc.readMem(0xfa40));
        // F7 0049
        gbc.setState(0x87ec, 0xa9f6, 0x800, 0xbb3a, 0xc759, 0x7fa9, 0x1, 0x1);
        gbc.writeMem(0x87ec, { 0xf7 });
        gbc.writeMem(0xa9f4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xa9f4, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x87ec));
        EXPECT(0xed, gbc.readMem(0xa9f4));
        EXPECT(0x87, gbc.readMem(0xa9f5));
        // F7 004B
        gbc.setState(0x31dc, 0xdc85, 0xb340, 0x3d57, 0x92a0, 0xdf39, 0x1, 0x0);
        gbc.writeMem(0x31dc, { 0xf7 });
        gbc.writeMem(0xdc83, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xdc83, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xdc83));
        EXPECT(0x31, gbc.readMem(0xdc84));
        // F7 004D
        gbc.setState(0x1a94, 0xd801, 0x1a30, 0x1662, 0xd83e, 0x539c, 0x1, 0x1);
        gbc.writeMem(0x1a94, { 0xf7 });
        gbc.writeMem(0xd7ff, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xd7ff, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xd7ff));
        EXPECT(0x1a, gbc.readMem(0xd800));
        // F7 0050
        gbc.setState(0xaa5a, 0xefaf, 0xbe30, 0x6846, 0xecbf, 0xb45d, 0x1, 0x0);
        gbc.writeMem(0xaa5a, { 0xf7 });
        gbc.writeMem(0xefad, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xefad, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xaa5a));
        EXPECT(0x5b, gbc.readMem(0xefad));
        EXPECT(0xaa, gbc.readMem(0xefae));
        // F7 0056
        gbc.setState(0x692, 0x927c, 0x68d0, 0xe3ee, 0x6568, 0x4d96, 0x0, 0x1);
        gbc.writeMem(0x692, { 0xf7 });
        gbc.writeMem(0x927a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x927a, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x927a));
        EXPECT(0x6, gbc.readMem(0x927b));
        // F7 0057
        gbc.setState(0x879a, 0xc4da, 0x6df0, 0x5267, 0x175a, 0xc751, 0x1, 0x1);
        gbc.writeMem(0x879a, { 0xf7 });
        gbc.writeMem(0xc4d8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xc4d8, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x879a));
        EXPECT(0x9b, gbc.readMem(0xc4d8));
        EXPECT(0x87, gbc.readMem(0xc4d9));
        // F7 005D
        gbc.setState(0x18fd, 0xd90b, 0x5a10, 0x8909, 0xc278, 0x8968, 0x1, 0x1);
        gbc.writeMem(0x18fd, { 0xf7 });
        gbc.writeMem(0xd909, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xd909, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xd909));
        EXPECT(0x18, gbc.readMem(0xd90a));
        // F7 005E
        gbc.setState(0xbb1d, 0xf56a, 0x5ae0, 0x8614, 0xf278, 0x521a, 0x1, 0x1);
        gbc.writeMem(0xbb1d, { 0xf7 });
        gbc.writeMem(0xf568, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xf568, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xbb1d));
        EXPECT(0x1e, gbc.readMem(0xf568));
        EXPECT(0xbb, gbc.readMem(0xf569));
        // F7 0061
        gbc.setState(0x2cee, 0x88a1, 0x6fc0, 0xcc12, 0x73f, 0x2eeb, 0x0, 0x1);
        gbc.writeMem(0x2cee, { 0xf7 });
        gbc.writeMem(0x889f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x889f, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0x889f));
        EXPECT(0x2c, gbc.readMem(0x88a0));
        // F7 0063
        gbc.setState(0x8723, 0xcd76, 0x7b40, 0xb167, 0xe53c, 0x922c, 0x1, 0x0);
        gbc.writeMem(0x8723, { 0xf7 });
        gbc.writeMem(0xcd74, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xcd74, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x8723));
        EXPECT(0x24, gbc.readMem(0xcd74));
        EXPECT(0x87, gbc.readMem(0xcd75));
        // F7 0064
        gbc.setState(0x6fe5, 0xc6dc, 0x3620, 0x2d22, 0xd9e3, 0xb08d, 0x0, 0x0);
        gbc.writeMem(0x6fe5, { 0xf7 });
        gbc.writeMem(0xc6da, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xc6da, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xc6da));
        EXPECT(0x6f, gbc.readMem(0xc6db));
        // F7 0065
        gbc.setState(0x8906, 0xee64, 0xa990, 0x641b, 0x5906, 0xf732, 0x0, 0x0);
        gbc.writeMem(0x8906, { 0xf7 });
        gbc.writeMem(0xee62, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xee62, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x8906));
        EXPECT(0x7, gbc.readMem(0xee62));
        EXPECT(0x89, gbc.readMem(0xee63));
        // F7 0069
        gbc.setState(0x514a, 0xc015, 0x81e0, 0xf53d, 0x6310, 0x3f0b, 0x0, 0x1);
        gbc.writeMem(0x514a, { 0xf7 });
        gbc.writeMem(0xc013, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xc013, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xc013));
        EXPECT(0x51, gbc.readMem(0xc014));
        // F7 006C
        gbc.setState(0x4e35, 0xc8b5, 0xd8f0, 0xd813, 0x48e2, 0xf84f, 0x1, 0x0);
        gbc.writeMem(0x4e35, { 0xf7 });
        gbc.writeMem(0xc8b3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xc8b3, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xc8b3));
        EXPECT(0x4e, gbc.readMem(0xc8b4));
        // F7 006D
        gbc.setState(0x2fb2, 0xc01b, 0x9b80, 0xed49, 0x206a, 0x1077, 0x0, 0x1);
        gbc.writeMem(0x2fb2, { 0xf7 });
        gbc.writeMem(0xc019, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xc019, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xc019));
        EXPECT(0x2f, gbc.readMem(0xc01a));
        // F7 006F
        gbc.setState(0x90df, 0xe712, 0x69c0, 0x9d7, 0x4729, 0x4e22, 0x1, 0x1);
        gbc.writeMem(0x90df, { 0xf7 });
        gbc.writeMem(0xe710, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xe710, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x90df));
        EXPECT(0xe0, gbc.readMem(0xe710));
        EXPECT(0x90, gbc.readMem(0xe711));
        // F7 0070
        gbc.setState(0xcf1d, 0xd971, 0xe670, 0xc576, 0xb2bd, 0x391, 0x0, 0x1);
        gbc.writeMem(0xcf1d, { 0xf7 });
        gbc.writeMem(0xd96f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xd96f, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xcf1d));
        EXPECT(0x1e, gbc.readMem(0xd96f));
        EXPECT(0xcf, gbc.readMem(0xd970));
        // F7 0073
        gbc.setState(0xd905, 0xf4ca, 0x2180, 0x2c26, 0xd333, 0x2b14, 0x1, 0x1);
        gbc.writeMem(0xd905, { 0xf7 });
        gbc.writeMem(0xf4c8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xf4c8, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xd905));
        EXPECT(0x6, gbc.readMem(0xf4c8));
        EXPECT(0xd9, gbc.readMem(0xf4c9));
        // F7 0074
        gbc.setState(0x1659, 0x95ac, 0x7040, 0xc173, 0x1a71, 0x3c8b, 0x0, 0x1);
        gbc.writeMem(0x1659, { 0xf7 });
        gbc.writeMem(0x95aa, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x95aa, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0x95aa));
        EXPECT(0x16, gbc.readMem(0x95ab));
        // F7 0076
        gbc.setState(0x501f, 0x9d98, 0x62a0, 0x4977, 0xefa3, 0x830d, 0x1, 0x1);
        gbc.writeMem(0x501f, { 0xf7 });
        gbc.writeMem(0x9d96, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x9d96, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9d96));
        EXPECT(0x50, gbc.readMem(0x9d97));
        // F7 0077
        gbc.setState(0x10e8, 0xcb65, 0x4310, 0x9a03, 0x4f54, 0x2162, 0x1, 0x1);
        gbc.writeMem(0x10e8, { 0xf7 });
        gbc.writeMem(0xcb63, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xcb63, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xcb63));
        EXPECT(0x10, gbc.readMem(0xcb64));
        // F7 0078
        gbc.setState(0x32be, 0xfe16, 0x9b10, 0xcc3b, 0xc18a, 0xf6f5, 0x1, 0x0);
        gbc.writeMem(0x32be, { 0xf7 });
        gbc.writeMem(0xfe14, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xfe14, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xfe14));
        EXPECT(0x32, gbc.readMem(0xfe15));
        // F7 007D
        gbc.setState(0x6eaf, 0xd0e0, 0x44f0, 0xd1e7, 0x2aa7, 0xc2c3, 0x1, 0x0);
        gbc.writeMem(0x6eaf, { 0xf7 });
        gbc.writeMem(0xd0de, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xd0de, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xd0de));
        EXPECT(0x6e, gbc.readMem(0xd0df));
        // F7 007E
        gbc.setState(0xd4b1, 0xdb6c, 0x8d60, 0x732a, 0x56fb, 0x16d3, 0x1, 0x1);
        gbc.writeMem(0xd4b1, { 0xf7 });
        gbc.writeMem(0xdb6a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xdb6a, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xd4b1));
        EXPECT(0xb2, gbc.readMem(0xdb6a));
        EXPECT(0xd4, gbc.readMem(0xdb6b));
        // F7 0080
        gbc.setState(0x37b4, 0xd756, 0xa090, 0xf377, 0x6630, 0xcee8, 0x0, 0x1);
        gbc.writeMem(0x37b4, { 0xf7 });
        gbc.writeMem(0xd754, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xd754, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xd754));
        EXPECT(0x37, gbc.readMem(0xd755));
        // F7 0083
        gbc.setState(0xca58, 0xf8bb, 0x1d70, 0x5395, 0xccc5, 0x83bb, 0x1, 0x0);
        gbc.writeMem(0xca58, { 0xf7 });
        gbc.writeMem(0xf8b9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xf8b9, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xca58));
        EXPECT(0x59, gbc.readMem(0xf8b9));
        EXPECT(0xca, gbc.readMem(0xf8ba));
        // F7 0084
        gbc.setState(0x84b4, 0x8d6c, 0x4e60, 0x43e8, 0x2e31, 0x1820, 0x1, 0x0);
        gbc.writeMem(0x84b4, { 0xf7 });
        gbc.writeMem(0x8d6a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x8d6a, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x84b4));
        EXPECT(0xb5, gbc.readMem(0x8d6a));
        EXPECT(0x84, gbc.readMem(0x8d6b));
        // F7 0085
        gbc.setState(0xa187, 0xc9ac, 0x190, 0x6a46, 0x1400, 0x570a, 0x0, 0x1);
        gbc.writeMem(0xa187, { 0xf7 });
        gbc.writeMem(0xc9aa, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xc9aa, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xa187));
        EXPECT(0x88, gbc.readMem(0xc9aa));
        EXPECT(0xa1, gbc.readMem(0xc9ab));
        // F7 0089
        gbc.setState(0xb329, 0xc352, 0x51e0, 0x6c45, 0x693a, 0xc6de, 0x0, 0x0);
        gbc.writeMem(0xb329, { 0xf7 });
        gbc.writeMem(0xc350, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xc350, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xb329));
        EXPECT(0x2a, gbc.readMem(0xc350));
        EXPECT(0xb3, gbc.readMem(0xc351));
        // F7 008A
        gbc.setState(0xe3c6, 0xccb8, 0xfca0, 0xeff9, 0x79b4, 0x6102, 0x1, 0x0);
        gbc.writeMem(0xccb6, { 0x0, 0x0 });
        gbc.writeMem(0xe3c6, { 0xf7 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xccb6, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xccb6));
        EXPECT(0xe3, gbc.readMem(0xccb7));
        EXPECT(0xf7, gbc.readMem(0xe3c6));
        // F7 008C
        gbc.setState(0xbf83, 0x80f7, 0xb070, 0x2b88, 0xe214, 0xc337, 0x1, 0x0);
        gbc.writeMem(0x80f5, { 0x0, 0x0 });
        gbc.writeMem(0xbf83, { 0xf7 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x80f5, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0x80f5));
        EXPECT(0xbf, gbc.readMem(0x80f6));
        EXPECT(0xf7, gbc.readMem(0xbf83));
        // F7 008D
        gbc.setState(0x37af, 0x97a6, 0x6410, 0x6b05, 0xa01e, 0xfdf8, 0x0, 0x1);
        gbc.writeMem(0x37af, { 0xf7 });
        gbc.writeMem(0x97a4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x97a4, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x97a4));
        EXPECT(0x37, gbc.readMem(0x97a5));
        // F7 008E
        gbc.setState(0x5d44, 0xdfd9, 0xa5e0, 0x5dbf, 0xb491, 0x4f3d, 0x1, 0x1);
        gbc.writeMem(0x5d44, { 0xf7 });
        gbc.writeMem(0xdfd7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xdfd7, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0xdfd7));
        EXPECT(0x5d, gbc.readMem(0xdfd8));
        // F7 0090
        gbc.setState(0xe1f8, 0xdc17, 0x1350, 0x1b65, 0xbea1, 0xc2c4, 0x0, 0x0);
        gbc.writeMem(0xdc15, { 0x0, 0x0 });
        gbc.writeMem(0xe1f8, { 0xf7 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xdc15, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0xdc15));
        EXPECT(0xe1, gbc.readMem(0xdc16));
        EXPECT(0xf7, gbc.readMem(0xe1f8));
        // F7 0092
        gbc.setState(0xc88c, 0xbaea, 0x7520, 0xe755, 0x851f, 0x5071, 0x0, 0x0);
        gbc.writeMem(0xbae8, { 0x0, 0x0 });
        gbc.writeMem(0xc88c, { 0xf7 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xbae8, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xbae8));
        EXPECT(0xc8, gbc.readMem(0xbae9));
        EXPECT(0xf7, gbc.readMem(0xc88c));
        // F7 0093
        gbc.setState(0xae02, 0x93a9, 0x5810, 0xc12d, 0xb08e, 0x7991, 0x1, 0x0);
        gbc.writeMem(0x93a7, { 0x0, 0x0 });
        gbc.writeMem(0xae02, { 0xf7 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x93a7, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x93a7));
        EXPECT(0xae, gbc.readMem(0x93a8));
        EXPECT(0xf7, gbc.readMem(0xae02));
        // F7 0094
        gbc.setState(0x3863, 0xec41, 0x4750, 0x4530, 0x1537, 0x804c, 0x0, 0x0);
        gbc.writeMem(0x3863, { 0xf7 });
        gbc.writeMem(0xec3f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xec3f, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xec3f));
        EXPECT(0x38, gbc.readMem(0xec40));
        // F7 0096
        gbc.setState(0x67ab, 0xa35e, 0x37c0, 0x4373, 0xebd2, 0x7a2c, 0x0, 0x1);
        gbc.writeMem(0x67ab, { 0xf7 });
        gbc.writeMem(0xa35c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xa35c, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xa35c));
        EXPECT(0x67, gbc.readMem(0xa35d));
        // F7 0098
        gbc.setState(0x15d6, 0x9f18, 0xbf20, 0x5348, 0x3e51, 0xce46, 0x0, 0x0);
        gbc.writeMem(0x15d6, { 0xf7 });
        gbc.writeMem(0x9f16, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x9f16, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0x9f16));
        EXPECT(0x15, gbc.readMem(0x9f17));
        // F7 009C
        gbc.setState(0x8169, 0xad2c, 0xfd0, 0x11ef, 0x84cc, 0x1eb5, 0x0, 0x1);
        gbc.writeMem(0x8169, { 0xf7 });
        gbc.writeMem(0xad2a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xad2a, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x8169));
        EXPECT(0x6a, gbc.readMem(0xad2a));
        EXPECT(0x81, gbc.readMem(0xad2b));
        // F7 009E
        gbc.setState(0xc51, 0xfa27, 0x7af0, 0x60b1, 0xfd2c, 0x8c68, 0x0, 0x0);
        gbc.writeMem(0xc51, { 0xf7 });
        gbc.writeMem(0xfa25, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xfa25, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xfa25));
        EXPECT(0xc, gbc.readMem(0xfa26));
        // F7 009F
        gbc.setState(0x63a9, 0xed72, 0x6060, 0xf983, 0xd3e9, 0x5319, 0x0, 0x1);
        gbc.writeMem(0x63a9, { 0xf7 });
        gbc.writeMem(0xed70, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xed70, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xed70));
        EXPECT(0x63, gbc.readMem(0xed71));
        // F7 00A1
        gbc.setState(0x3d40, 0x8812, 0x43b0, 0xa910, 0xb9a7, 0x7130, 0x0, 0x0);
        gbc.writeMem(0x3d40, { 0xf7 });
        gbc.writeMem(0x8810, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x8810, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0x8810));
        EXPECT(0x3d, gbc.readMem(0x8811));
        // F7 00A2
        gbc.setState(0x46f2, 0x97d0, 0x6fc0, 0x3c1d, 0x1449, 0x3d7, 0x1, 0x1);
        gbc.writeMem(0x46f2, { 0xf7 });
        gbc.writeMem(0x97ce, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x97ce, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0x97ce));
        EXPECT(0x46, gbc.readMem(0x97cf));
        // F7 00A4
        gbc.setState(0xb37c, 0x862e, 0xce10, 0x531c, 0x8ce4, 0xa698, 0x0, 0x1);
        gbc.writeMem(0x862c, { 0x0, 0x0 });
        gbc.writeMem(0xb37c, { 0xf7 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x862c, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x862c));
        EXPECT(0xb3, gbc.readMem(0x862d));
        EXPECT(0xf7, gbc.readMem(0xb37c));
        // F7 00A6
        gbc.setState(0x5e0, 0x828c, 0x6e00, 0xaa85, 0xfe2b, 0xb8f9, 0x1, 0x1);
        gbc.writeMem(0x5e0, { 0xf7 });
        gbc.writeMem(0x828a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x828a, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x828a));
        EXPECT(0x5, gbc.readMem(0x828b));
        // F7 00A7
        gbc.setState(0x974d, 0x9cbe, 0xe8c0, 0xcb74, 0x3e83, 0x61ba, 0x1, 0x1);
        gbc.writeMem(0x974d, { 0xf7 });
        gbc.writeMem(0x9cbc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x9cbc, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x974d));
        EXPECT(0x4e, gbc.readMem(0x9cbc));
        EXPECT(0x97, gbc.readMem(0x9cbd));
        // F7 00A8
        gbc.setState(0x2a43, 0x87e6, 0x37c0, 0xd8f5, 0xd1c2, 0x8ead, 0x0, 0x0);
        gbc.writeMem(0x2a43, { 0xf7 });
        gbc.writeMem(0x87e4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x87e4, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x87e4));
        EXPECT(0x2a, gbc.readMem(0x87e5));
        // F7 00A9
        gbc.setState(0xbbe6, 0xa98a, 0xaa60, 0x326d, 0xe152, 0xa8cd, 0x0, 0x1);
        gbc.writeMem(0xa988, { 0x0, 0x0 });
        gbc.writeMem(0xbbe6, { 0xf7 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xa988, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xa988));
        EXPECT(0xbb, gbc.readMem(0xa989));
        EXPECT(0xf7, gbc.readMem(0xbbe6));
        // F7 00AB
        gbc.setState(0x606d, 0xa299, 0x8cc0, 0xd737, 0x7a71, 0xba7e, 0x0, 0x1);
        gbc.writeMem(0x606d, { 0xf7 });
        gbc.writeMem(0xa297, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xa297, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xa297));
        EXPECT(0x60, gbc.readMem(0xa298));
        // F7 00B2
        gbc.setState(0x2fe7, 0xfb3b, 0x10b0, 0x29e2, 0xa03d, 0xc9, 0x1, 0x0);
        gbc.writeMem(0x2fe7, { 0xf7 });
        gbc.writeMem(0xfb39, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xfb39, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xfb39));
        EXPECT(0x2f, gbc.readMem(0xfb3a));
        // F7 00B7
        gbc.setState(0x51df, 0xd38e, 0x9110, 0x415a, 0x70e9, 0xc241, 0x1, 0x1);
        gbc.writeMem(0x51df, { 0xf7 });
        gbc.writeMem(0xd38c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xd38c, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xd38c));
        EXPECT(0x51, gbc.readMem(0xd38d));
        // F7 00B8
        gbc.setState(0x8739, 0xf7cf, 0x1310, 0xbdfd, 0xf9ae, 0x16b1, 0x0, 0x0);
        gbc.writeMem(0x8739, { 0xf7 });
        gbc.writeMem(0xf7cd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xf7cd, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x8739));
        EXPECT(0x3a, gbc.readMem(0xf7cd));
        EXPECT(0x87, gbc.readMem(0xf7ce));
        // F7 00BD
        gbc.setState(0xbdab, 0xc106, 0xb460, 0x8adf, 0x2047, 0x4b05, 0x0, 0x0);
        gbc.writeMem(0xbdab, { 0xf7 });
        gbc.writeMem(0xc104, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xc104, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xbdab));
        EXPECT(0xac, gbc.readMem(0xc104));
        EXPECT(0xbd, gbc.readMem(0xc105));
        // F7 00BE
        gbc.setState(0x8276, 0xfe29, 0x94d0, 0xbb85, 0x5f4d, 0x2945, 0x0, 0x1);
        gbc.writeMem(0x8276, { 0xf7 });
        gbc.writeMem(0xfe27, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xfe27, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x8276));
        EXPECT(0x77, gbc.readMem(0xfe27));
        EXPECT(0x82, gbc.readMem(0xfe28));
        // F7 00BF
        gbc.setState(0xaaeb, 0xce3b, 0x4d0, 0x2485, 0x225f, 0x1dcb, 0x0, 0x0);
        gbc.writeMem(0xaaeb, { 0xf7 });
        gbc.writeMem(0xce39, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xce39, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xaaeb));
        EXPECT(0xec, gbc.readMem(0xce39));
        EXPECT(0xaa, gbc.readMem(0xce3a));
        // F7 00C0
        gbc.setState(0x1ac7, 0xec14, 0x2550, 0x4f2d, 0x2cd5, 0x377d, 0x1, 0x0);
        gbc.writeMem(0x1ac7, { 0xf7 });
        gbc.writeMem(0xec12, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xec12, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xec12));
        EXPECT(0x1a, gbc.readMem(0xec13));
        // F7 00C1
        gbc.setState(0xaab1, 0xafd6, 0x2420, 0xbf8a, 0x4e41, 0x725a, 0x1, 0x0);
        gbc.writeMem(0xaab1, { 0xf7 });
        gbc.writeMem(0xafd4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xafd4, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xaab1));
        EXPECT(0xb2, gbc.readMem(0xafd4));
        EXPECT(0xaa, gbc.readMem(0xafd5));
        // F7 00C5
        gbc.setState(0xc971, 0xbada, 0x7280, 0x8052, 0x8b8e, 0x356d, 0x0, 0x1);
        gbc.writeMem(0xbad8, { 0x0, 0x0 });
        gbc.writeMem(0xc971, { 0xf7 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xbad8, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xbad8));
        EXPECT(0xc9, gbc.readMem(0xbad9));
        EXPECT(0xf7, gbc.readMem(0xc971));
        // F7 00C8
        gbc.setState(0x9079, 0xc4ff, 0x1be0, 0xc078, 0x1093, 0xc0c2, 0x0, 0x0);
        gbc.writeMem(0x9079, { 0xf7 });
        gbc.writeMem(0xc4fd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xc4fd, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x9079));
        EXPECT(0x7a, gbc.readMem(0xc4fd));
        EXPECT(0x90, gbc.readMem(0xc4fe));
        // F7 00CA
        gbc.setState(0x7d92, 0x99a8, 0xcf50, 0xef0, 0x431d, 0xf43a, 0x0, 0x0);
        gbc.writeMem(0x7d92, { 0xf7 });
        gbc.writeMem(0x99a6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x99a6, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x99a6));
        EXPECT(0x7d, gbc.readMem(0x99a7));
        // F7 00CB
        gbc.setState(0x659d, 0xd07e, 0x6940, 0xfd06, 0x5481, 0x38e, 0x0, 0x0);
        gbc.writeMem(0x659d, { 0xf7 });
        gbc.writeMem(0xd07c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xd07c, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xd07c));
        EXPECT(0x65, gbc.readMem(0xd07d));
        // F7 00CC
        gbc.setState(0x8fd9, 0x9cb6, 0x1370, 0xdd4d, 0x66f, 0x2301, 0x1, 0x1);
        gbc.writeMem(0x8fd9, { 0xf7 });
        gbc.writeMem(0x9cb4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x9cb4, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x8fd9));
        EXPECT(0xda, gbc.readMem(0x9cb4));
        EXPECT(0x8f, gbc.readMem(0x9cb5));
        // F7 00CD
        gbc.setState(0xc547, 0x8d88, 0x40f0, 0x1206, 0x6bde, 0x83e1, 0x0, 0x0);
        gbc.writeMem(0x8d86, { 0x0, 0x0 });
        gbc.writeMem(0xc547, { 0xf7 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x8d86, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x8d86));
        EXPECT(0xc5, gbc.readMem(0x8d87));
        EXPECT(0xf7, gbc.readMem(0xc547));
        // F7 00CF
        gbc.setState(0x56d4, 0xd1ab, 0x68b0, 0x38f, 0x58d9, 0x494d, 0x1, 0x1);
        gbc.writeMem(0x56d4, { 0xf7 });
        gbc.writeMem(0xd1a9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xd1a9, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xd1a9));
        EXPECT(0x56, gbc.readMem(0xd1aa));
        // F7 00D1
        gbc.setState(0x1c3e, 0xd30a, 0x2a70, 0x408e, 0x9c33, 0x73ba, 0x0, 0x0);
        gbc.writeMem(0x1c3e, { 0xf7 });
        gbc.writeMem(0xd308, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xd308, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xd308));
        EXPECT(0x1c, gbc.readMem(0xd309));
        // F7 00D3
        gbc.setState(0x5d7c, 0x87b8, 0xf20, 0x1111, 0xd66c, 0x90ba, 0x1, 0x0);
        gbc.writeMem(0x5d7c, { 0xf7 });
        gbc.writeMem(0x87b6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x87b6, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x87b6));
        EXPECT(0x5d, gbc.readMem(0x87b7));
        // F7 00D4
        gbc.setState(0x9449, 0xac5d, 0xa180, 0xe7a1, 0x68a6, 0xe572, 0x1, 0x0);
        gbc.writeMem(0x9449, { 0xf7 });
        gbc.writeMem(0xac5b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xac5b, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x9449));
        EXPECT(0x4a, gbc.readMem(0xac5b));
        EXPECT(0x94, gbc.readMem(0xac5c));
        // F7 00D7
        gbc.setState(0x25af, 0xbda0, 0x9240, 0x249c, 0xdb46, 0x2659, 0x1, 0x0);
        gbc.writeMem(0x25af, { 0xf7 });
        gbc.writeMem(0xbd9e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xbd9e, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xbd9e));
        EXPECT(0x25, gbc.readMem(0xbd9f));
        // F7 00DA
        gbc.setState(0x7be6, 0xd97e, 0x6360, 0x7610, 0xcaa7, 0xdff7, 0x1, 0x1);
        gbc.writeMem(0x7be6, { 0xf7 });
        gbc.writeMem(0xd97c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xd97c, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xd97c));
        EXPECT(0x7b, gbc.readMem(0xd97d));
        // F7 00DC
        gbc.setState(0x16de, 0xe90b, 0x2480, 0x18d8, 0x9cea, 0x4721, 0x1, 0x1);
        gbc.writeMem(0x16de, { 0xf7 });
        gbc.writeMem(0xe909, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xe909, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xe909));
        EXPECT(0x16, gbc.readMem(0xe90a));
        // F7 00DF
        gbc.setState(0x45ee, 0xba6d, 0x4800, 0xada1, 0x6518, 0x6812, 0x0, 0x1);
        gbc.writeMem(0x45ee, { 0xf7 });
        gbc.writeMem(0xba6b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xba6b, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xba6b));
        EXPECT(0x45, gbc.readMem(0xba6c));
        // F7 00E0
        gbc.setState(0x734c, 0xe436, 0x3eb0, 0x15d3, 0xadd5, 0xb5de, 0x0, 0x0);
        gbc.writeMem(0x734c, { 0xf7 });
        gbc.writeMem(0xe434, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xe434, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xe434));
        EXPECT(0x73, gbc.readMem(0xe435));
        // F7 00E3
        gbc.setState(0x82c5, 0x88e4, 0x8070, 0x8560, 0xedd3, 0x2c82, 0x1, 0x0);
        gbc.writeMem(0x82c5, { 0xf7 });
        gbc.writeMem(0x88e2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x88e2, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x82c5));
        EXPECT(0xc6, gbc.readMem(0x88e2));
        EXPECT(0x82, gbc.readMem(0x88e3));
        // F7 00E6
        gbc.setState(0xcd31, 0x9ad3, 0x4730, 0xacd5, 0x8a5e, 0x77eb, 0x1, 0x0);
        gbc.writeMem(0x9ad1, { 0x0, 0x0 });
        gbc.writeMem(0xcd31, { 0xf7 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x9ad1, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x9ad1));
        EXPECT(0xcd, gbc.readMem(0x9ad2));
        EXPECT(0xf7, gbc.readMem(0xcd31));
        // F7 00E7
        gbc.setState(0x4537, 0x9108, 0xa710, 0xb8c3, 0x67d3, 0xba93, 0x1, 0x1);
        gbc.writeMem(0x4537, { 0xf7 });
        gbc.writeMem(0x9106, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x9106, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x9106));
        EXPECT(0x45, gbc.readMem(0x9107));
        // F7 00E8
        gbc.setState(0x9956, 0xafb9, 0x1610, 0x9ba8, 0x5e6f, 0xc972, 0x1, 0x0);
        gbc.writeMem(0x9956, { 0xf7 });
        gbc.writeMem(0xafb7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xafb7, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x9956));
        EXPECT(0x57, gbc.readMem(0xafb7));
        EXPECT(0x99, gbc.readMem(0xafb8));
        // F7 00EA
        gbc.setState(0x189c, 0xe582, 0x20e0, 0x4a85, 0x89e8, 0xdeeb, 0x0, 0x1);
        gbc.writeMem(0x189c, { 0xf7 });
        gbc.writeMem(0xe580, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xe580, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xe580));
        EXPECT(0x18, gbc.readMem(0xe581));
        // F7 00EB
        gbc.setState(0xb4ac, 0x970f, 0x2ae0, 0x733e, 0xb1e7, 0xb535, 0x0, 0x0);
        gbc.writeMem(0x970d, { 0x0, 0x0 });
        gbc.writeMem(0xb4ac, { 0xf7 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x970d, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0x970d));
        EXPECT(0xb4, gbc.readMem(0x970e));
        EXPECT(0xf7, gbc.readMem(0xb4ac));
        // F7 00EE
        gbc.setState(0xcb76, 0xf561, 0xaf40, 0x4e28, 0x4273, 0x3e93, 0x1, 0x1);
        gbc.writeMem(0xcb76, { 0xf7 });
        gbc.writeMem(0xf55f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xf55f, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xcb76));
        EXPECT(0x77, gbc.readMem(0xf55f));
        EXPECT(0xcb, gbc.readMem(0xf560));
        // F7 00F0
        gbc.setState(0x8f7f, 0xaf1e, 0x6cd0, 0xd147, 0xaa84, 0xe676, 0x1, 0x1);
        gbc.writeMem(0x8f7f, { 0xf7 });
        gbc.writeMem(0xaf1c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xaf1c, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x8f7f));
        EXPECT(0x80, gbc.readMem(0xaf1c));
        EXPECT(0x8f, gbc.readMem(0xaf1d));
        // F7 00F1
        gbc.setState(0x6b30, 0x9754, 0x90e0, 0x7730, 0x82a0, 0x1123, 0x0, 0x0);
        gbc.writeMem(0x6b30, { 0xf7 });
        gbc.writeMem(0x9752, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x9752, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x9752));
        EXPECT(0x6b, gbc.readMem(0x9753));
        // F7 00F2
        gbc.setState(0x1a07, 0xdf80, 0xc080, 0xddf0, 0xf7a5, 0x4e61, 0x1, 0x1);
        gbc.writeMem(0x1a07, { 0xf7 });
        gbc.writeMem(0xdf7e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xdf7e, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xdf7e));
        EXPECT(0x1a, gbc.readMem(0xdf7f));
        // F7 00F3
        gbc.setState(0x98e1, 0xb076, 0xa570, 0xa24d, 0xa630, 0x4cff, 0x0, 0x1);
        gbc.writeMem(0x98e1, { 0xf7 });
        gbc.writeMem(0xb074, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xb074, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x98e1));
        EXPECT(0xe2, gbc.readMem(0xb074));
        EXPECT(0x98, gbc.readMem(0xb075));
        // F7 00F5
        gbc.setState(0x3f9, 0xdbab, 0xcc50, 0x243d, 0x820, 0xb9f9, 0x0, 0x1);
        gbc.writeMem(0x3f9, { 0xf7 });
        gbc.writeMem(0xdba9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xdba9, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xdba9));
        EXPECT(0x3, gbc.readMem(0xdbaa));
        // F7 00F6
        gbc.setState(0x5f49, 0xe5c9, 0xa1d0, 0xbf23, 0x4b30, 0x4f1a, 0x0, 0x1);
        gbc.writeMem(0x5f49, { 0xf7 });
        gbc.writeMem(0xe5c7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xe5c7, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xe5c7));
        EXPECT(0x5f, gbc.readMem(0xe5c8));
        // F7 00FB
        gbc.setState(0x6976, 0xc05a, 0xac30, 0x9ddb, 0x30e5, 0xfc63, 0x0, 0x0);
        gbc.writeMem(0x6976, { 0xf7 });
        gbc.writeMem(0xc058, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xc058, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xc058));
        EXPECT(0x69, gbc.readMem(0xc059));
        // F7 00FC
        gbc.setState(0x2c6d, 0xd33f, 0x4f0, 0x2025, 0x5f92, 0x8a41, 0x1, 0x1);
        gbc.writeMem(0x2c6d, { 0xf7 });
        gbc.writeMem(0xd33d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xd33d, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xd33d));
        EXPECT(0x2c, gbc.readMem(0xd33e));
        // F7 00FE
        gbc.setState(0x7aec, 0xe4cb, 0x9290, 0xe15f, 0x339f, 0xf633, 0x0, 0x1);
        gbc.writeMem(0x7aec, { 0xf7 });
        gbc.writeMem(0xe4c9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xe4c9, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xe4c9));
        EXPECT(0x7a, gbc.readMem(0xe4ca));
        // F7 0103
        gbc.setState(0xbe66, 0x98cd, 0x51e0, 0x9128, 0xe9b8, 0x3067, 0x0, 0x0);
        gbc.writeMem(0x98cb, { 0x0, 0x0 });
        gbc.writeMem(0xbe66, { 0xf7 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x98cb, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0x98cb));
        EXPECT(0xbe, gbc.readMem(0x98cc));
        EXPECT(0xf7, gbc.readMem(0xbe66));
        // F7 0104
        gbc.setState(0xa06, 0xe090, 0x4a00, 0xccfb, 0xaf4d, 0x6c52, 0x1, 0x1);
        gbc.writeMem(0xa06, { 0xf7 });
        gbc.writeMem(0xe08e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe08e, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xe08e));
        EXPECT(0xa, gbc.readMem(0xe08f));
        // F7 0105
        gbc.setState(0x9097, 0xca57, 0xe010, 0xbc90, 0x6126, 0x34f7, 0x1, 0x1);
        gbc.writeMem(0x9097, { 0xf7 });
        gbc.writeMem(0xca55, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xca55, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x9097));
        EXPECT(0x98, gbc.readMem(0xca55));
        EXPECT(0x90, gbc.readMem(0xca56));
        // F7 0106
        gbc.setState(0x890b, 0x8258, 0xa640, 0x1d4c, 0x110f, 0x1d0, 0x0, 0x0);
        gbc.writeMem(0x8256, { 0x0, 0x0 });
        gbc.writeMem(0x890b, { 0xf7 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x8256, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x8256));
        EXPECT(0x89, gbc.readMem(0x8257));
        EXPECT(0xf7, gbc.readMem(0x890b));
        // F7 0109
        gbc.setState(0x4c62, 0xf851, 0x8ab0, 0xe494, 0xad82, 0x2d41, 0x0, 0x0);
        gbc.writeMem(0x4c62, { 0xf7 });
        gbc.writeMem(0xf84f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xf84f, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xf84f));
        EXPECT(0x4c, gbc.readMem(0xf850));
        // F7 010B
        gbc.setState(0xc78f, 0xaacf, 0x86a0, 0x46e7, 0x523a, 0xea53, 0x1, 0x0);
        gbc.writeMem(0xaacd, { 0x0, 0x0 });
        gbc.writeMem(0xc78f, { 0xf7 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xaacd, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xaacd));
        EXPECT(0xc7, gbc.readMem(0xaace));
        EXPECT(0xf7, gbc.readMem(0xc78f));
        // F7 010C
        gbc.setState(0xac68, 0xaa17, 0x2020, 0xc6a4, 0xad7c, 0xb69d, 0x1, 0x1);
        gbc.writeMem(0xaa15, { 0x0, 0x0 });
        gbc.writeMem(0xac68, { 0xf7 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xaa15, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xaa15));
        EXPECT(0xac, gbc.readMem(0xaa16));
        EXPECT(0xf7, gbc.readMem(0xac68));
        // F7 010E
        gbc.setState(0x1f51, 0xc213, 0x28a0, 0xda16, 0x796f, 0x6316, 0x0, 0x1);
        gbc.writeMem(0x1f51, { 0xf7 });
        gbc.writeMem(0xc211, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xc211, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xc211));
        EXPECT(0x1f, gbc.readMem(0xc212));
        // F7 0111
        gbc.setState(0xc9ce, 0xd2e0, 0x87d0, 0xdb4f, 0x5296, 0xe478, 0x0, 0x1);
        gbc.writeMem(0xc9ce, { 0xf7 });
        gbc.writeMem(0xd2de, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xd2de, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xc9ce));
        EXPECT(0xcf, gbc.readMem(0xd2de));
        EXPECT(0xc9, gbc.readMem(0xd2df));
        // F7 0112
        gbc.setState(0x6178, 0xb213, 0xeba0, 0xdd8c, 0xb9d4, 0x41ea, 0x1, 0x1);
        gbc.writeMem(0x6178, { 0xf7 });
        gbc.writeMem(0xb211, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xb211, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xb211));
        EXPECT(0x61, gbc.readMem(0xb212));
        // F7 0113
        gbc.setState(0x5e3a, 0xcd0f, 0xf810, 0x75cd, 0x791b, 0xff, 0x0, 0x0);
        gbc.writeMem(0x5e3a, { 0xf7 });
        gbc.writeMem(0xcd0d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xcd0d, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xcd0d));
        EXPECT(0x5e, gbc.readMem(0xcd0e));
        // F7 0115
        gbc.setState(0xa5e7, 0x956a, 0xd150, 0xe17f, 0x468c, 0x77d1, 0x1, 0x1);
        gbc.writeMem(0x9568, { 0x0, 0x0 });
        gbc.writeMem(0xa5e7, { 0xf7 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x9568, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0x9568));
        EXPECT(0xa5, gbc.readMem(0x9569));
        EXPECT(0xf7, gbc.readMem(0xa5e7));
        // F7 0117
        gbc.setState(0x5ad3, 0xd063, 0xb950, 0x9506, 0x27e3, 0xbc9, 0x1, 0x1);
        gbc.writeMem(0x5ad3, { 0xf7 });
        gbc.writeMem(0xd061, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xd061, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xd061));
        EXPECT(0x5a, gbc.readMem(0xd062));
        // F7 0118
        gbc.setState(0x8c6a, 0xd18d, 0xaa50, 0xf39, 0x7f30, 0x7aee, 0x0, 0x1);
        gbc.writeMem(0x8c6a, { 0xf7 });
        gbc.writeMem(0xd18b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xd18b, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x8c6a));
        EXPECT(0x6b, gbc.readMem(0xd18b));
        EXPECT(0x8c, gbc.readMem(0xd18c));
        // F7 0119
        gbc.setState(0x4a4f, 0xbd54, 0xb240, 0x289a, 0x5da6, 0x59cf, 0x1, 0x0);
        gbc.writeMem(0x4a4f, { 0xf7 });
        gbc.writeMem(0xbd52, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xbd52, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xbd52));
        EXPECT(0x4a, gbc.readMem(0xbd53));
        // F7 011B
        gbc.setState(0x414, 0x9bff, 0x2450, 0xc30e, 0xaf75, 0xcf2a, 0x0, 0x1);
        gbc.writeMem(0x414, { 0xf7 });
        gbc.writeMem(0x9bfd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x9bfd, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x9bfd));
        EXPECT(0x4, gbc.readMem(0x9bfe));
        // F7 011D
        gbc.setState(0x68fe, 0x9ef7, 0xdae0, 0xa4db, 0xd456, 0x6880, 0x0, 0x1);
        gbc.writeMem(0x68fe, { 0xf7 });
        gbc.writeMem(0x9ef5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x9ef5, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x9ef5));
        EXPECT(0x68, gbc.readMem(0x9ef6));
        // F7 0120
        gbc.setState(0x5777, 0xc33e, 0x6a90, 0xb614, 0xf18, 0x96a3, 0x0, 0x1);
        gbc.writeMem(0x5777, { 0xf7 });
        gbc.writeMem(0xc33c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xc33c, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xc33c));
        EXPECT(0x57, gbc.readMem(0xc33d));
        // F7 0122
        gbc.setState(0x3383, 0x92f6, 0xc7b0, 0xc9f1, 0x4c7a, 0x71a, 0x1, 0x1);
        gbc.writeMem(0x3383, { 0xf7 });
        gbc.writeMem(0x92f4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x92f4, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0x92f4));
        EXPECT(0x33, gbc.readMem(0x92f5));
        // F7 0124
        gbc.setState(0xcf, 0x91a9, 0x20f0, 0x9f8, 0xa310, 0x86a, 0x0, 0x1);
        gbc.writeMem(0xcf, { 0xf7 });
        gbc.writeMem(0x91a7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x91a7, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x91a7));
        EXPECT(0x0, gbc.readMem(0x91a8));
        // F7 0125
        gbc.setState(0xe2b2, 0x9f0b, 0x2770, 0xf79f, 0xa0be, 0x246c, 0x0, 0x1);
        gbc.writeMem(0x9f09, { 0x0, 0x0 });
        gbc.writeMem(0xe2b2, { 0xf7 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x9f09, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x9f09));
        EXPECT(0xe2, gbc.readMem(0x9f0a));
        EXPECT(0xf7, gbc.readMem(0xe2b2));
        // F7 0128
        gbc.setState(0x27af, 0xdb13, 0x7b00, 0xdd1, 0x3cbb, 0x3c4f, 0x1, 0x0);
        gbc.writeMem(0x27af, { 0xf7 });
        gbc.writeMem(0xdb11, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xdb11, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xdb11));
        EXPECT(0x27, gbc.readMem(0xdb12));
        // F7 0129
        gbc.setState(0x2b0a, 0xe2d5, 0x4af0, 0x44ce, 0x61cc, 0x6281, 0x1, 0x0);
        gbc.writeMem(0x2b0a, { 0xf7 });
        gbc.writeMem(0xe2d3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xe2d3, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xe2d3));
        EXPECT(0x2b, gbc.readMem(0xe2d4));
        // F7 012B
        gbc.setState(0x3e31, 0x894c, 0x2c50, 0x1832, 0x39cb, 0xb9df, 0x0, 0x1);
        gbc.writeMem(0x3e31, { 0xf7 });
        gbc.writeMem(0x894a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x894a, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x894a));
        EXPECT(0x3e, gbc.readMem(0x894b));
        // F7 012C
        gbc.setState(0xced4, 0x8fbd, 0x31f0, 0x56a0, 0xd73a, 0x2781, 0x1, 0x0);
        gbc.writeMem(0x8fbb, { 0x0, 0x0 });
        gbc.writeMem(0xced4, { 0xf7 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x8fbb, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x8fbb));
        EXPECT(0xce, gbc.readMem(0x8fbc));
        EXPECT(0xf7, gbc.readMem(0xced4));
        // F7 012D
        gbc.setState(0x91f9, 0xb69b, 0x9ce0, 0xc865, 0xfa9a, 0x1888, 0x0, 0x1);
        gbc.writeMem(0x91f9, { 0xf7 });
        gbc.writeMem(0xb699, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xb699, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x91f9));
        EXPECT(0xfa, gbc.readMem(0xb699));
        EXPECT(0x91, gbc.readMem(0xb69a));
        // F7 0132
        gbc.setState(0x67c0, 0xad62, 0xc7c0, 0xf088, 0xe571, 0x101a, 0x1, 0x1);
        gbc.writeMem(0x67c0, { 0xf7 });
        gbc.writeMem(0xad60, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xad60, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xad60));
        EXPECT(0x67, gbc.readMem(0xad61));
        // F7 0134
        gbc.setState(0xe365, 0x98d5, 0x8d50, 0xcd8c, 0xc7dd, 0x9b3c, 0x1, 0x1);
        gbc.writeMem(0x98d3, { 0x0, 0x0 });
        gbc.writeMem(0xe365, { 0xf7 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x98d3, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x98d3));
        EXPECT(0xe3, gbc.readMem(0x98d4));
        EXPECT(0xf7, gbc.readMem(0xe365));
        // F7 0135
        gbc.setState(0x9f23, 0x9143, 0xfc00, 0x1232, 0xcd54, 0xe65a, 0x1, 0x0);
        gbc.writeMem(0x9141, { 0x0, 0x0 });
        gbc.writeMem(0x9f23, { 0xf7 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x9141, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0x9141));
        EXPECT(0x9f, gbc.readMem(0x9142));
        EXPECT(0xf7, gbc.readMem(0x9f23));
        // F7 0137
        gbc.setState(0xe3b0, 0xdacd, 0xafb0, 0x873a, 0x7614, 0xa1ae, 0x0, 0x1);
        gbc.writeMem(0xdacb, { 0x0, 0x0 });
        gbc.writeMem(0xe3b0, { 0xf7 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xdacb, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0xdacb));
        EXPECT(0xe3, gbc.readMem(0xdacc));
        EXPECT(0xf7, gbc.readMem(0xe3b0));
        // F7 0138
        gbc.setState(0xc439, 0xf7b8, 0xbc60, 0xbe80, 0x1046, 0xa978, 0x1, 0x1);
        gbc.writeMem(0xc439, { 0xf7 });
        gbc.writeMem(0xf7b6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xf7b6, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xc439));
        EXPECT(0x3a, gbc.readMem(0xf7b6));
        EXPECT(0xc4, gbc.readMem(0xf7b7));
        // F7 0139
        gbc.setState(0x34a, 0xaaae, 0x4f00, 0x7491, 0xfcaf, 0xe62a, 0x0, 0x0);
        gbc.writeMem(0x34a, { 0xf7 });
        gbc.writeMem(0xaaac, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xaaac, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xaaac));
        EXPECT(0x3, gbc.readMem(0xaaad));
        // F7 013A
        gbc.setState(0xe960, 0xbc35, 0xd630, 0x10f, 0x4e69, 0x7fdd, 0x0, 0x1);
        gbc.writeMem(0xbc33, { 0x0, 0x0 });
        gbc.writeMem(0xe960, { 0xf7 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xbc33, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xbc33));
        EXPECT(0xe9, gbc.readMem(0xbc34));
        EXPECT(0xf7, gbc.readMem(0xe960));
        // F7 013B
        gbc.setState(0x2e74, 0xd090, 0xd940, 0xf135, 0xbd82, 0xdca7, 0x0, 0x1);
        gbc.writeMem(0x2e74, { 0xf7 });
        gbc.writeMem(0xd08e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xd08e, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xd08e));
        EXPECT(0x2e, gbc.readMem(0xd08f));
        // F7 013C
        gbc.setState(0x2649, 0xfe19, 0x9830, 0xf50c, 0x691a, 0x9f4f, 0x0, 0x0);
        gbc.writeMem(0x2649, { 0xf7 });
        gbc.writeMem(0xfe17, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xfe17, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xfe17));
        EXPECT(0x26, gbc.readMem(0xfe18));
        // F7 013E
        gbc.setState(0xe43f, 0x9b90, 0x6ef0, 0x276a, 0x7f88, 0xa544, 0x1, 0x1);
        gbc.writeMem(0x9b8e, { 0x0, 0x0 });
        gbc.writeMem(0xe43f, { 0xf7 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x9b8e, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x9b8e));
        EXPECT(0xe4, gbc.readMem(0x9b8f));
        EXPECT(0xf7, gbc.readMem(0xe43f));
        // F7 0141
        gbc.setState(0x6b6f, 0xd8d5, 0x18e0, 0x7a9b, 0x6d6c, 0xd80d, 0x0, 0x0);
        gbc.writeMem(0x6b6f, { 0xf7 });
        gbc.writeMem(0xd8d3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xd8d3, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xd8d3));
        EXPECT(0x6b, gbc.readMem(0xd8d4));
        // F7 0144
        gbc.setState(0x2f2a, 0xae9f, 0x27d0, 0xfc57, 0x41ea, 0x7bcf, 0x0, 0x1);
        gbc.writeMem(0x2f2a, { 0xf7 });
        gbc.writeMem(0xae9d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xae9d, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xae9d));
        EXPECT(0x2f, gbc.readMem(0xae9e));
        // F7 0146
        gbc.setState(0x46c9, 0xb0f8, 0x2830, 0x6249, 0x94b9, 0x21f7, 0x0, 0x0);
        gbc.writeMem(0x46c9, { 0xf7 });
        gbc.writeMem(0xb0f6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xb0f6, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xb0f6));
        EXPECT(0x46, gbc.readMem(0xb0f7));
        // F7 014C
        gbc.setState(0x3204, 0x91b4, 0x2a70, 0x464f, 0xc003, 0x326a, 0x0, 0x0);
        gbc.writeMem(0x3204, { 0xf7 });
        gbc.writeMem(0x91b2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x91b2, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x91b2));
        EXPECT(0x32, gbc.readMem(0x91b3));
        // F7 014D
        gbc.setState(0xbe2d, 0xf3f6, 0x6850, 0x64a0, 0xc87d, 0xdb29, 0x1, 0x1);
        gbc.writeMem(0xbe2d, { 0xf7 });
        gbc.writeMem(0xf3f4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xf3f4, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xbe2d));
        EXPECT(0x2e, gbc.readMem(0xf3f4));
        EXPECT(0xbe, gbc.readMem(0xf3f5));
        // F7 0150
        gbc.setState(0x8ef1, 0xa034, 0x7390, 0x4e48, 0x6e00, 0x367a, 0x0, 0x0);
        gbc.writeMem(0x8ef1, { 0xf7 });
        gbc.writeMem(0xa032, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xa032, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x8ef1));
        EXPECT(0xf2, gbc.readMem(0xa032));
        EXPECT(0x8e, gbc.readMem(0xa033));
        // F7 0151
        gbc.setState(0x9cf, 0x8aa9, 0x59a0, 0x7b7a, 0x47dc, 0x3037, 0x1, 0x0);
        gbc.writeMem(0x9cf, { 0xf7 });
        gbc.writeMem(0x8aa7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x8aa7, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x8aa7));
        EXPECT(0x9, gbc.readMem(0x8aa8));
        // F7 0153
        gbc.setState(0xc827, 0xec7b, 0x3900, 0x97dd, 0x6e99, 0xb654, 0x0, 0x0);
        gbc.writeMem(0xc827, { 0xf7 });
        gbc.writeMem(0xec79, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xec79, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xc827));
        EXPECT(0x28, gbc.readMem(0xec79));
        EXPECT(0xc8, gbc.readMem(0xec7a));
        // F7 0155
        gbc.setState(0xac99, 0xea27, 0x5490, 0x8059, 0x9686, 0xb35b, 0x0, 0x0);
        gbc.writeMem(0xac99, { 0xf7 });
        gbc.writeMem(0xea25, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xea25, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xac99));
        EXPECT(0x9a, gbc.readMem(0xea25));
        EXPECT(0xac, gbc.readMem(0xea26));
        // F7 0158
        gbc.setState(0xbd58, 0xd044, 0x1020, 0x6a85, 0x75c5, 0x2fb3, 0x0, 0x0);
        gbc.writeMem(0xbd58, { 0xf7 });
        gbc.writeMem(0xd042, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xd042, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xbd58));
        EXPECT(0x59, gbc.readMem(0xd042));
        EXPECT(0xbd, gbc.readMem(0xd043));
        // F7 0159
        gbc.setState(0xdc4c, 0xaa88, 0x960, 0x957b, 0x1a5c, 0x18ae, 0x1, 0x0);
        gbc.writeMem(0xaa86, { 0x0, 0x0 });
        gbc.writeMem(0xdc4c, { 0xf7 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xaa86, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xaa86));
        EXPECT(0xdc, gbc.readMem(0xaa87));
        EXPECT(0xf7, gbc.readMem(0xdc4c));
        // F7 015A
        gbc.setState(0xbac0, 0xf8d5, 0x77f0, 0x34a0, 0xcf24, 0x7937, 0x0, 0x0);
        gbc.writeMem(0xbac0, { 0xf7 });
        gbc.writeMem(0xf8d3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xf8d3, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xbac0));
        EXPECT(0xc1, gbc.readMem(0xf8d3));
        EXPECT(0xba, gbc.readMem(0xf8d4));
        // F7 015B
        gbc.setState(0xa3cc, 0xcbc6, 0x3370, 0x2c46, 0x939a, 0x7ed7, 0x1, 0x1);
        gbc.writeMem(0xa3cc, { 0xf7 });
        gbc.writeMem(0xcbc4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xcbc4, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xa3cc));
        EXPECT(0xcd, gbc.readMem(0xcbc4));
        EXPECT(0xa3, gbc.readMem(0xcbc5));
        // F7 0160
        gbc.setState(0x9e3c, 0xabd5, 0xaa10, 0x6354, 0xb33c, 0xb12d, 0x1, 0x0);
        gbc.writeMem(0x9e3c, { 0xf7 });
        gbc.writeMem(0xabd3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xabd3, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x9e3c));
        EXPECT(0x3d, gbc.readMem(0xabd3));
        EXPECT(0x9e, gbc.readMem(0xabd4));
        // F7 0162
        gbc.setState(0x86bf, 0x88f8, 0x7650, 0xdeb1, 0xd92b, 0x1577, 0x0, 0x1);
        gbc.writeMem(0x86bf, { 0xf7 });
        gbc.writeMem(0x88f6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x88f6, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x86bf));
        EXPECT(0xc0, gbc.readMem(0x88f6));
        EXPECT(0x86, gbc.readMem(0x88f7));
        // F7 0164
        gbc.setState(0xaf8f, 0x9574, 0x4ab0, 0x580d, 0x7a45, 0x7720, 0x0, 0x0);
        gbc.writeMem(0x9572, { 0x0, 0x0 });
        gbc.writeMem(0xaf8f, { 0xf7 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x9572, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0x9572));
        EXPECT(0xaf, gbc.readMem(0x9573));
        EXPECT(0xf7, gbc.readMem(0xaf8f));
        // F7 0166
        gbc.setState(0xbe58, 0xcdbd, 0xb8a0, 0xc369, 0xaa8c, 0x6816, 0x1, 0x1);
        gbc.writeMem(0xbe58, { 0xf7 });
        gbc.writeMem(0xcdbb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xcdbb, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xbe58));
        EXPECT(0x59, gbc.readMem(0xcdbb));
        EXPECT(0xbe, gbc.readMem(0xcdbc));
        // F7 0168
        gbc.setState(0xc64c, 0xa9f0, 0xdf70, 0x74cb, 0xc4f7, 0xbd1c, 0x1, 0x1);
        gbc.writeMem(0xa9ee, { 0x0, 0x0 });
        gbc.writeMem(0xc64c, { 0xf7 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xa9ee, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xa9ee));
        EXPECT(0xc6, gbc.readMem(0xa9ef));
        EXPECT(0xf7, gbc.readMem(0xc64c));
        // F7 016B
        gbc.setState(0xb485, 0xfbce, 0x72d0, 0x2ea6, 0x77ce, 0xdf70, 0x1, 0x1);
        gbc.writeMem(0xb485, { 0xf7 });
        gbc.writeMem(0xfbcc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xfbcc, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xb485));
        EXPECT(0x86, gbc.readMem(0xfbcc));
        EXPECT(0xb4, gbc.readMem(0xfbcd));
        // F7 016C
        gbc.setState(0xefb4, 0xa1dc, 0x6940, 0xc098, 0x96f5, 0xcd10, 0x0, 0x0);
        gbc.writeMem(0xa1da, { 0x0, 0x0 });
        gbc.writeMem(0xefb4, { 0xf7 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xa1da, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xa1da));
        EXPECT(0xef, gbc.readMem(0xa1db));
        EXPECT(0xf7, gbc.readMem(0xefb4));
        // F7 016D
        gbc.setState(0xb4b0, 0x99a1, 0x3990, 0x2172, 0xfd1e, 0x3bc3, 0x1, 0x1);
        gbc.writeMem(0x999f, { 0x0, 0x0 });
        gbc.writeMem(0xb4b0, { 0xf7 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x999f, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0x999f));
        EXPECT(0xb4, gbc.readMem(0x99a0));
        EXPECT(0xf7, gbc.readMem(0xb4b0));
        // F7 0171
        gbc.setState(0x4cf0, 0xdd1b, 0x25e0, 0xc8a9, 0x673c, 0x416c, 0x0, 0x0);
        gbc.writeMem(0x4cf0, { 0xf7 });
        gbc.writeMem(0xdd19, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xdd19, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xdd19));
        EXPECT(0x4c, gbc.readMem(0xdd1a));
        // F7 0176
        gbc.setState(0x9517, 0xa358, 0xd4d0, 0xdc70, 0x3fcb, 0x22a, 0x1, 0x0);
        gbc.writeMem(0x9517, { 0xf7 });
        gbc.writeMem(0xa356, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xa356, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x9517));
        EXPECT(0x18, gbc.readMem(0xa356));
        EXPECT(0x95, gbc.readMem(0xa357));
        // F7 0177
        gbc.setState(0xd0e2, 0x9e29, 0xfbf0, 0x86ae, 0xd27a, 0x27a8, 0x1, 0x1);
        gbc.writeMem(0x9e27, { 0x0, 0x0 });
        gbc.writeMem(0xd0e2, { 0xf7 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x9e27, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0x9e27));
        EXPECT(0xd0, gbc.readMem(0x9e28));
        EXPECT(0xf7, gbc.readMem(0xd0e2));
        // F7 0179
        gbc.setState(0x5deb, 0xa4c7, 0x9580, 0x5ef7, 0x70ec, 0x2dde, 0x0, 0x1);
        gbc.writeMem(0x5deb, { 0xf7 });
        gbc.writeMem(0xa4c5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xa4c5, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xa4c5));
        EXPECT(0x5d, gbc.readMem(0xa4c6));
        // F7 017B
        gbc.setState(0xca44, 0x9992, 0xe6e0, 0x7cf3, 0xdb97, 0x1a77, 0x0, 0x1);
        gbc.writeMem(0x9990, { 0x0, 0x0 });
        gbc.writeMem(0xca44, { 0xf7 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x9990, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0x9990));
        EXPECT(0xca, gbc.readMem(0x9991));
        EXPECT(0xf7, gbc.readMem(0xca44));
        // F7 017E
        gbc.setState(0x2501, 0xbe09, 0xbbc0, 0x8de8, 0x9cb9, 0x1309, 0x0, 0x1);
        gbc.writeMem(0x2501, { 0xf7 });
        gbc.writeMem(0xbe07, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xbe07, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xbe07));
        EXPECT(0x25, gbc.readMem(0xbe08));
        // F7 0180
        gbc.setState(0xc02, 0xd3fd, 0x9550, 0x2129, 0xdf84, 0x1280, 0x1, 0x0);
        gbc.writeMem(0xc02, { 0xf7 });
        gbc.writeMem(0xd3fb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xd3fb, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xd3fb));
        EXPECT(0xc, gbc.readMem(0xd3fc));
        // F7 0181
        gbc.setState(0xc8f, 0xae7b, 0xd5d0, 0xc3be, 0xa152, 0xf972, 0x0, 0x1);
        gbc.writeMem(0xc8f, { 0xf7 });
        gbc.writeMem(0xae79, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xae79, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xae79));
        EXPECT(0xc, gbc.readMem(0xae7a));
        // F7 0185
        gbc.setState(0x605b, 0xcbaf, 0x3370, 0xa4bf, 0x39e5, 0x9383, 0x1, 0x0);
        gbc.writeMem(0x605b, { 0xf7 });
        gbc.writeMem(0xcbad, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xcbad, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xcbad));
        EXPECT(0x60, gbc.readMem(0xcbae));
        // F7 0186
        gbc.setState(0xce15, 0xb5b5, 0xa40, 0xfd4, 0xd59e, 0x9c24, 0x0, 0x0);
        gbc.writeMem(0xb5b3, { 0x0, 0x0 });
        gbc.writeMem(0xce15, { 0xf7 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xb5b3, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xb5b3));
        EXPECT(0xce, gbc.readMem(0xb5b4));
        EXPECT(0xf7, gbc.readMem(0xce15));
        // F7 0187
        gbc.setState(0x6037, 0x9035, 0xcf30, 0x555a, 0x9bbd, 0xe906, 0x1, 0x0);
        gbc.writeMem(0x6037, { 0xf7 });
        gbc.writeMem(0x9033, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x9033, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x9033));
        EXPECT(0x60, gbc.readMem(0x9034));
        // F7 0188
        gbc.setState(0x384, 0xb641, 0x9520, 0x6624, 0x3f3a, 0xaf49, 0x1, 0x0);
        gbc.writeMem(0x384, { 0xf7 });
        gbc.writeMem(0xb63f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xb63f, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xb63f));
        EXPECT(0x3, gbc.readMem(0xb640));
        // F7 018B
        gbc.setState(0x7f98, 0x8809, 0x5a50, 0x71f7, 0x5ed6, 0xc9ce, 0x0, 0x1);
        gbc.writeMem(0x7f98, { 0xf7 });
        gbc.writeMem(0x8807, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x8807, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8807));
        EXPECT(0x7f, gbc.readMem(0x8808));
        // F7 018C
        gbc.setState(0xe4d9, 0xabe1, 0xf890, 0x2e35, 0xbfe, 0x1e2f, 0x1, 0x0);
        gbc.writeMem(0xabdf, { 0x0, 0x0 });
        gbc.writeMem(0xe4d9, { 0xf7 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xabdf, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xabdf));
        EXPECT(0xe4, gbc.readMem(0xabe0));
        EXPECT(0xf7, gbc.readMem(0xe4d9));
        // F7 018E
        gbc.setState(0x9d28, 0x902a, 0xfa40, 0x6435, 0xcef4, 0x4024, 0x1, 0x1);
        gbc.writeMem(0x9028, { 0x0, 0x0 });
        gbc.writeMem(0x9d28, { 0xf7 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x9028, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x9028));
        EXPECT(0x9d, gbc.readMem(0x9029));
        EXPECT(0xf7, gbc.readMem(0x9d28));
        // F7 018F
        gbc.setState(0xebb, 0xaf14, 0xc260, 0xa1c7, 0x31a9, 0xb62, 0x1, 0x0);
        gbc.writeMem(0xebb, { 0xf7 });
        gbc.writeMem(0xaf12, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xaf12, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xaf12));
        EXPECT(0xe, gbc.readMem(0xaf13));
        // F7 0190
        gbc.setState(0x36c7, 0xf77c, 0x1540, 0xa4e2, 0x8231, 0x18aa, 0x1, 0x1);
        gbc.writeMem(0x36c7, { 0xf7 });
        gbc.writeMem(0xf77a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xf77a, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xf77a));
        EXPECT(0x36, gbc.readMem(0xf77b));
        // F7 0191
        gbc.setState(0x92bd, 0xf162, 0x88c0, 0x9929, 0xe5bb, 0x5390, 0x0, 0x0);
        gbc.writeMem(0x92bd, { 0xf7 });
        gbc.writeMem(0xf160, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xf160, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x92bd));
        EXPECT(0xbe, gbc.readMem(0xf160));
        EXPECT(0x92, gbc.readMem(0xf161));
        // F7 0193
        gbc.setState(0x57a2, 0xac3b, 0x1e80, 0xe2cd, 0x394d, 0x7e24, 0x0, 0x1);
        gbc.writeMem(0x57a2, { 0xf7 });
        gbc.writeMem(0xac39, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xac39, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xac39));
        EXPECT(0x57, gbc.readMem(0xac3a));
        // F7 0194
        gbc.setState(0x8c8f, 0xbafb, 0x9e00, 0x56b1, 0x2bb6, 0xf024, 0x0, 0x1);
        gbc.writeMem(0x8c8f, { 0xf7 });
        gbc.writeMem(0xbaf9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xbaf9, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x8c8f));
        EXPECT(0x90, gbc.readMem(0xbaf9));
        EXPECT(0x8c, gbc.readMem(0xbafa));
        // F7 0196
        gbc.setState(0xa86d, 0xed31, 0x4630, 0x7d9a, 0xf2f7, 0xe54b, 0x0, 0x1);
        gbc.writeMem(0xa86d, { 0xf7 });
        gbc.writeMem(0xed2f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xed2f, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xa86d));
        EXPECT(0x6e, gbc.readMem(0xed2f));
        EXPECT(0xa8, gbc.readMem(0xed30));
        // F7 019B
        gbc.setState(0xe0bd, 0xa2a8, 0xb080, 0x8562, 0x3718, 0xce95, 0x0, 0x0);
        gbc.writeMem(0xa2a6, { 0x0, 0x0 });
        gbc.writeMem(0xe0bd, { 0xf7 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xa2a6, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xa2a6));
        EXPECT(0xe0, gbc.readMem(0xa2a7));
        EXPECT(0xf7, gbc.readMem(0xe0bd));
        // F7 01A1
        gbc.setState(0x9514, 0x97fb, 0xc040, 0xd99d, 0x8e74, 0x1831, 0x0, 0x1);
        gbc.writeMem(0x9514, { 0xf7 });
        gbc.writeMem(0x97f9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x97f9, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x9514));
        EXPECT(0x15, gbc.readMem(0x97f9));
        EXPECT(0x95, gbc.readMem(0x97fa));
        // F7 01A2
        gbc.setState(0x608f, 0xcc22, 0x8d00, 0x59c1, 0xae9, 0x460e, 0x1, 0x0);
        gbc.writeMem(0x608f, { 0xf7 });
        gbc.writeMem(0xcc20, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xcc20, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xcc20));
        EXPECT(0x60, gbc.readMem(0xcc21));
        // F7 01A3
        gbc.setState(0x4845, 0xf646, 0x2880, 0x1f82, 0x2bf5, 0x24cd, 0x0, 0x0);
        gbc.writeMem(0x4845, { 0xf7 });
        gbc.writeMem(0xf644, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xf644, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xf644));
        EXPECT(0x48, gbc.readMem(0xf645));
        // F7 01A5
        gbc.setState(0x7b8, 0x8471, 0xddc0, 0xc5b3, 0x7993, 0x4d9c, 0x0, 0x0);
        gbc.writeMem(0x7b8, { 0xf7 });
        gbc.writeMem(0x846f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x846f, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x846f));
        EXPECT(0x7, gbc.readMem(0x8470));
        // F7 01A7
        gbc.setState(0xc0f0, 0xbb2e, 0xf690, 0x2dcf, 0xd22, 0x5fa6, 0x1, 0x1);
        gbc.writeMem(0xbb2c, { 0x0, 0x0 });
        gbc.writeMem(0xc0f0, { 0xf7 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xbb2c, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xbb2c));
        EXPECT(0xc0, gbc.readMem(0xbb2d));
        EXPECT(0xf7, gbc.readMem(0xc0f0));
        // F7 01A9
        gbc.setState(0x8075, 0xe665, 0x5480, 0x13b, 0x4484, 0x760a, 0x0, 0x0);
        gbc.writeMem(0x8075, { 0xf7 });
        gbc.writeMem(0xe663, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xe663, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x8075));
        EXPECT(0x76, gbc.readMem(0xe663));
        EXPECT(0x80, gbc.readMem(0xe664));
        // F7 01AA
        gbc.setState(0x3734, 0xa3cd, 0x9460, 0xa98d, 0x6028, 0x5d7f, 0x0, 0x0);
        gbc.writeMem(0x3734, { 0xf7 });
        gbc.writeMem(0xa3cb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xa3cb, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xa3cb));
        EXPECT(0x37, gbc.readMem(0xa3cc));
        // F7 01AC
        gbc.setState(0x2777, 0x8b97, 0x510, 0x7970, 0xca11, 0x1ed9, 0x1, 0x0);
        gbc.writeMem(0x2777, { 0xf7 });
        gbc.writeMem(0x8b95, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x8b95, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x8b95));
        EXPECT(0x27, gbc.readMem(0x8b96));
        // F7 01AE
        gbc.setState(0x2535, 0xf17a, 0x4980, 0xa89f, 0x241e, 0xee53, 0x0, 0x0);
        gbc.writeMem(0x2535, { 0xf7 });
        gbc.writeMem(0xf178, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xf178, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xf178));
        EXPECT(0x25, gbc.readMem(0xf179));
        // F7 01AF
        gbc.setState(0xaf10, 0xfe39, 0xe2c0, 0xc89, 0x5f2e, 0x9f1c, 0x1, 0x1);
        gbc.writeMem(0xaf10, { 0xf7 });
        gbc.writeMem(0xfe37, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xfe37, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xaf10));
        EXPECT(0x11, gbc.readMem(0xfe37));
        EXPECT(0xaf, gbc.readMem(0xfe38));
        // F7 01B1
        gbc.setState(0x1d5f, 0xf92a, 0x4bb0, 0xe2ba, 0xafcd, 0x91de, 0x1, 0x0);
        gbc.writeMem(0x1d5f, { 0xf7 });
        gbc.writeMem(0xf928, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xf928, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xf928));
        EXPECT(0x1d, gbc.readMem(0xf929));
        // F7 01B2
        gbc.setState(0xa4f1, 0x85d0, 0xb9c0, 0x1e1f, 0xe647, 0xc800, 0x1, 0x1);
        gbc.writeMem(0x85ce, { 0x0, 0x0 });
        gbc.writeMem(0xa4f1, { 0xf7 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x85ce, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0x85ce));
        EXPECT(0xa4, gbc.readMem(0x85cf));
        EXPECT(0xf7, gbc.readMem(0xa4f1));
        // F7 01B5
        gbc.setState(0x8fac, 0xcfb5, 0x67e0, 0xa726, 0xc540, 0x7264, 0x1, 0x0);
        gbc.writeMem(0x8fac, { 0xf7 });
        gbc.writeMem(0xcfb3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xcfb3, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x8fac));
        EXPECT(0xad, gbc.readMem(0xcfb3));
        EXPECT(0x8f, gbc.readMem(0xcfb4));
        // F7 01B6
        gbc.setState(0x642, 0xa858, 0x8b30, 0xb675, 0x60e7, 0x3575, 0x0, 0x1);
        gbc.writeMem(0x642, { 0xf7 });
        gbc.writeMem(0xa856, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xa856, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa856));
        EXPECT(0x6, gbc.readMem(0xa857));
        // F7 01B7
        gbc.setState(0x7967, 0xba3a, 0xda20, 0xb9fa, 0xa776, 0x6be8, 0x0, 0x1);
        gbc.writeMem(0x7967, { 0xf7 });
        gbc.writeMem(0xba38, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xba38, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xba38));
        EXPECT(0x79, gbc.readMem(0xba39));
        // F7 01B8
        gbc.setState(0x724e, 0x8391, 0xe510, 0xb3eb, 0x1d53, 0x1ede, 0x0, 0x0);
        gbc.writeMem(0x724e, { 0xf7 });
        gbc.writeMem(0x838f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x838f, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0x838f));
        EXPECT(0x72, gbc.readMem(0x8390));
        // F7 01BA
        gbc.setState(0x8c7d, 0x9bee, 0x7780, 0xf9ea, 0x1c55, 0x7f35, 0x1, 0x0);
        gbc.writeMem(0x8c7d, { 0xf7 });
        gbc.writeMem(0x9bec, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x9bec, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x8c7d));
        EXPECT(0x7e, gbc.readMem(0x9bec));
        EXPECT(0x8c, gbc.readMem(0x9bed));
        // F7 01BD
        gbc.setState(0xa021, 0x9f7d, 0x5530, 0x1618, 0x1e49, 0x8ea8, 0x0, 0x1);
        gbc.writeMem(0x9f7b, { 0x0, 0x0 });
        gbc.writeMem(0xa021, { 0xf7 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x9f7b, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x9f7b));
        EXPECT(0xa0, gbc.readMem(0x9f7c));
        EXPECT(0xf7, gbc.readMem(0xa021));
        // F7 01BE
        gbc.setState(0xed4b, 0x8bd2, 0x3150, 0xffc, 0x4e3b, 0xad34, 0x1, 0x0);
        gbc.writeMem(0x8bd0, { 0x0, 0x0 });
        gbc.writeMem(0xed4b, { 0xf7 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x8bd0, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x8bd0));
        EXPECT(0xed, gbc.readMem(0x8bd1));
        EXPECT(0xf7, gbc.readMem(0xed4b));
        // F7 01BF
        gbc.setState(0xcacc, 0xacc3, 0x50f0, 0x32f6, 0x75e9, 0x1abb, 0x1, 0x1);
        gbc.writeMem(0xacc1, { 0x0, 0x0 });
        gbc.writeMem(0xcacc, { 0xf7 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xacc1, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xacc1));
        EXPECT(0xca, gbc.readMem(0xacc2));
        EXPECT(0xf7, gbc.readMem(0xcacc));
        // F7 01C0
        gbc.setState(0x9b0e, 0xd9e8, 0x10f0, 0x9061, 0x6d53, 0xeb65, 0x1, 0x1);
        gbc.writeMem(0x9b0e, { 0xf7 });
        gbc.writeMem(0xd9e6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xd9e6, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x9b0e));
        EXPECT(0xf, gbc.readMem(0xd9e6));
        EXPECT(0x9b, gbc.readMem(0xd9e7));
        // F7 01C1
        gbc.setState(0xd9e3, 0xbe9f, 0x16a0, 0x1f4, 0x6ca2, 0xef0f, 0x1, 0x1);
        gbc.writeMem(0xbe9d, { 0x0, 0x0 });
        gbc.writeMem(0xd9e3, { 0xf7 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xbe9d, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0xbe9d));
        EXPECT(0xd9, gbc.readMem(0xbe9e));
        EXPECT(0xf7, gbc.readMem(0xd9e3));
        // F7 01C2
        gbc.setState(0x3bfc, 0xffeb, 0x8400, 0x301d, 0x9115, 0x9203, 0x1, 0x0);
        gbc.writeMem(0x3bfc, { 0xf7 });
        gbc.writeMem(0xffe9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xffe9, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xffe9));
        EXPECT(0x3b, gbc.readMem(0xffea));
        // F7 01C3
        gbc.setState(0x2f5a, 0xaea5, 0x9b10, 0x90b8, 0xd882, 0x64f5, 0x0, 0x1);
        gbc.writeMem(0x2f5a, { 0xf7 });
        gbc.writeMem(0xaea3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xaea3, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xaea3));
        EXPECT(0x2f, gbc.readMem(0xaea4));
        // F7 01C4
        gbc.setState(0x40af, 0x8573, 0xbd40, 0xd9b5, 0x5253, 0xf1b6, 0x1, 0x0);
        gbc.writeMem(0x40af, { 0xf7 });
        gbc.writeMem(0x8571, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x8571, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x8571));
        EXPECT(0x40, gbc.readMem(0x8572));
        // F7 01C5
        gbc.setState(0x5b63, 0xc8e0, 0x58a0, 0xb2d5, 0x84f9, 0x6903, 0x0, 0x0);
        gbc.writeMem(0x5b63, { 0xf7 });
        gbc.writeMem(0xc8de, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xc8de, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xc8de));
        EXPECT(0x5b, gbc.readMem(0xc8df));
        // F7 01C7
        gbc.setState(0x5211, 0xc7c5, 0xef30, 0x3bb5, 0x6734, 0x2410, 0x1, 0x0);
        gbc.writeMem(0x5211, { 0xf7 });
        gbc.writeMem(0xc7c3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xc7c3, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xc7c3));
        EXPECT(0x52, gbc.readMem(0xc7c4));
        // F7 01C9
        gbc.setState(0x6c35, 0xc88d, 0xbfb0, 0x80a7, 0xc57f, 0xd0ef, 0x1, 0x1);
        gbc.writeMem(0x6c35, { 0xf7 });
        gbc.writeMem(0xc88b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xc88b, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xc88b));
        EXPECT(0x6c, gbc.readMem(0xc88c));
        // F7 01CA
        gbc.setState(0xbd95, 0xa75f, 0xf170, 0x4663, 0xa8e0, 0x9394, 0x0, 0x1);
        gbc.writeMem(0xa75d, { 0x0, 0x0 });
        gbc.writeMem(0xbd95, { 0xf7 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xa75d, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xa75d));
        EXPECT(0xbd, gbc.readMem(0xa75e));
        EXPECT(0xf7, gbc.readMem(0xbd95));
        // F7 01CB
        gbc.setState(0x3b8, 0xe1d9, 0x6870, 0x9bdb, 0x57a7, 0xb27b, 0x1, 0x1);
        gbc.writeMem(0x3b8, { 0xf7 });
        gbc.writeMem(0xe1d7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xe1d7, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xe1d7));
        EXPECT(0x3, gbc.readMem(0xe1d8));
        // F7 01CC
        gbc.setState(0xe1c7, 0xb508, 0xf300, 0xf69d, 0x6843, 0x62c7, 0x1, 0x0);
        gbc.writeMem(0xb506, { 0x0, 0x0 });
        gbc.writeMem(0xe1c7, { 0xf7 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xb506, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xb506));
        EXPECT(0xe1, gbc.readMem(0xb507));
        EXPECT(0xf7, gbc.readMem(0xe1c7));
        // F7 01D1
        gbc.setState(0x2d7, 0xdc3d, 0xca40, 0x655, 0x2051, 0x5a66, 0x1, 0x0);
        gbc.writeMem(0x2d7, { 0xf7 });
        gbc.writeMem(0xdc3b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xdc3b, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xdc3b));
        EXPECT(0x2, gbc.readMem(0xdc3c));
        // F7 01D6
        gbc.setState(0xb67e, 0x8112, 0xd600, 0x4fc3, 0x9349, 0x8b2d, 0x0, 0x0);
        gbc.writeMem(0x8110, { 0x0, 0x0 });
        gbc.writeMem(0xb67e, { 0xf7 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x8110, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0x8110));
        EXPECT(0xb6, gbc.readMem(0x8111));
        EXPECT(0xf7, gbc.readMem(0xb67e));
        // F7 01D7
        gbc.setState(0x94ec, 0xa475, 0xdcf0, 0x9ef6, 0x760c, 0xb76e, 0x1, 0x1);
        gbc.writeMem(0x94ec, { 0xf7 });
        gbc.writeMem(0xa473, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xa473, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x94ec));
        EXPECT(0xed, gbc.readMem(0xa473));
        EXPECT(0x94, gbc.readMem(0xa474));
        // F7 01D8
        gbc.setState(0xbdeb, 0x9848, 0x8320, 0x11ba, 0x1545, 0xa698, 0x1, 0x0);
        gbc.writeMem(0x9846, { 0x0, 0x0 });
        gbc.writeMem(0xbdeb, { 0xf7 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9846, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0x9846));
        EXPECT(0xbd, gbc.readMem(0x9847));
        EXPECT(0xf7, gbc.readMem(0xbdeb));
        // F7 01DB
        gbc.setState(0x9e4e, 0xa505, 0x5d60, 0xf2d4, 0xdc51, 0xd810, 0x1, 0x1);
        gbc.writeMem(0x9e4e, { 0xf7 });
        gbc.writeMem(0xa503, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xa503, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x9e4e));
        EXPECT(0x4f, gbc.readMem(0xa503));
        EXPECT(0x9e, gbc.readMem(0xa504));
        // F7 01E1
        gbc.setState(0x4ef5, 0x9955, 0xa6a0, 0xdb75, 0x5d1e, 0x58de, 0x1, 0x1);
        gbc.writeMem(0x4ef5, { 0xf7 });
        gbc.writeMem(0x9953, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x9953, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0x9953));
        EXPECT(0x4e, gbc.readMem(0x9954));
        // F7 01E5
        gbc.setState(0x743a, 0xc0db, 0xe5e0, 0x29ff, 0xf0b1, 0x45c6, 0x0, 0x0);
        gbc.writeMem(0x743a, { 0xf7 });
        gbc.writeMem(0xc0d9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xc0d9, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xc0d9));
        EXPECT(0x74, gbc.readMem(0xc0da));
        // F7 01EA
        gbc.setState(0x6d19, 0x8a8a, 0x1ea0, 0x9cd8, 0x7f2c, 0xe7ee, 0x0, 0x1);
        gbc.writeMem(0x6d19, { 0xf7 });
        gbc.writeMem(0x8a88, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x8a88, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x8a88));
        EXPECT(0x6d, gbc.readMem(0x8a89));
        // F7 01ED
        gbc.setState(0x6a98, 0xc567, 0xe930, 0x9818, 0x5ad6, 0xe40c, 0x1, 0x0);
        gbc.writeMem(0x6a98, { 0xf7 });
        gbc.writeMem(0xc565, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xc565, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xc565));
        EXPECT(0x6a, gbc.readMem(0xc566));
        // F7 01F1
        gbc.setState(0x3506, 0xa78f, 0xc3e0, 0xf877, 0xaf29, 0x4095, 0x0, 0x0);
        gbc.writeMem(0x3506, { 0xf7 });
        gbc.writeMem(0xa78d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xa78d, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xa78d));
        EXPECT(0x35, gbc.readMem(0xa78e));
        // F7 01F3
        gbc.setState(0x9e0c, 0xd42c, 0x6270, 0x599, 0x2cfa, 0x9c7, 0x0, 0x1);
        gbc.writeMem(0x9e0c, { 0xf7 });
        gbc.writeMem(0xd42a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xd42a, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x9e0c));
        EXPECT(0xd, gbc.readMem(0xd42a));
        EXPECT(0x9e, gbc.readMem(0xd42b));
        // F7 01F4
        gbc.setState(0x818d, 0xb3f9, 0xf7b0, 0x93ab, 0x2603, 0x670f, 0x1, 0x1);
        gbc.writeMem(0x818d, { 0xf7 });
        gbc.writeMem(0xb3f7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xb3f7, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x818d));
        EXPECT(0x8e, gbc.readMem(0xb3f7));
        EXPECT(0x81, gbc.readMem(0xb3f8));
        // F7 01F5
        gbc.setState(0x2746, 0xf716, 0x6150, 0xa0a5, 0xb174, 0x6509, 0x1, 0x0);
        gbc.writeMem(0x2746, { 0xf7 });
        gbc.writeMem(0xf714, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xf714, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xf714));
        EXPECT(0x27, gbc.readMem(0xf715));
        // F7 01F7
        gbc.setState(0x7519, 0x82fc, 0x7f40, 0xc67a, 0xaaad, 0xedf4, 0x1, 0x1);
        gbc.writeMem(0x7519, { 0xf7 });
        gbc.writeMem(0x82fa, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x82fa, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x82fa));
        EXPECT(0x75, gbc.readMem(0x82fb));
        // F7 01F9
        gbc.setState(0x42ff, 0xf47c, 0x4560, 0x6d35, 0xdb34, 0xe05d, 0x1, 0x1);
        gbc.writeMem(0x42ff, { 0xf7 });
        gbc.writeMem(0xf47a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xf47a, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xf47a));
        EXPECT(0x43, gbc.readMem(0xf47b));
        // F7 01FA
        gbc.setState(0x6da3, 0xc1ae, 0x2460, 0x856f, 0x53ee, 0x8e4, 0x0, 0x1);
        gbc.writeMem(0x6da3, { 0xf7 });
        gbc.writeMem(0xc1ac, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xc1ac, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xc1ac));
        EXPECT(0x6d, gbc.readMem(0xc1ad));
        // F7 01FB
        gbc.setState(0x6d2, 0xe744, 0xc890, 0xe51a, 0xeb9f, 0xc21f, 0x0, 0x1);
        gbc.writeMem(0x6d2, { 0xf7 });
        gbc.writeMem(0xe742, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xe742, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xe742));
        EXPECT(0x6, gbc.readMem(0xe743));
        // F7 01FD
        gbc.setState(0xa7df, 0xce84, 0xc650, 0x8a97, 0xb1c8, 0xac32, 0x1, 0x1);
        gbc.writeMem(0xa7df, { 0xf7 });
        gbc.writeMem(0xce82, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xce82, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xa7df));
        EXPECT(0xe0, gbc.readMem(0xce82));
        EXPECT(0xa7, gbc.readMem(0xce83));
        // F7 01FE
        gbc.setState(0xce47, 0x841e, 0xd610, 0x9ce2, 0xfaa7, 0x97c2, 0x0, 0x0);
        gbc.writeMem(0x841c, { 0x0, 0x0 });
        gbc.writeMem(0xce47, { 0xf7 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x841c, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x841c));
        EXPECT(0xce, gbc.readMem(0x841d));
        EXPECT(0xf7, gbc.readMem(0xce47));
        // F7 01FF
        gbc.setState(0x15ef, 0x904d, 0x4f50, 0x17f0, 0x912, 0xc3dd, 0x1, 0x1);
        gbc.writeMem(0x15ef, { 0xf7 });
        gbc.writeMem(0x904b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x904b, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x904b));
        EXPECT(0x15, gbc.readMem(0x904c));
        // F7 0201
        gbc.setState(0x6c71, 0xfe2d, 0x1120, 0xc70b, 0xe1c7, 0x49f5, 0x0, 0x0);
        gbc.writeMem(0x6c71, { 0xf7 });
        gbc.writeMem(0xfe2b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xfe2b, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xfe2b));
        EXPECT(0x6c, gbc.readMem(0xfe2c));
        // F7 0202
        gbc.setState(0x5d2c, 0xd6ae, 0x17f0, 0x77f1, 0xae29, 0xc6c2, 0x0, 0x1);
        gbc.writeMem(0x5d2c, { 0xf7 });
        gbc.writeMem(0xd6ac, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xd6ac, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xd6ac));
        EXPECT(0x5d, gbc.readMem(0xd6ad));
        // F7 0204
        gbc.setState(0x7225, 0xf043, 0xe0e0, 0x449f, 0xef49, 0x1efb, 0x0, 0x0);
        gbc.writeMem(0x7225, { 0xf7 });
        gbc.writeMem(0xf041, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xf041, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xf041));
        EXPECT(0x72, gbc.readMem(0xf042));
        // F7 0208
        gbc.setState(0xee78, 0x9168, 0x4dc0, 0x68e8, 0xc1b9, 0xa13c, 0x0, 0x1);
        gbc.writeMem(0x9166, { 0x0, 0x0 });
        gbc.writeMem(0xee78, { 0xf7 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x9166, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x9166));
        EXPECT(0xee, gbc.readMem(0x9167));
        EXPECT(0xf7, gbc.readMem(0xee78));
        // F7 020A
        gbc.setState(0x7db5, 0xc8b8, 0x7a10, 0xac7e, 0xbcb2, 0xaa43, 0x0, 0x0);
        gbc.writeMem(0x7db5, { 0xf7 });
        gbc.writeMem(0xc8b6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xc8b6, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xc8b6));
        EXPECT(0x7d, gbc.readMem(0xc8b7));
        // F7 020B
        gbc.setState(0xef78, 0xf114, 0x7f10, 0x5912, 0x9071, 0x27c2, 0x1, 0x1);
        gbc.writeMem(0xef78, { 0xf7 });
        gbc.writeMem(0xf112, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xf112, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xef78));
        EXPECT(0x79, gbc.readMem(0xf112));
        EXPECT(0xef, gbc.readMem(0xf113));
        // F7 020C
        gbc.setState(0x7e8a, 0xad18, 0x7320, 0xdec1, 0x16ef, 0x9195, 0x1, 0x1);
        gbc.writeMem(0x7e8a, { 0xf7 });
        gbc.writeMem(0xad16, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xad16, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xad16));
        EXPECT(0x7e, gbc.readMem(0xad17));
        // F7 020E
        gbc.setState(0x27b, 0xe18e, 0x6a90, 0x8bec, 0xc6de, 0x5c9b, 0x0, 0x0);
        gbc.writeMem(0x27b, { 0xf7 });
        gbc.writeMem(0xe18c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xe18c, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0xe18c));
        EXPECT(0x2, gbc.readMem(0xe18d));
        // F7 0210
        gbc.setState(0x160b, 0xebfb, 0xbb50, 0x975e, 0x4d18, 0xc727, 0x1, 0x0);
        gbc.writeMem(0x160b, { 0xf7 });
        gbc.writeMem(0xebf9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xebf9, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xebf9));
        EXPECT(0x16, gbc.readMem(0xebfa));
        // F7 0211
        gbc.setState(0x1c92, 0xe7fe, 0x8850, 0xbda, 0x3c8b, 0x4bf8, 0x0, 0x0);
        gbc.writeMem(0x1c92, { 0xf7 });
        gbc.writeMem(0xe7fc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe7fc, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xe7fc));
        EXPECT(0x1c, gbc.readMem(0xe7fd));
        // F7 0215
        gbc.setState(0x6f48, 0xcf44, 0x7240, 0xbe8f, 0xdfd4, 0x8a9b, 0x1, 0x0);
        gbc.writeMem(0x6f48, { 0xf7 });
        gbc.writeMem(0xcf42, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xcf42, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xcf42));
        EXPECT(0x6f, gbc.readMem(0xcf43));
        // F7 0217
        gbc.setState(0x15bb, 0x9a6a, 0x5780, 0x6b90, 0x81d1, 0x89dc, 0x0, 0x1);
        gbc.writeMem(0x15bb, { 0xf7 });
        gbc.writeMem(0x9a68, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x9a68, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x9a68));
        EXPECT(0x15, gbc.readMem(0x9a69));
        // F7 0218
        gbc.setState(0xbfb4, 0xce06, 0x9900, 0xa7f, 0xa193, 0x22e2, 0x0, 0x1);
        gbc.writeMem(0xbfb4, { 0xf7 });
        gbc.writeMem(0xce04, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xce04, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xbfb4));
        EXPECT(0xb5, gbc.readMem(0xce04));
        EXPECT(0xbf, gbc.readMem(0xce05));
        // F7 021B
        gbc.setState(0xd5da, 0xaa0e, 0x41b0, 0x4f47, 0x864d, 0x6e51, 0x1, 0x1);
        gbc.writeMem(0xaa0c, { 0x0, 0x0 });
        gbc.writeMem(0xd5da, { 0xf7 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xaa0c, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xaa0c));
        EXPECT(0xd5, gbc.readMem(0xaa0d));
        EXPECT(0xf7, gbc.readMem(0xd5da));
        // F7 021E
        gbc.setState(0x5616, 0xb4e2, 0xbba0, 0x1a36, 0x9764, 0xa76a, 0x1, 0x0);
        gbc.writeMem(0x5616, { 0xf7 });
        gbc.writeMem(0xb4e0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xb4e0, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0xb4e0));
        EXPECT(0x56, gbc.readMem(0xb4e1));
        // F7 021F
        gbc.setState(0xd16, 0xf31d, 0x25b0, 0x41d8, 0x9ab5, 0x2d3d, 0x0, 0x0);
        gbc.writeMem(0xd16, { 0xf7 });
        gbc.writeMem(0xf31b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xf31b, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0xf31b));
        EXPECT(0xd, gbc.readMem(0xf31c));
        // F7 0222
        gbc.setState(0xedbf, 0xc447, 0xd0c0, 0xdf21, 0x361c, 0xdd94, 0x1, 0x0);
        gbc.writeMem(0xc445, { 0x0, 0x0 });
        gbc.writeMem(0xedbf, { 0xf7 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xc445, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xc445));
        EXPECT(0xed, gbc.readMem(0xc446));
        EXPECT(0xf7, gbc.readMem(0xedbf));
        // F7 0223
        gbc.setState(0x596a, 0xf31b, 0xb350, 0x5a30, 0x816d, 0x7bd7, 0x1, 0x0);
        gbc.writeMem(0x596a, { 0xf7 });
        gbc.writeMem(0xf319, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xf319, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0xf319));
        EXPECT(0x59, gbc.readMem(0xf31a));
        // F7 0224
        gbc.setState(0xd39d, 0xb5fd, 0x7d90, 0xba29, 0x702d, 0xd7df, 0x0, 0x0);
        gbc.writeMem(0xb5fb, { 0x0, 0x0 });
        gbc.writeMem(0xd39d, { 0xf7 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xb5fb, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xb5fb));
        EXPECT(0xd3, gbc.readMem(0xb5fc));
        EXPECT(0xf7, gbc.readMem(0xd39d));
        // F7 0225
        gbc.setState(0x241d, 0x93b3, 0xaef0, 0xaacf, 0xed20, 0xfa0d, 0x0, 0x1);
        gbc.writeMem(0x241d, { 0xf7 });
        gbc.writeMem(0x93b1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x93b1, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0x93b1));
        EXPECT(0x24, gbc.readMem(0x93b2));
        // F7 0226
        gbc.setState(0xe11f, 0xafbf, 0x8a30, 0x4039, 0x1392, 0x71b8, 0x0, 0x0);
        gbc.writeMem(0xafbd, { 0x0, 0x0 });
        gbc.writeMem(0xe11f, { 0xf7 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xafbd, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xafbd));
        EXPECT(0xe1, gbc.readMem(0xafbe));
        EXPECT(0xf7, gbc.readMem(0xe11f));
        // F7 022A
        gbc.setState(0x1ce2, 0xf7a8, 0x43d0, 0xa7ef, 0x3a53, 0x60db, 0x1, 0x1);
        gbc.writeMem(0x1ce2, { 0xf7 });
        gbc.writeMem(0xf7a6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf7a6, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0xf7a6));
        EXPECT(0x1c, gbc.readMem(0xf7a7));
        // F7 022E
        gbc.setState(0x477c, 0xd93b, 0xb650, 0xdd4f, 0xd0e8, 0x44c9, 0x1, 0x1);
        gbc.writeMem(0x477c, { 0xf7 });
        gbc.writeMem(0xd939, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xd939, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xd939));
        EXPECT(0x47, gbc.readMem(0xd93a));
        // F7 022F
        gbc.setState(0x7b9a, 0xe3db, 0xccc0, 0x4484, 0x7395, 0xa8ce, 0x1, 0x1);
        gbc.writeMem(0x7b9a, { 0xf7 });
        gbc.writeMem(0xe3d9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xe3d9, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xe3d9));
        EXPECT(0x7b, gbc.readMem(0xe3da));
        // F7 0231
        gbc.setState(0x2320, 0xfcde, 0x14e0, 0x5fe0, 0xcb31, 0xb96b, 0x1, 0x0);
        gbc.writeMem(0x2320, { 0xf7 });
        gbc.writeMem(0xfcdc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xfcdc, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xfcdc));
        EXPECT(0x23, gbc.readMem(0xfcdd));
        // F7 0232
        gbc.setState(0xc35c, 0xa352, 0x290, 0x2417, 0x2056, 0x4f62, 0x1, 0x0);
        gbc.writeMem(0xa350, { 0x0, 0x0 });
        gbc.writeMem(0xc35c, { 0xf7 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xa350, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xa350));
        EXPECT(0xc3, gbc.readMem(0xa351));
        EXPECT(0xf7, gbc.readMem(0xc35c));
        // F7 0234
        gbc.setState(0x6ebd, 0xae1c, 0xdc80, 0x38d9, 0x86d6, 0x2a7e, 0x1, 0x1);
        gbc.writeMem(0x6ebd, { 0xf7 });
        gbc.writeMem(0xae1a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xae1a, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xae1a));
        EXPECT(0x6e, gbc.readMem(0xae1b));
        // F7 0235
        gbc.setState(0x832e, 0xb4f1, 0x37d0, 0x9e4e, 0xdc5e, 0x4820, 0x0, 0x1);
        gbc.writeMem(0x832e, { 0xf7 });
        gbc.writeMem(0xb4ef, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xb4ef, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x832e));
        EXPECT(0x2f, gbc.readMem(0xb4ef));
        EXPECT(0x83, gbc.readMem(0xb4f0));
        // F7 0237
        gbc.setState(0x249a, 0xeb25, 0xfc00, 0x6327, 0x49d2, 0x27d9, 0x0, 0x0);
        gbc.writeMem(0x249a, { 0xf7 });
        gbc.writeMem(0xeb23, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xeb23, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xeb23));
        EXPECT(0x24, gbc.readMem(0xeb24));
        // F7 0238
        gbc.setState(0x577e, 0xeeee, 0x6bb0, 0x232e, 0xc49a, 0x74d2, 0x0, 0x1);
        gbc.writeMem(0x577e, { 0xf7 });
        gbc.writeMem(0xeeec, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xeeec, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xeeec));
        EXPECT(0x57, gbc.readMem(0xeeed));
        // F7 023A
        gbc.setState(0x5f2a, 0xeef8, 0xcf80, 0x9115, 0x13af, 0x6e9e, 0x1, 0x1);
        gbc.writeMem(0x5f2a, { 0xf7 });
        gbc.writeMem(0xeef6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xeef6, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xeef6));
        EXPECT(0x5f, gbc.readMem(0xeef7));
        // F7 023B
        gbc.setState(0xc0f8, 0xd778, 0x9590, 0xce84, 0x7649, 0xa0f5, 0x1, 0x0);
        gbc.writeMem(0xc0f8, { 0xf7 });
        gbc.writeMem(0xd776, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xd776, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xc0f8));
        EXPECT(0xf9, gbc.readMem(0xd776));
        EXPECT(0xc0, gbc.readMem(0xd777));
        // F7 023D
        gbc.setState(0x5b36, 0xd2dc, 0x49b0, 0x1130, 0x50d3, 0xda0a, 0x1, 0x1);
        gbc.writeMem(0x5b36, { 0xf7 });
        gbc.writeMem(0xd2da, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xd2da, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xd2da));
        EXPECT(0x5b, gbc.readMem(0xd2db));
        // F7 023E
        gbc.setState(0x95a, 0xa361, 0xc560, 0xf4ff, 0xfcbe, 0xb06b, 0x0, 0x0);
        gbc.writeMem(0x95a, { 0xf7 });
        gbc.writeMem(0xa35f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xa35f, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xa35f));
        EXPECT(0x9, gbc.readMem(0xa360));
        // F7 023F
        gbc.setState(0x9111, 0x90bb, 0xd0, 0x9346, 0xca67, 0x722a, 0x0, 0x1);
        gbc.writeMem(0x90b9, { 0x0, 0x0 });
        gbc.writeMem(0x9111, { 0xf7 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x90b9, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x90b9));
        EXPECT(0x91, gbc.readMem(0x90ba));
        EXPECT(0xf7, gbc.readMem(0x9111));
        // F7 0241
        gbc.setState(0xacf3, 0xa188, 0xb0, 0x72ef, 0x9b23, 0xc7f, 0x0, 0x1);
        gbc.writeMem(0xa186, { 0x0, 0x0 });
        gbc.writeMem(0xacf3, { 0xf7 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xa186, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xa186));
        EXPECT(0xac, gbc.readMem(0xa187));
        EXPECT(0xf7, gbc.readMem(0xacf3));
        // F7 0242
        gbc.setState(0xc6b3, 0x844d, 0xc160, 0x32e6, 0xb8d, 0xdc62, 0x0, 0x0);
        gbc.writeMem(0x844b, { 0x0, 0x0 });
        gbc.writeMem(0xc6b3, { 0xf7 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x844b, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0x844b));
        EXPECT(0xc6, gbc.readMem(0x844c));
        EXPECT(0xf7, gbc.readMem(0xc6b3));
        // F7 0243
        gbc.setState(0x118, 0xe749, 0xdd40, 0x6a48, 0x249b, 0x3326, 0x1, 0x0);
        gbc.writeMem(0x118, { 0xf7 });
        gbc.writeMem(0xe747, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xe747, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xe747));
        EXPECT(0x1, gbc.readMem(0xe748));
        // F7 0244
        gbc.setState(0xecea, 0xd7ba, 0xd160, 0x8df, 0x2de, 0x5e4, 0x1, 0x1);
        gbc.writeMem(0xd7b8, { 0x0, 0x0 });
        gbc.writeMem(0xecea, { 0xf7 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xd7b8, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0xd7b8));
        EXPECT(0xec, gbc.readMem(0xd7b9));
        EXPECT(0xf7, gbc.readMem(0xecea));
        // F7 0249
        gbc.setState(0xe167, 0xdcb5, 0x4c20, 0xd63b, 0xba79, 0x5cfe, 0x0, 0x0);
        gbc.writeMem(0xdcb3, { 0x0, 0x0 });
        gbc.writeMem(0xe167, { 0xf7 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xdcb3, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xdcb3));
        EXPECT(0xe1, gbc.readMem(0xdcb4));
        EXPECT(0xf7, gbc.readMem(0xe167));
        // F7 024C
        gbc.setState(0x37b4, 0xf9a3, 0xd0a0, 0xe0f7, 0xe854, 0x703, 0x0, 0x0);
        gbc.writeMem(0x37b4, { 0xf7 });
        gbc.writeMem(0xf9a1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xf9a1, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xf9a1));
        EXPECT(0x37, gbc.readMem(0xf9a2));
        // F7 024D
        gbc.setState(0xb887, 0xd5fc, 0xf850, 0x2bb6, 0xfda1, 0xe8bf, 0x0, 0x1);
        gbc.writeMem(0xb887, { 0xf7 });
        gbc.writeMem(0xd5fa, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xd5fa, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xb887));
        EXPECT(0x88, gbc.readMem(0xd5fa));
        EXPECT(0xb8, gbc.readMem(0xd5fb));
        // F7 024E
        gbc.setState(0x5720, 0xb8de, 0x19c0, 0xc9f2, 0x9599, 0x3dc5, 0x1, 0x1);
        gbc.writeMem(0x5720, { 0xf7 });
        gbc.writeMem(0xb8dc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xb8dc, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xb8dc));
        EXPECT(0x57, gbc.readMem(0xb8dd));
        // F7 024F
        gbc.setState(0xcc30, 0xb058, 0xea0, 0x8dd, 0xdd16, 0x53d8, 0x0, 0x1);
        gbc.writeMem(0xb056, { 0x0, 0x0 });
        gbc.writeMem(0xcc30, { 0xf7 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xb056, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xb056));
        EXPECT(0xcc, gbc.readMem(0xb057));
        EXPECT(0xf7, gbc.readMem(0xcc30));
        // F7 0252
        gbc.setState(0x5f0a, 0xd199, 0xc300, 0xc4d6, 0x3a71, 0x6886, 0x0, 0x1);
        gbc.writeMem(0x5f0a, { 0xf7 });
        gbc.writeMem(0xd197, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xd197, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xd197));
        EXPECT(0x5f, gbc.readMem(0xd198));
        // F7 0253
        gbc.setState(0x443b, 0xfdd9, 0x4f70, 0xc666, 0xdf4f, 0xc7ad, 0x0, 0x1);
        gbc.writeMem(0x443b, { 0xf7 });
        gbc.writeMem(0xfdd7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xfdd7, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xfdd7));
        EXPECT(0x44, gbc.readMem(0xfdd8));
        // F7 0255
        gbc.setState(0xbf9b, 0xa87f, 0xb4b0, 0x3800, 0x5305, 0x4bca, 0x1, 0x1);
        gbc.writeMem(0xa87d, { 0x0, 0x0 });
        gbc.writeMem(0xbf9b, { 0xf7 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xa87d, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xa87d));
        EXPECT(0xbf, gbc.readMem(0xa87e));
        EXPECT(0xf7, gbc.readMem(0xbf9b));
        // F7 0256
        gbc.setState(0x239e, 0xa568, 0xd0a0, 0x50f4, 0x9458, 0x2428, 0x0, 0x1);
        gbc.writeMem(0x239e, { 0xf7 });
        gbc.writeMem(0xa566, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xa566, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xa566));
        EXPECT(0x23, gbc.readMem(0xa567));
        // F7 0257
        gbc.setState(0xab91, 0xaf8e, 0x7b80, 0x9f9d, 0x3066, 0x7803, 0x1, 0x1);
        gbc.writeMem(0xab91, { 0xf7 });
        gbc.writeMem(0xaf8c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xaf8c, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xab91));
        EXPECT(0x92, gbc.readMem(0xaf8c));
        EXPECT(0xab, gbc.readMem(0xaf8d));
        // F7 0259
        gbc.setState(0xbd2e, 0x84e3, 0xaf0, 0xa56b, 0x794d, 0xf3c3, 0x0, 0x0);
        gbc.writeMem(0x84e1, { 0x0, 0x0 });
        gbc.writeMem(0xbd2e, { 0xf7 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x84e1, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x84e1));
        EXPECT(0xbd, gbc.readMem(0x84e2));
        EXPECT(0xf7, gbc.readMem(0xbd2e));
        // F7 025A
        gbc.setState(0xc00a, 0xb2ea, 0x1be0, 0x4364, 0x68b0, 0xf486, 0x1, 0x0);
        gbc.writeMem(0xb2e8, { 0x0, 0x0 });
        gbc.writeMem(0xc00a, { 0xf7 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xb2e8, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xb2e8));
        EXPECT(0xc0, gbc.readMem(0xb2e9));
        EXPECT(0xf7, gbc.readMem(0xc00a));
        // F7 025B
        gbc.setState(0x9a9e, 0x82b6, 0x7a20, 0xf338, 0x74ec, 0xa03e, 0x1, 0x1);
        gbc.writeMem(0x82b4, { 0x0, 0x0 });
        gbc.writeMem(0x9a9e, { 0xf7 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x82b4, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x82b4));
        EXPECT(0x9a, gbc.readMem(0x82b5));
        EXPECT(0xf7, gbc.readMem(0x9a9e));
        // F7 025D
        gbc.setState(0xe577, 0xbaac, 0xe6f0, 0xd8a, 0x248c, 0xf3be, 0x0, 0x1);
        gbc.writeMem(0xbaaa, { 0x0, 0x0 });
        gbc.writeMem(0xe577, { 0xf7 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xbaaa, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xbaaa));
        EXPECT(0xe5, gbc.readMem(0xbaab));
        EXPECT(0xf7, gbc.readMem(0xe577));
        // F7 0260
        gbc.setState(0x1834, 0xac1a, 0x4830, 0x5d3f, 0xaacf, 0x7925, 0x0, 0x1);
        gbc.writeMem(0x1834, { 0xf7 });
        gbc.writeMem(0xac18, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xac18, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xac18));
        EXPECT(0x18, gbc.readMem(0xac19));
        // F7 0263
        gbc.setState(0x196, 0xfdc3, 0x38a0, 0xa5bf, 0x66d0, 0x97f0, 0x0, 0x0);
        gbc.writeMem(0x196, { 0xf7 });
        gbc.writeMem(0xfdc1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xfdc1, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xfdc1));
        EXPECT(0x1, gbc.readMem(0xfdc2));
        // F7 0264
        gbc.setState(0x9187, 0xd85c, 0x7740, 0xf02, 0x9861, 0x2858, 0x1, 0x0);
        gbc.writeMem(0x9187, { 0xf7 });
        gbc.writeMem(0xd85a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xd85a, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x9187));
        EXPECT(0x88, gbc.readMem(0xd85a));
        EXPECT(0x91, gbc.readMem(0xd85b));
        // F7 0267
        gbc.setState(0x713d, 0xcb90, 0xf440, 0xe30e, 0xe27, 0x5d8d, 0x1, 0x1);
        gbc.writeMem(0x713d, { 0xf7 });
        gbc.writeMem(0xcb8e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xcb8e, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xcb8e));
        EXPECT(0x71, gbc.readMem(0xcb8f));
        // F7 026A
        gbc.setState(0xcdf7, 0xf429, 0xe840, 0xb74c, 0x9943, 0x6c66, 0x0, 0x1);
        gbc.writeMem(0xcdf7, { 0xf7 });
        gbc.writeMem(0xf427, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xf427, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xcdf7));
        EXPECT(0xf8, gbc.readMem(0xf427));
        EXPECT(0xcd, gbc.readMem(0xf428));
        // F7 026C
        gbc.setState(0x84a6, 0xe04c, 0x5630, 0xaaa2, 0xfb5b, 0x6387, 0x1, 0x1);
        gbc.writeMem(0x84a6, { 0xf7 });
        gbc.writeMem(0xe04a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xe04a, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x84a6));
        EXPECT(0xa7, gbc.readMem(0xe04a));
        EXPECT(0x84, gbc.readMem(0xe04b));
        // F7 026D
        gbc.setState(0xa264, 0xd0c5, 0x7ab0, 0x7b11, 0x6f3c, 0x3224, 0x0, 0x1);
        gbc.writeMem(0xa264, { 0xf7 });
        gbc.writeMem(0xd0c3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xd0c3, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xa264));
        EXPECT(0x65, gbc.readMem(0xd0c3));
        EXPECT(0xa2, gbc.readMem(0xd0c4));
        // F7 0270
        gbc.setState(0x2c44, 0x90b9, 0xc7c0, 0x1349, 0x5ccb, 0x167e, 0x1, 0x0);
        gbc.writeMem(0x2c44, { 0xf7 });
        gbc.writeMem(0x90b7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x90b7, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0x90b7));
        EXPECT(0x2c, gbc.readMem(0x90b8));
        // F7 0272
        gbc.setState(0x9299, 0x8619, 0x3570, 0x9f6d, 0xbda7, 0x2eca, 0x0, 0x0);
        gbc.writeMem(0x8617, { 0x0, 0x0 });
        gbc.writeMem(0x9299, { 0xf7 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x8617, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x8617));
        EXPECT(0x92, gbc.readMem(0x8618));
        EXPECT(0xf7, gbc.readMem(0x9299));
        // F7 0276
        gbc.setState(0xcec0, 0xd6f6, 0x9000, 0xcef, 0x22d1, 0xb8ab, 0x0, 0x0);
        gbc.writeMem(0xcec0, { 0xf7 });
        gbc.writeMem(0xd6f4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xd6f4, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xcec0));
        EXPECT(0xc1, gbc.readMem(0xd6f4));
        EXPECT(0xce, gbc.readMem(0xd6f5));
        // F7 027A
        gbc.setState(0xcca, 0xe4a9, 0x48c0, 0xa22, 0xc1d0, 0x9b16, 0x0, 0x1);
        gbc.writeMem(0xcca, { 0xf7 });
        gbc.writeMem(0xe4a7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xe4a7, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4a7));
        EXPECT(0xc, gbc.readMem(0xe4a8));
        // F7 027B
        gbc.setState(0x27ca, 0xf4e5, 0xf660, 0x947c, 0x57af, 0xdcf4, 0x0, 0x1);
        gbc.writeMem(0x27ca, { 0xf7 });
        gbc.writeMem(0xf4e3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xf4e3, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xf4e3));
        EXPECT(0x27, gbc.readMem(0xf4e4));
        // F7 027C
        gbc.setState(0x5e2b, 0x8ba6, 0x330, 0xd56, 0x8e04, 0x8a7, 0x0, 0x1);
        gbc.writeMem(0x5e2b, { 0xf7 });
        gbc.writeMem(0x8ba4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x8ba4, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x8ba4));
        EXPECT(0x5e, gbc.readMem(0x8ba5));
        // F7 027D
        gbc.setState(0xb80d, 0xed5f, 0xfcc0, 0x9c0f, 0xc43a, 0x7a6c, 0x0, 0x0);
        gbc.writeMem(0xb80d, { 0xf7 });
        gbc.writeMem(0xed5d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xed5d, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xb80d));
        EXPECT(0xe, gbc.readMem(0xed5d));
        EXPECT(0xb8, gbc.readMem(0xed5e));
        // F7 027E
        gbc.setState(0x6ed8, 0x9bf7, 0xfa90, 0x3bbd, 0x9560, 0x87c0, 0x0, 0x0);
        gbc.writeMem(0x6ed8, { 0xf7 });
        gbc.writeMem(0x9bf5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x9bf5, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x9bf5));
        EXPECT(0x6e, gbc.readMem(0x9bf6));
        // F7 027F
        gbc.setState(0xcad3, 0xd5cb, 0x3290, 0x881a, 0x27d0, 0xafec, 0x1, 0x1);
        gbc.writeMem(0xcad3, { 0xf7 });
        gbc.writeMem(0xd5c9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xd5c9, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xcad3));
        EXPECT(0xd4, gbc.readMem(0xd5c9));
        EXPECT(0xca, gbc.readMem(0xd5ca));
        // F7 0281
        gbc.setState(0x5f53, 0x9ea8, 0xab50, 0xbe25, 0x34fa, 0x819a, 0x1, 0x1);
        gbc.writeMem(0x5f53, { 0xf7 });
        gbc.writeMem(0x9ea6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x9ea6, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0x9ea6));
        EXPECT(0x5f, gbc.readMem(0x9ea7));
        // F7 0283
        gbc.setState(0xafe7, 0xfb82, 0x4190, 0x7f48, 0xf2e3, 0x7a99, 0x1, 0x0);
        gbc.writeMem(0xafe7, { 0xf7 });
        gbc.writeMem(0xfb80, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xfb80, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xafe7));
        EXPECT(0xe8, gbc.readMem(0xfb80));
        EXPECT(0xaf, gbc.readMem(0xfb81));
        // F7 0284
        gbc.setState(0x67a9, 0xccc6, 0x4600, 0xb9fd, 0x6f16, 0x5e62, 0x0, 0x1);
        gbc.writeMem(0x67a9, { 0xf7 });
        gbc.writeMem(0xccc4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xccc4, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xccc4));
        EXPECT(0x67, gbc.readMem(0xccc5));
        // F7 0286
        gbc.setState(0xcaee, 0xdf19, 0x7480, 0x6a5c, 0x8fa0, 0x5830, 0x1, 0x0);
        gbc.writeMem(0xcaee, { 0xf7 });
        gbc.writeMem(0xdf17, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xdf17, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xcaee));
        EXPECT(0xef, gbc.readMem(0xdf17));
        EXPECT(0xca, gbc.readMem(0xdf18));
        // F7 0288
        gbc.setState(0x14b4, 0xf064, 0x5170, 0x166d, 0xd459, 0x5aa5, 0x1, 0x1);
        gbc.writeMem(0x14b4, { 0xf7 });
        gbc.writeMem(0xf062, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xf062, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xf062));
        EXPECT(0x14, gbc.readMem(0xf063));
        // F7 028A
        gbc.setState(0x6e2d, 0x906f, 0x56a0, 0x5674, 0xc1d3, 0xbe5b, 0x1, 0x1);
        gbc.writeMem(0x6e2d, { 0xf7 });
        gbc.writeMem(0x906d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x906d, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x906d));
        EXPECT(0x6e, gbc.readMem(0x906e));
        // F7 028D
        gbc.setState(0x3653, 0x8964, 0xb1e0, 0x6032, 0x7f68, 0x451d, 0x0, 0x0);
        gbc.writeMem(0x3653, { 0xf7 });
        gbc.writeMem(0x8962, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x8962, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0x8962));
        EXPECT(0x36, gbc.readMem(0x8963));
        // F7 0291
        gbc.setState(0x3ef, 0xcdc4, 0x5e00, 0x937f, 0xaa30, 0xf9cd, 0x0, 0x0);
        gbc.writeMem(0x3ef, { 0xf7 });
        gbc.writeMem(0xcdc2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xcdc2, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xcdc2));
        EXPECT(0x3, gbc.readMem(0xcdc3));
        // F7 0292
        gbc.setState(0xad4e, 0xce60, 0xec70, 0x3f50, 0xe1a8, 0x21fa, 0x1, 0x0);
        gbc.writeMem(0xad4e, { 0xf7 });
        gbc.writeMem(0xce5e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xce5e, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xad4e));
        EXPECT(0x4f, gbc.readMem(0xce5e));
        EXPECT(0xad, gbc.readMem(0xce5f));
        // F7 0296
        gbc.setState(0x759c, 0xccf2, 0xa540, 0x5e9c, 0x2dd, 0x3e35, 0x1, 0x0);
        gbc.writeMem(0x759c, { 0xf7 });
        gbc.writeMem(0xccf0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xccf0, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xccf0));
        EXPECT(0x75, gbc.readMem(0xccf1));
        // F7 0297
        gbc.setState(0x18e5, 0xbbe2, 0xbfb0, 0x37d1, 0x1ba6, 0x97e7, 0x0, 0x0);
        gbc.writeMem(0x18e5, { 0xf7 });
        gbc.writeMem(0xbbe0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xbbe0, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xbbe0));
        EXPECT(0x18, gbc.readMem(0xbbe1));
        // F7 029D
        gbc.setState(0xd6d4, 0xcf95, 0xf250, 0x3c13, 0x3ce2, 0xdbdc, 0x1, 0x1);
        gbc.writeMem(0xcf93, { 0x0, 0x0 });
        gbc.writeMem(0xd6d4, { 0xf7 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xcf93, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xcf93));
        EXPECT(0xd6, gbc.readMem(0xcf94));
        EXPECT(0xf7, gbc.readMem(0xd6d4));
        // F7 02A0
        gbc.setState(0x151f, 0xdafd, 0x6bb0, 0x6e3, 0xe588, 0x2c08, 0x0, 0x0);
        gbc.writeMem(0x151f, { 0xf7 });
        gbc.writeMem(0xdafb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xdafb, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xdafb));
        EXPECT(0x15, gbc.readMem(0xdafc));
        // F7 02A2
        gbc.setState(0x3870, 0xc7bc, 0x1d80, 0x7552, 0x1a1e, 0x80c2, 0x1, 0x1);
        gbc.writeMem(0x3870, { 0xf7 });
        gbc.writeMem(0xc7ba, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xc7ba, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xc7ba));
        EXPECT(0x38, gbc.readMem(0xc7bb));
        // F7 02A4
        gbc.setState(0xefce, 0xe9cd, 0xedb0, 0x7bf, 0x56da, 0x18e9, 0x1, 0x1);
        gbc.writeMem(0xe9cb, { 0x0, 0x0 });
        gbc.writeMem(0xefce, { 0xf7 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xe9cb, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xe9cb));
        EXPECT(0xef, gbc.readMem(0xe9cc));
        EXPECT(0xf7, gbc.readMem(0xefce));
        // F7 02A5
        gbc.setState(0x4896, 0xbdcd, 0xc350, 0x5a1e, 0x9519, 0xd23b, 0x0, 0x1);
        gbc.writeMem(0x4896, { 0xf7 });
        gbc.writeMem(0xbdcb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xbdcb, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xbdcb));
        EXPECT(0x48, gbc.readMem(0xbdcc));
        // F7 02A6
        gbc.setState(0xac84, 0xdbeb, 0x5be0, 0xb087, 0x5732, 0x4c31, 0x0, 0x0);
        gbc.writeMem(0xac84, { 0xf7 });
        gbc.writeMem(0xdbe9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xdbe9, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xac84));
        EXPECT(0x85, gbc.readMem(0xdbe9));
        EXPECT(0xac, gbc.readMem(0xdbea));
        // F7 02AA
        gbc.setState(0x98e3, 0xa205, 0x88c0, 0x6eed, 0x8469, 0xda54, 0x0, 0x0);
        gbc.writeMem(0x98e3, { 0xf7 });
        gbc.writeMem(0xa203, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xa203, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x98e3));
        EXPECT(0xe4, gbc.readMem(0xa203));
        EXPECT(0x98, gbc.readMem(0xa204));
        // F7 02AC
        gbc.setState(0xa952, 0xccf1, 0xb400, 0xc32b, 0xd9cd, 0x52e5, 0x0, 0x1);
        gbc.writeMem(0xa952, { 0xf7 });
        gbc.writeMem(0xccef, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xccef, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xa952));
        EXPECT(0x53, gbc.readMem(0xccef));
        EXPECT(0xa9, gbc.readMem(0xccf0));
        // F7 02AD
        gbc.setState(0x926b, 0xcb3c, 0xa5e0, 0x624f, 0xf317, 0x36c1, 0x1, 0x0);
        gbc.writeMem(0x926b, { 0xf7 });
        gbc.writeMem(0xcb3a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xcb3a, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x926b));
        EXPECT(0x6c, gbc.readMem(0xcb3a));
        EXPECT(0x92, gbc.readMem(0xcb3b));
        // F7 02B2
        gbc.setState(0xcca1, 0xf5d3, 0x8360, 0xe9a9, 0x4336, 0xd48c, 0x0, 0x1);
        gbc.writeMem(0xcca1, { 0xf7 });
        gbc.writeMem(0xf5d1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xf5d1, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xcca1));
        EXPECT(0xa2, gbc.readMem(0xf5d1));
        EXPECT(0xcc, gbc.readMem(0xf5d2));
        // F7 02B3
        gbc.setState(0xa915, 0xd7c7, 0x5a70, 0x603f, 0xdfe2, 0xe47, 0x1, 0x0);
        gbc.writeMem(0xa915, { 0xf7 });
        gbc.writeMem(0xd7c5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xd7c5, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xa915));
        EXPECT(0x16, gbc.readMem(0xd7c5));
        EXPECT(0xa9, gbc.readMem(0xd7c6));
        // F7 02B5
        gbc.setState(0x2960, 0x8c72, 0x9d0, 0x761a, 0xd2ae, 0xce0d, 0x1, 0x0);
        gbc.writeMem(0x2960, { 0xf7 });
        gbc.writeMem(0x8c70, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x8c70, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x8c70));
        EXPECT(0x29, gbc.readMem(0x8c71));
        // F7 02B8
        gbc.setState(0x4a85, 0x8417, 0x2420, 0xb21, 0x94b7, 0xc554, 0x1, 0x0);
        gbc.writeMem(0x4a85, { 0xf7 });
        gbc.writeMem(0x8415, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x8415, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x8415));
        EXPECT(0x4a, gbc.readMem(0x8416));
        // F7 02BC
        gbc.setState(0x6b57, 0x8dcb, 0x56c0, 0xeafb, 0x9426, 0xc747, 0x1, 0x0);
        gbc.writeMem(0x6b57, { 0xf7 });
        gbc.writeMem(0x8dc9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x8dc9, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x8dc9));
        EXPECT(0x6b, gbc.readMem(0x8dca));
        // F7 02BD
        gbc.setState(0x5d21, 0xcdcc, 0xd9d0, 0xfd68, 0x50e3, 0xe837, 0x0, 0x0);
        gbc.writeMem(0x5d21, { 0xf7 });
        gbc.writeMem(0xcdca, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xcdca, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xcdca));
        EXPECT(0x5d, gbc.readMem(0xcdcb));
        // F7 02BF
        gbc.setState(0xeda9, 0xcc83, 0x3160, 0x6b91, 0xb30a, 0x9dcd, 0x0, 0x0);
        gbc.writeMem(0xcc81, { 0x0, 0x0 });
        gbc.writeMem(0xeda9, { 0xf7 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xcc81, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xcc81));
        EXPECT(0xed, gbc.readMem(0xcc82));
        EXPECT(0xf7, gbc.readMem(0xeda9));
        // F7 02C5
        gbc.setState(0xbedf, 0xef8c, 0x8330, 0x1d77, 0x85d4, 0x815, 0x1, 0x0);
        gbc.writeMem(0xbedf, { 0xf7 });
        gbc.writeMem(0xef8a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xef8a, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xbedf));
        EXPECT(0xe0, gbc.readMem(0xef8a));
        EXPECT(0xbe, gbc.readMem(0xef8b));
        // F7 02C6
        gbc.setState(0x91e1, 0xf528, 0x3860, 0x4710, 0x909d, 0x4c86, 0x0, 0x1);
        gbc.writeMem(0x91e1, { 0xf7 });
        gbc.writeMem(0xf526, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xf526, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x91e1));
        EXPECT(0xe2, gbc.readMem(0xf526));
        EXPECT(0x91, gbc.readMem(0xf527));
        // F7 02CC
        gbc.setState(0x2d73, 0xab91, 0xc990, 0x1b5c, 0xc311, 0x6c2a, 0x1, 0x0);
        gbc.writeMem(0x2d73, { 0xf7 });
        gbc.writeMem(0xab8f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xab8f, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xab8f));
        EXPECT(0x2d, gbc.readMem(0xab90));
        // F7 02CD
        gbc.setState(0x86e0, 0xfabf, 0x71c0, 0x5d4b, 0xa28, 0x21a4, 0x1, 0x0);
        gbc.writeMem(0x86e0, { 0xf7 });
        gbc.writeMem(0xfabd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xfabd, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x86e0));
        EXPECT(0xe1, gbc.readMem(0xfabd));
        EXPECT(0x86, gbc.readMem(0xfabe));
        // F7 02CE
        gbc.setState(0xd91, 0xe038, 0x69a0, 0x3476, 0x7af2, 0xaa48, 0x0, 0x1);
        gbc.writeMem(0xd91, { 0xf7 });
        gbc.writeMem(0xe036, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xe036, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xe036));
        EXPECT(0xd, gbc.readMem(0xe037));
        // F7 02D1
        gbc.setState(0x2bf0, 0xf5ac, 0xa300, 0x5793, 0xe80a, 0x811b, 0x1, 0x1);
        gbc.writeMem(0x2bf0, { 0xf7 });
        gbc.writeMem(0xf5aa, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xf5aa, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xf5aa));
        EXPECT(0x2b, gbc.readMem(0xf5ab));
        // F7 02D3
        gbc.setState(0x65d5, 0xc12d, 0xdf10, 0x29d, 0x763, 0x68cf, 0x1, 0x1);
        gbc.writeMem(0x65d5, { 0xf7 });
        gbc.writeMem(0xc12b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xc12b, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xc12b));
        EXPECT(0x65, gbc.readMem(0xc12c));
        // F7 02D6
        gbc.setState(0x6a6f, 0xd6e0, 0xd5a0, 0x400a, 0xfb15, 0x4e4c, 0x0, 0x0);
        gbc.writeMem(0x6a6f, { 0xf7 });
        gbc.writeMem(0xd6de, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xd6de, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xd6de));
        EXPECT(0x6a, gbc.readMem(0xd6df));
        // F7 02D8
        gbc.setState(0xe166, 0xa86c, 0x12b0, 0x8a68, 0x6cb3, 0x8576, 0x0, 0x0);
        gbc.writeMem(0xa86a, { 0x0, 0x0 });
        gbc.writeMem(0xe166, { 0xf7 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xa86a, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0xa86a));
        EXPECT(0xe1, gbc.readMem(0xa86b));
        EXPECT(0xf7, gbc.readMem(0xe166));
        // F7 02DA
        gbc.setState(0x19b0, 0x8c39, 0x3b70, 0x3102, 0xaba1, 0xf531, 0x0, 0x1);
        gbc.writeMem(0x19b0, { 0xf7 });
        gbc.writeMem(0x8c37, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x8c37, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0x8c37));
        EXPECT(0x19, gbc.readMem(0x8c38));
        // F7 02DB
        gbc.setState(0xd42d, 0xca6b, 0x93f0, 0xd85d, 0xf0f3, 0xa332, 0x1, 0x1);
        gbc.writeMem(0xca69, { 0x0, 0x0 });
        gbc.writeMem(0xd42d, { 0xf7 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xca69, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xca69));
        EXPECT(0xd4, gbc.readMem(0xca6a));
        EXPECT(0xf7, gbc.readMem(0xd42d));
        // F7 02DD
        gbc.setState(0x8215, 0xba2a, 0xd3f0, 0xf032, 0x5ab2, 0xb55e, 0x1, 0x0);
        gbc.writeMem(0x8215, { 0xf7 });
        gbc.writeMem(0xba28, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xba28, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x8215));
        EXPECT(0x16, gbc.readMem(0xba28));
        EXPECT(0x82, gbc.readMem(0xba29));
        // F7 02E0
        gbc.setState(0x8624, 0x869e, 0x5370, 0xa183, 0x25be, 0xe28d, 0x0, 0x1);
        gbc.writeMem(0x8624, { 0xf7 });
        gbc.writeMem(0x869c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x869c, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x8624));
        EXPECT(0x25, gbc.readMem(0x869c));
        EXPECT(0x86, gbc.readMem(0x869d));
        // F7 02E1
        gbc.setState(0xd819, 0x83d1, 0x9e10, 0xaa49, 0x241c, 0x4afc, 0x1, 0x1);
        gbc.writeMem(0x83cf, { 0x0, 0x0 });
        gbc.writeMem(0xd819, { 0xf7 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x83cf, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x83cf));
        EXPECT(0xd8, gbc.readMem(0x83d0));
        EXPECT(0xf7, gbc.readMem(0xd819));
        // F7 02E4
        gbc.setState(0x27ea, 0xc2c6, 0xa570, 0xc2d2, 0xec4f, 0x118a, 0x1, 0x0);
        gbc.writeMem(0x27ea, { 0xf7 });
        gbc.writeMem(0xc2c4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xc2c4, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0xc2c4));
        EXPECT(0x27, gbc.readMem(0xc2c5));
        // F7 02E6
        gbc.setState(0x188c, 0x9312, 0x9fa0, 0xa3f4, 0x74d3, 0xfe1f, 0x1, 0x1);
        gbc.writeMem(0x188c, { 0xf7 });
        gbc.writeMem(0x9310, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x9310, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x9310));
        EXPECT(0x18, gbc.readMem(0x9311));
        // F7 02E7
        gbc.setState(0x47e4, 0xe650, 0x31d0, 0x1259, 0xb9fd, 0x1a55, 0x0, 0x1);
        gbc.writeMem(0x47e4, { 0xf7 });
        gbc.writeMem(0xe64e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xe64e, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xe64e));
        EXPECT(0x47, gbc.readMem(0xe64f));
        // F7 02E9
        gbc.setState(0x5ee9, 0xfca2, 0x20e0, 0xb8b0, 0x5ee6, 0x51, 0x1, 0x0);
        gbc.writeMem(0x5ee9, { 0xf7 });
        gbc.writeMem(0xfca0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xfca0, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xfca0));
        EXPECT(0x5e, gbc.readMem(0xfca1));
        // F7 02EA
        gbc.setState(0x254e, 0x842e, 0xd070, 0x1a01, 0x65ce, 0x378e, 0x1, 0x1);
        gbc.writeMem(0x254e, { 0xf7 });
        gbc.writeMem(0x842c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x842c, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0x842c));
        EXPECT(0x25, gbc.readMem(0x842d));
        // F7 02EB
        gbc.setState(0xaf59, 0xb632, 0xb4d0, 0x5bd1, 0x6840, 0xbe6e, 0x0, 0x0);
        gbc.writeMem(0xaf59, { 0xf7 });
        gbc.writeMem(0xb630, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xb630, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xaf59));
        EXPECT(0x5a, gbc.readMem(0xb630));
        EXPECT(0xaf, gbc.readMem(0xb631));
        // F7 02EC
        gbc.setState(0xa4eb, 0xcf96, 0x1cc0, 0x9a68, 0x2361, 0x2933, 0x0, 0x0);
        gbc.writeMem(0xa4eb, { 0xf7 });
        gbc.writeMem(0xcf94, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xcf94, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xa4eb));
        EXPECT(0xec, gbc.readMem(0xcf94));
        EXPECT(0xa4, gbc.readMem(0xcf95));
        // F7 02ED
        gbc.setState(0xceee, 0xf29f, 0xb6f0, 0x9bf2, 0x8912, 0xc07, 0x1, 0x0);
        gbc.writeMem(0xceee, { 0xf7 });
        gbc.writeMem(0xf29d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xf29d, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xceee));
        EXPECT(0xef, gbc.readMem(0xf29d));
        EXPECT(0xce, gbc.readMem(0xf29e));
        // F7 02EE
        gbc.setState(0x7470, 0xb967, 0x4f20, 0xcdc9, 0x6442, 0x26a, 0x0, 0x0);
        gbc.writeMem(0x7470, { 0xf7 });
        gbc.writeMem(0xb965, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xb965, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xb965));
        EXPECT(0x74, gbc.readMem(0xb966));
        // F7 02F0
        gbc.setState(0x51ec, 0xd4ce, 0xb5f0, 0x8530, 0x938, 0x743f, 0x1, 0x0);
        gbc.writeMem(0x51ec, { 0xf7 });
        gbc.writeMem(0xd4cc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xd4cc, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xd4cc));
        EXPECT(0x51, gbc.readMem(0xd4cd));
        // F7 02F1
        gbc.setState(0x2c51, 0xd82c, 0x7f70, 0x2370, 0xac8a, 0xdc98, 0x0, 0x1);
        gbc.writeMem(0x2c51, { 0xf7 });
        gbc.writeMem(0xd82a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xd82a, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xd82a));
        EXPECT(0x2c, gbc.readMem(0xd82b));
        // F7 02F7
        gbc.setState(0x933d, 0x81fe, 0x5360, 0xa4a6, 0x6354, 0xd504, 0x1, 0x1);
        gbc.writeMem(0x81fc, { 0x0, 0x0 });
        gbc.writeMem(0x933d, { 0xf7 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x81fc, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x81fc));
        EXPECT(0x93, gbc.readMem(0x81fd));
        EXPECT(0xf7, gbc.readMem(0x933d));
        // F7 02F8
        gbc.setState(0x97c9, 0xb53f, 0xb900, 0xe295, 0x7dfe, 0x5e8f, 0x0, 0x0);
        gbc.writeMem(0x97c9, { 0xf7 });
        gbc.writeMem(0xb53d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xb53d, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x97c9));
        EXPECT(0xca, gbc.readMem(0xb53d));
        EXPECT(0x97, gbc.readMem(0xb53e));
        // F7 02F9
        gbc.setState(0xe51a, 0xcbb8, 0x9850, 0x31f5, 0x1571, 0x73bc, 0x0, 0x0);
        gbc.writeMem(0xcbb6, { 0x0, 0x0 });
        gbc.writeMem(0xe51a, { 0xf7 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xcbb6, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xcbb6));
        EXPECT(0xe5, gbc.readMem(0xcbb7));
        EXPECT(0xf7, gbc.readMem(0xe51a));
        // F7 02FA
        gbc.setState(0x461c, 0xbc9f, 0x1bb0, 0xf06, 0x3e0f, 0xf338, 0x1, 0x0);
        gbc.writeMem(0x461c, { 0xf7 });
        gbc.writeMem(0xbc9d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xbc9d, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xbc9d));
        EXPECT(0x46, gbc.readMem(0xbc9e));
        // F7 02FB
        gbc.setState(0x4819, 0xdf26, 0x270, 0xd5d8, 0x8ab2, 0xf0a8, 0x1, 0x0);
        gbc.writeMem(0x4819, { 0xf7 });
        gbc.writeMem(0xdf24, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xdf24, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xdf24));
        EXPECT(0x48, gbc.readMem(0xdf25));
        // F7 0305
        gbc.setState(0xc513, 0x8142, 0xa530, 0x8f1, 0xa2b0, 0x24e5, 0x1, 0x1);
        gbc.writeMem(0x8140, { 0x0, 0x0 });
        gbc.writeMem(0xc513, { 0xf7 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x8140, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x8140));
        EXPECT(0xc5, gbc.readMem(0x8141));
        EXPECT(0xf7, gbc.readMem(0xc513));
        // F7 0306
        gbc.setState(0x1dd3, 0xdc15, 0xc5c0, 0x1912, 0x105e, 0x6fc3, 0x0, 0x1);
        gbc.writeMem(0x1dd3, { 0xf7 });
        gbc.writeMem(0xdc13, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xdc13, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xdc13));
        EXPECT(0x1d, gbc.readMem(0xdc14));
        // F7 0308
        gbc.setState(0xc63e, 0xb52d, 0xc970, 0xb5ed, 0x9567, 0x5885, 0x0, 0x1);
        gbc.writeMem(0xb52b, { 0x0, 0x0 });
        gbc.writeMem(0xc63e, { 0xf7 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xb52b, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xb52b));
        EXPECT(0xc6, gbc.readMem(0xb52c));
        EXPECT(0xf7, gbc.readMem(0xc63e));
        // F7 0309
        gbc.setState(0x40, 0xc055, 0xdad0, 0x2379, 0x8566, 0x3afd, 0x1, 0x0);
        gbc.writeMem(0x40, { 0xf7 });
        gbc.writeMem(0xc053, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xc053, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xc053));
        EXPECT(0x0, gbc.readMem(0xc054));
        // F7 030B
        gbc.setState(0xcd80, 0x9fe7, 0xe5f0, 0x87d1, 0xa24, 0x2fe, 0x1, 0x1);
        gbc.writeMem(0x9fe5, { 0x0, 0x0 });
        gbc.writeMem(0xcd80, { 0xf7 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x9fe5, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x9fe5));
        EXPECT(0xcd, gbc.readMem(0x9fe6));
        EXPECT(0xf7, gbc.readMem(0xcd80));
        // F7 030E
        gbc.setState(0x5b0d, 0xad38, 0x4890, 0xb6d3, 0x3282, 0xdf95, 0x1, 0x1);
        gbc.writeMem(0x5b0d, { 0xf7 });
        gbc.writeMem(0xad36, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xad36, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xad36));
        EXPECT(0x5b, gbc.readMem(0xad37));
        // F7 030F
        gbc.setState(0x5b1e, 0x8f1c, 0x3820, 0xd633, 0x3c72, 0x49f6, 0x1, 0x0);
        gbc.writeMem(0x5b1e, { 0xf7 });
        gbc.writeMem(0x8f1a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x8f1a, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0x8f1a));
        EXPECT(0x5b, gbc.readMem(0x8f1b));
        // F7 0310
        gbc.setState(0x227c, 0xd0ea, 0x6c40, 0x9882, 0xceee, 0x71bc, 0x0, 0x1);
        gbc.writeMem(0x227c, { 0xf7 });
        gbc.writeMem(0xd0e8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xd0e8, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xd0e8));
        EXPECT(0x22, gbc.readMem(0xd0e9));
        // F7 0314
        gbc.setState(0x9c95, 0xfd5e, 0x5520, 0xf2e2, 0x476f, 0xeee4, 0x0, 0x0);
        gbc.writeMem(0x9c95, { 0xf7 });
        gbc.writeMem(0xfd5c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xfd5c, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x9c95));
        EXPECT(0x96, gbc.readMem(0xfd5c));
        EXPECT(0x9c, gbc.readMem(0xfd5d));
        // F7 0315
        gbc.setState(0xbb49, 0x9657, 0x3e10, 0x79bb, 0x23e1, 0xb360, 0x0, 0x1);
        gbc.writeMem(0x9655, { 0x0, 0x0 });
        gbc.writeMem(0xbb49, { 0xf7 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x9655, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0x9655));
        EXPECT(0xbb, gbc.readMem(0x9656));
        EXPECT(0xf7, gbc.readMem(0xbb49));
        // F7 0316
        gbc.setState(0x3eed, 0xb54c, 0x3bc0, 0x3244, 0xf640, 0x7728, 0x0, 0x0);
        gbc.writeMem(0x3eed, { 0xf7 });
        gbc.writeMem(0xb54a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xb54a, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xb54a));
        EXPECT(0x3e, gbc.readMem(0xb54b));
        // F7 0317
        gbc.setState(0xb28f, 0xcbcc, 0x8cb0, 0x3e3b, 0xb59b, 0xdb42, 0x0, 0x0);
        gbc.writeMem(0xb28f, { 0xf7 });
        gbc.writeMem(0xcbca, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xcbca, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xb28f));
        EXPECT(0x90, gbc.readMem(0xcbca));
        EXPECT(0xb2, gbc.readMem(0xcbcb));
        // F7 0318
        gbc.setState(0x4670, 0xb478, 0x1370, 0x8238, 0x2484, 0x57cd, 0x0, 0x1);
        gbc.writeMem(0x4670, { 0xf7 });
        gbc.writeMem(0xb476, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xb476, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xb476));
        EXPECT(0x46, gbc.readMem(0xb477));
        // F7 0319
        gbc.setState(0x1a8c, 0x8c21, 0x4b20, 0x9f4f, 0xf31c, 0xf21b, 0x0, 0x1);
        gbc.writeMem(0x1a8c, { 0xf7 });
        gbc.writeMem(0x8c1f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x8c1f, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x8c1f));
        EXPECT(0x1a, gbc.readMem(0x8c20));
        // F7 031A
        gbc.setState(0xecac, 0xcfdf, 0x6af0, 0x8fc5, 0x33c3, 0xa642, 0x0, 0x1);
        gbc.writeMem(0xcfdd, { 0x0, 0x0 });
        gbc.writeMem(0xecac, { 0xf7 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xcfdd, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xcfdd));
        EXPECT(0xec, gbc.readMem(0xcfde));
        EXPECT(0xf7, gbc.readMem(0xecac));
        // F7 031D
        gbc.setState(0x7069, 0xa7c6, 0x350, 0xa968, 0x723f, 0x7a6c, 0x0, 0x0);
        gbc.writeMem(0x7069, { 0xf7 });
        gbc.writeMem(0xa7c4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xa7c4, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xa7c4));
        EXPECT(0x70, gbc.readMem(0xa7c5));
        // F7 031F
        gbc.setState(0x12a3, 0xb853, 0x75e0, 0xcd79, 0x5615, 0xdbea, 0x1, 0x1);
        gbc.writeMem(0x12a3, { 0xf7 });
        gbc.writeMem(0xb851, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xb851, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xb851));
        EXPECT(0x12, gbc.readMem(0xb852));
        // F7 0322
        gbc.setState(0x7d27, 0xadd9, 0xddf0, 0x91f3, 0xaf, 0xf64e, 0x0, 0x0);
        gbc.writeMem(0x7d27, { 0xf7 });
        gbc.writeMem(0xadd7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xadd7, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xadd7));
        EXPECT(0x7d, gbc.readMem(0xadd8));
        // F7 0324
        gbc.setState(0xe49a, 0x8378, 0xc650, 0x50ce, 0x8c86, 0xd19b, 0x1, 0x0);
        gbc.writeMem(0x8376, { 0x0, 0x0 });
        gbc.writeMem(0xe49a, { 0xf7 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x8376, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x8376));
        EXPECT(0xe4, gbc.readMem(0x8377));
        EXPECT(0xf7, gbc.readMem(0xe49a));
        // F7 032A
        gbc.setState(0xaad9, 0x8c79, 0xb8b0, 0xf585, 0x3bd7, 0x2208, 0x0, 0x1);
        gbc.writeMem(0x8c77, { 0x0, 0x0 });
        gbc.writeMem(0xaad9, { 0xf7 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x8c77, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x8c77));
        EXPECT(0xaa, gbc.readMem(0x8c78));
        EXPECT(0xf7, gbc.readMem(0xaad9));
        // F7 032D
        gbc.setState(0xefab, 0xc667, 0xfb90, 0x9197, 0x8aab, 0xec8a, 0x1, 0x0);
        gbc.writeMem(0xc665, { 0x0, 0x0 });
        gbc.writeMem(0xefab, { 0xf7 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xc665, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xc665));
        EXPECT(0xef, gbc.readMem(0xc666));
        EXPECT(0xf7, gbc.readMem(0xefab));
        // F7 032E
        gbc.setState(0x5dd7, 0xac4d, 0x38f0, 0xf19b, 0x4a38, 0xa8b8, 0x0, 0x0);
        gbc.writeMem(0x5dd7, { 0xf7 });
        gbc.writeMem(0xac4b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xac4b, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xac4b));
        EXPECT(0x5d, gbc.readMem(0xac4c));
        // F7 032F
        gbc.setState(0xb235, 0xb630, 0x1500, 0x4281, 0x98bd, 0xe4ee, 0x1, 0x0);
        gbc.writeMem(0xb235, { 0xf7 });
        gbc.writeMem(0xb62e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xb62e, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xb235));
        EXPECT(0x36, gbc.readMem(0xb62e));
        EXPECT(0xb2, gbc.readMem(0xb62f));
        // F7 0330
        gbc.setState(0x9e0f, 0xcbcb, 0x5cd0, 0xe85a, 0xa6d4, 0x9769, 0x1, 0x1);
        gbc.writeMem(0x9e0f, { 0xf7 });
        gbc.writeMem(0xcbc9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xcbc9, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x9e0f));
        EXPECT(0x10, gbc.readMem(0xcbc9));
        EXPECT(0x9e, gbc.readMem(0xcbca));
        // F7 0332
        gbc.setState(0xb271, 0x891c, 0xfbd0, 0x2e3d, 0xe88b, 0x9db6, 0x1, 0x1);
        gbc.writeMem(0x891a, { 0x0, 0x0 });
        gbc.writeMem(0xb271, { 0xf7 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x891a, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x891a));
        EXPECT(0xb2, gbc.readMem(0x891b));
        EXPECT(0xf7, gbc.readMem(0xb271));
        // F7 0333
        gbc.setState(0xbdec, 0xc483, 0xbeb0, 0xa63d, 0x6efa, 0xa47c, 0x1, 0x1);
        gbc.writeMem(0xbdec, { 0xf7 });
        gbc.writeMem(0xc481, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xc481, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xbdec));
        EXPECT(0xed, gbc.readMem(0xc481));
        EXPECT(0xbd, gbc.readMem(0xc482));
        // F7 0334
        gbc.setState(0x4485, 0x86af, 0x2f70, 0xb455, 0x2fb8, 0x3af5, 0x1, 0x0);
        gbc.writeMem(0x4485, { 0xf7 });
        gbc.writeMem(0x86ad, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x86ad, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x86ad));
        EXPECT(0x44, gbc.readMem(0x86ae));
        // F7 0335
        gbc.setState(0x15e7, 0xc1fd, 0xeb00, 0xd630, 0x378b, 0xd55c, 0x1, 0x0);
        gbc.writeMem(0x15e7, { 0xf7 });
        gbc.writeMem(0xc1fb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xc1fb, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xc1fb));
        EXPECT(0x15, gbc.readMem(0xc1fc));
        // F7 0336
        gbc.setState(0xb50, 0xe6d8, 0x75d0, 0xeb68, 0x1329, 0xfe, 0x1, 0x1);
        gbc.writeMem(0xb50, { 0xf7 });
        gbc.writeMem(0xe6d6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xe6d6, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xe6d6));
        EXPECT(0xb, gbc.readMem(0xe6d7));
        // F7 0338
        gbc.setState(0x2e2d, 0xc164, 0xa2e0, 0x10e8, 0x47f7, 0x33f2, 0x0, 0x0);
        gbc.writeMem(0x2e2d, { 0xf7 });
        gbc.writeMem(0xc162, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xc162, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xc162));
        EXPECT(0x2e, gbc.readMem(0xc163));
        // F7 033B
        gbc.setState(0xcadb, 0xc37c, 0xc60, 0xf277, 0x8160, 0x754, 0x1, 0x0);
        gbc.writeMem(0xc37a, { 0x0, 0x0 });
        gbc.writeMem(0xcadb, { 0xf7 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xc37a, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xc37a));
        EXPECT(0xca, gbc.readMem(0xc37b));
        EXPECT(0xf7, gbc.readMem(0xcadb));
        // F7 033D
        gbc.setState(0x3e7d, 0x918a, 0x50d0, 0x546b, 0x9abd, 0xe2cc, 0x1, 0x1);
        gbc.writeMem(0x3e7d, { 0xf7 });
        gbc.writeMem(0x9188, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x9188, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x9188));
        EXPECT(0x3e, gbc.readMem(0x9189));
        // F7 033E
        gbc.setState(0x35a1, 0xcbca, 0xaff0, 0x6a4f, 0xdb93, 0x9ca1, 0x0, 0x0);
        gbc.writeMem(0x35a1, { 0xf7 });
        gbc.writeMem(0xcbc8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xcbc8, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xcbc8));
        EXPECT(0x35, gbc.readMem(0xcbc9));
        // F7 0342
        gbc.setState(0x70a6, 0x9b39, 0x1330, 0x40df, 0x18c, 0x4900, 0x1, 0x0);
        gbc.writeMem(0x70a6, { 0xf7 });
        gbc.writeMem(0x9b37, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x9b37, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x9b37));
        EXPECT(0x70, gbc.readMem(0x9b38));
        // F7 0343
        gbc.setState(0x3ab6, 0xe374, 0xcef0, 0xa98b, 0x827e, 0x978d, 0x1, 0x0);
        gbc.writeMem(0x3ab6, { 0xf7 });
        gbc.writeMem(0xe372, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xe372, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xe372));
        EXPECT(0x3a, gbc.readMem(0xe373));
        // F7 0344
        gbc.setState(0x6fa8, 0x9926, 0x2f30, 0x1c7c, 0xc84d, 0xeefa, 0x1, 0x1);
        gbc.writeMem(0x6fa8, { 0xf7 });
        gbc.writeMem(0x9924, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x9924, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0x9924));
        EXPECT(0x6f, gbc.readMem(0x9925));
        // F7 0345
        gbc.setState(0x6b97, 0x94f4, 0xee90, 0xcdd0, 0x30e4, 0xac38, 0x0, 0x1);
        gbc.writeMem(0x6b97, { 0xf7 });
        gbc.writeMem(0x94f2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x94f2, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x94f2));
        EXPECT(0x6b, gbc.readMem(0x94f3));
        // F7 0349
        gbc.setState(0x3f48, 0xeb0c, 0x91f0, 0x1323, 0xed1e, 0xdc7d, 0x0, 0x0);
        gbc.writeMem(0x3f48, { 0xf7 });
        gbc.writeMem(0xeb0a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xeb0a, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xeb0a));
        EXPECT(0x3f, gbc.readMem(0xeb0b));
        // F7 034A
        gbc.setState(0x1ea2, 0xbbc9, 0x2db0, 0x76f7, 0xea3d, 0x317, 0x0, 0x0);
        gbc.writeMem(0x1ea2, { 0xf7 });
        gbc.writeMem(0xbbc7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xbbc7, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xbbc7));
        EXPECT(0x1e, gbc.readMem(0xbbc8));
        // F7 034B
        gbc.setState(0x546, 0xe39b, 0xa600, 0xe134, 0x990f, 0x947f, 0x1, 0x0);
        gbc.writeMem(0x546, { 0xf7 });
        gbc.writeMem(0xe399, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xe399, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xe399));
        EXPECT(0x5, gbc.readMem(0xe39a));
        // F7 034C
        gbc.setState(0x2447, 0xac68, 0xfa30, 0xe386, 0x3e0e, 0xb5c5, 0x1, 0x1);
        gbc.writeMem(0x2447, { 0xf7 });
        gbc.writeMem(0xac66, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xac66, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xac66));
        EXPECT(0x24, gbc.readMem(0xac67));
        // F7 034E
        gbc.setState(0x4bae, 0xbcc3, 0xcc30, 0x8d40, 0x2cb4, 0xadab, 0x0, 0x1);
        gbc.writeMem(0x4bae, { 0xf7 });
        gbc.writeMem(0xbcc1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xbcc1, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0xbcc1));
        EXPECT(0x4b, gbc.readMem(0xbcc2));
        // F7 034F
        gbc.setState(0xa78c, 0xf8b5, 0x7ab0, 0x9620, 0x5f66, 0x4948, 0x0, 0x1);
        gbc.writeMem(0xa78c, { 0xf7 });
        gbc.writeMem(0xf8b3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xf8b3, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xa78c));
        EXPECT(0x8d, gbc.readMem(0xf8b3));
        EXPECT(0xa7, gbc.readMem(0xf8b4));
        // F7 0350
        gbc.setState(0x435, 0xd51a, 0x60, 0x20e0, 0xb5b9, 0x28dd, 0x1, 0x1);
        gbc.writeMem(0x435, { 0xf7 });
        gbc.writeMem(0xd518, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xd518, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xd518));
        EXPECT(0x4, gbc.readMem(0xd519));
        // F7 0353
        gbc.setState(0xa8f0, 0xd085, 0x7cf0, 0x47c2, 0x7dc3, 0x3489, 0x1, 0x0);
        gbc.writeMem(0xa8f0, { 0xf7 });
        gbc.writeMem(0xd083, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xd083, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xa8f0));
        EXPECT(0xf1, gbc.readMem(0xd083));
        EXPECT(0xa8, gbc.readMem(0xd084));
        // F7 0354
        gbc.setState(0x43e4, 0xe6c3, 0xe050, 0xe88b, 0x9e00, 0x8c0, 0x1, 0x0);
        gbc.writeMem(0x43e4, { 0xf7 });
        gbc.writeMem(0xe6c1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xe6c1, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xe6c1));
        EXPECT(0x43, gbc.readMem(0xe6c2));
        // F7 0357
        gbc.setState(0x2358, 0xad41, 0x6070, 0x9575, 0x14ad, 0x9994, 0x0, 0x0);
        gbc.writeMem(0x2358, { 0xf7 });
        gbc.writeMem(0xad3f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xad3f, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0xad3f));
        EXPECT(0x23, gbc.readMem(0xad40));
        // F7 035C
        gbc.setState(0xb471, 0xbda5, 0x680, 0xc9f, 0xd3ab, 0x7642, 0x1, 0x1);
        gbc.writeMem(0xb471, { 0xf7 });
        gbc.writeMem(0xbda3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xbda3, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xb471));
        EXPECT(0x72, gbc.readMem(0xbda3));
        EXPECT(0xb4, gbc.readMem(0xbda4));
        // F7 0360
        gbc.setState(0xc6d5, 0xd003, 0x1e50, 0x9feb, 0xca94, 0x236a, 0x0, 0x0);
        gbc.writeMem(0xc6d5, { 0xf7 });
        gbc.writeMem(0xd001, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xd001, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xc6d5));
        EXPECT(0xd6, gbc.readMem(0xd001));
        EXPECT(0xc6, gbc.readMem(0xd002));
        // F7 0361
        gbc.setState(0x392, 0xba61, 0x8ee0, 0x36a0, 0xdf1, 0x9493, 0x0, 0x0);
        gbc.writeMem(0x392, { 0xf7 });
        gbc.writeMem(0xba5f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xba5f, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xba5f));
        EXPECT(0x3, gbc.readMem(0xba60));
        // F7 0362
        gbc.setState(0x628f, 0xb4d2, 0xcad0, 0xdd2d, 0x5a64, 0x6df, 0x0, 0x1);
        gbc.writeMem(0x628f, { 0xf7 });
        gbc.writeMem(0xb4d0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xb4d0, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xb4d0));
        EXPECT(0x62, gbc.readMem(0xb4d1));
        // F7 0363
        gbc.setState(0x3a17, 0xb955, 0xaca0, 0x37bc, 0xb16e, 0xcbe3, 0x0, 0x0);
        gbc.writeMem(0x3a17, { 0xf7 });
        gbc.writeMem(0xb953, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xb953, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xb953));
        EXPECT(0x3a, gbc.readMem(0xb954));
        // F7 0364
        gbc.setState(0x578d, 0xc57b, 0x65b0, 0x8df5, 0x3394, 0xf190, 0x1, 0x0);
        gbc.writeMem(0x578d, { 0xf7 });
        gbc.writeMem(0xc579, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xc579, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xc579));
        EXPECT(0x57, gbc.readMem(0xc57a));
        // F7 0365
        gbc.setState(0x2fb6, 0xc52c, 0xda50, 0xac1e, 0xa978, 0x998, 0x1, 0x1);
        gbc.writeMem(0x2fb6, { 0xf7 });
        gbc.writeMem(0xc52a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xc52a, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xc52a));
        EXPECT(0x2f, gbc.readMem(0xc52b));
        // F7 0366
        gbc.setState(0xdc60, 0xdc3a, 0xc380, 0xcf03, 0x80b1, 0x5374, 0x1, 0x1);
        gbc.writeMem(0xdc38, { 0x0, 0x0 });
        gbc.writeMem(0xdc60, { 0xf7 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xdc38, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xdc38));
        EXPECT(0xdc, gbc.readMem(0xdc39));
        EXPECT(0xf7, gbc.readMem(0xdc60));
        // F7 0367
        gbc.setState(0x5f77, 0x8d1c, 0x9ff0, 0x11af, 0x9dae, 0x7d38, 0x1, 0x0);
        gbc.writeMem(0x5f77, { 0xf7 });
        gbc.writeMem(0x8d1a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x8d1a, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x8d1a));
        EXPECT(0x5f, gbc.readMem(0x8d1b));
        // F7 036A
        gbc.setState(0x318c, 0xa6df, 0x36a0, 0x5492, 0x12f2, 0xcc22, 0x1, 0x0);
        gbc.writeMem(0x318c, { 0xf7 });
        gbc.writeMem(0xa6dd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xa6dd, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xa6dd));
        EXPECT(0x31, gbc.readMem(0xa6de));
        // F7 0374
        gbc.setState(0xc2b4, 0xfd45, 0x540, 0x14b8, 0xf624, 0x6b7b, 0x0, 0x0);
        gbc.writeMem(0xc2b4, { 0xf7 });
        gbc.writeMem(0xfd43, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xfd43, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xc2b4));
        EXPECT(0xb5, gbc.readMem(0xfd43));
        EXPECT(0xc2, gbc.readMem(0xfd44));
        // F7 0377
        gbc.setState(0x86ab, 0xc1fe, 0x9b10, 0x943f, 0x4d6a, 0xff13, 0x1, 0x0);
        gbc.writeMem(0x86ab, { 0xf7 });
        gbc.writeMem(0xc1fc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xc1fc, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x86ab));
        EXPECT(0xac, gbc.readMem(0xc1fc));
        EXPECT(0x86, gbc.readMem(0xc1fd));
        // F7 037A
        gbc.setState(0x22c, 0xc88c, 0xa280, 0xde7, 0xa633, 0xa252, 0x0, 0x0);
        gbc.writeMem(0x22c, { 0xf7 });
        gbc.writeMem(0xc88a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xc88a, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xc88a));
        EXPECT(0x2, gbc.readMem(0xc88b));
        // F7 037B
        gbc.setState(0x2c28, 0xfdaa, 0x5800, 0xceb, 0x49c8, 0xee4, 0x1, 0x1);
        gbc.writeMem(0x2c28, { 0xf7 });
        gbc.writeMem(0xfda8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xfda8, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xfda8));
        EXPECT(0x2c, gbc.readMem(0xfda9));
        // F7 037C
        gbc.setState(0x8dd3, 0x8909, 0x3960, 0xe6d5, 0x2c28, 0x2384, 0x1, 0x1);
        gbc.writeMem(0x8907, { 0x0, 0x0 });
        gbc.writeMem(0x8dd3, { 0xf7 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x8907, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x8907));
        EXPECT(0x8d, gbc.readMem(0x8908));
        EXPECT(0xf7, gbc.readMem(0x8dd3));
        // F7 037D
        gbc.setState(0xb330, 0x9b91, 0x6eb0, 0x4892, 0x16dc, 0x9661, 0x1, 0x1);
        gbc.writeMem(0x9b8f, { 0x0, 0x0 });
        gbc.writeMem(0xb330, { 0xf7 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x9b8f, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x9b8f));
        EXPECT(0xb3, gbc.readMem(0x9b90));
        EXPECT(0xf7, gbc.readMem(0xb330));
        // F7 0382
        gbc.setState(0xe3c8, 0xc851, 0x33a0, 0x24d6, 0xcfc, 0xe76, 0x0, 0x0);
        gbc.writeMem(0xc84f, { 0x0, 0x0 });
        gbc.writeMem(0xe3c8, { 0xf7 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xc84f, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xc84f));
        EXPECT(0xe3, gbc.readMem(0xc850));
        EXPECT(0xf7, gbc.readMem(0xe3c8));
        // F7 0385
        gbc.setState(0xd891, 0xfd59, 0x49e0, 0x2fd8, 0xa390, 0x2eab, 0x0, 0x0);
        gbc.writeMem(0xd891, { 0xf7 });
        gbc.writeMem(0xfd57, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xfd57, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xd891));
        EXPECT(0x92, gbc.readMem(0xfd57));
        EXPECT(0xd8, gbc.readMem(0xfd58));
        // F7 0386
        gbc.setState(0x76b8, 0x8e09, 0xb4d0, 0xaccc, 0x6e7d, 0x9df1, 0x0, 0x1);
        gbc.writeMem(0x76b8, { 0xf7 });
        gbc.writeMem(0x8e07, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x8e07, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x8e07));
        EXPECT(0x76, gbc.readMem(0x8e08));
        // F7 038A
        gbc.setState(0x43b6, 0xf01c, 0xd5e0, 0x2759, 0xa59e, 0xfcc0, 0x0, 0x1);
        gbc.writeMem(0x43b6, { 0xf7 });
        gbc.writeMem(0xf01a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xf01a, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xf01a));
        EXPECT(0x43, gbc.readMem(0xf01b));
        // F7 038C
        gbc.setState(0x64d5, 0xd2b2, 0xe980, 0x6f7b, 0xca71, 0xcfd0, 0x1, 0x1);
        gbc.writeMem(0x64d5, { 0xf7 });
        gbc.writeMem(0xd2b0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xd2b0, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xd2b0));
        EXPECT(0x64, gbc.readMem(0xd2b1));
        // F7 038D
        gbc.setState(0x74e3, 0xe49e, 0x5230, 0xcabd, 0x736f, 0xb65a, 0x0, 0x0);
        gbc.writeMem(0x74e3, { 0xf7 });
        gbc.writeMem(0xe49c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xe49c, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0xe49c));
        EXPECT(0x74, gbc.readMem(0xe49d));
        // F7 038E
        gbc.setState(0xd8ac, 0xbf9f, 0xfce0, 0x6bd4, 0xbeea, 0x62f8, 0x0, 0x1);
        gbc.writeMem(0xbf9d, { 0x0, 0x0 });
        gbc.writeMem(0xd8ac, { 0xf7 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xbf9d, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xbf9d));
        EXPECT(0xd8, gbc.readMem(0xbf9e));
        EXPECT(0xf7, gbc.readMem(0xd8ac));
        // F7 0391
        gbc.setState(0xee72, 0xcc20, 0x4020, 0x8114, 0x9536, 0x8b6b, 0x0, 0x0);
        gbc.writeMem(0xcc1e, { 0x0, 0x0 });
        gbc.writeMem(0xee72, { 0xf7 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xcc1e, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xcc1e));
        EXPECT(0xee, gbc.readMem(0xcc1f));
        EXPECT(0xf7, gbc.readMem(0xee72));
        // F7 0392
        gbc.setState(0xc5db, 0x80e5, 0x3bc0, 0x1f10, 0xe21f, 0x81a5, 0x0, 0x1);
        gbc.writeMem(0x80e3, { 0x0, 0x0 });
        gbc.writeMem(0xc5db, { 0xf7 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x80e3, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0x80e3));
        EXPECT(0xc5, gbc.readMem(0x80e4));
        EXPECT(0xf7, gbc.readMem(0xc5db));
        // F7 0395
        gbc.setState(0x7714, 0xff76, 0x6b00, 0xf1a0, 0x8051, 0x554f, 0x1, 0x0);
        gbc.writeMem(0x7714, { 0xf7 });
        gbc.writeMem(0xff74, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xff74, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xff74));
        EXPECT(0x77, gbc.readMem(0xff75));
        // F7 0399
        gbc.setState(0xeff8, 0xb4a2, 0xbfc0, 0x775f, 0xa1cd, 0x46c4, 0x1, 0x1);
        gbc.writeMem(0xb4a0, { 0x0, 0x0 });
        gbc.writeMem(0xeff8, { 0xf7 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xb4a0, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0xb4a0));
        EXPECT(0xef, gbc.readMem(0xb4a1));
        EXPECT(0xf7, gbc.readMem(0xeff8));
        // F7 039E
        gbc.setState(0x5587, 0xefac, 0x6220, 0x6da4, 0x6a7f, 0xf035, 0x0, 0x0);
        gbc.writeMem(0x5587, { 0xf7 });
        gbc.writeMem(0xefaa, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xefaa, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xefaa));
        EXPECT(0x55, gbc.readMem(0xefab));
        // F7 03A0
        gbc.setState(0x1cea, 0xa44e, 0xf710, 0xdb67, 0xc5e0, 0xed5f, 0x0, 0x0);
        gbc.writeMem(0x1cea, { 0xf7 });
        gbc.writeMem(0xa44c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xa44c, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0xa44c));
        EXPECT(0x1c, gbc.readMem(0xa44d));
        // F7 03A4
        gbc.setState(0x8fd6, 0xc09a, 0x7070, 0xc968, 0x55f5, 0x87aa, 0x0, 0x0);
        gbc.writeMem(0x8fd6, { 0xf7 });
        gbc.writeMem(0xc098, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xc098, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x8fd6));
        EXPECT(0xd7, gbc.readMem(0xc098));
        EXPECT(0x8f, gbc.readMem(0xc099));
        // F7 03A6
        gbc.setState(0xd363, 0x9d94, 0x490, 0x9868, 0x3f41, 0xe84d, 0x0, 0x1);
        gbc.writeMem(0x9d92, { 0x0, 0x0 });
        gbc.writeMem(0xd363, { 0xf7 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x9d92, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x9d92));
        EXPECT(0xd3, gbc.readMem(0x9d93));
        EXPECT(0xf7, gbc.readMem(0xd363));
        // F7 03A8
        gbc.setState(0x3c62, 0x8fbf, 0x7d0, 0x27a0, 0xa2d3, 0x792e, 0x0, 0x0);
        gbc.writeMem(0x3c62, { 0xf7 });
        gbc.writeMem(0x8fbd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x8fbd, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0x8fbd));
        EXPECT(0x3c, gbc.readMem(0x8fbe));
        // F7 03A9
        gbc.setState(0x525b, 0xa39c, 0x1de0, 0x377, 0x30ae, 0x1871, 0x0, 0x1);
        gbc.writeMem(0x525b, { 0xf7 });
        gbc.writeMem(0xa39a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xa39a, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xa39a));
        EXPECT(0x52, gbc.readMem(0xa39b));
        // F7 03AA
        gbc.setState(0xace6, 0x86c9, 0x96e0, 0x5fe9, 0x6232, 0xf585, 0x1, 0x0);
        gbc.writeMem(0x86c7, { 0x0, 0x0 });
        gbc.writeMem(0xace6, { 0xf7 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x86c7, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x86c7));
        EXPECT(0xac, gbc.readMem(0x86c8));
        EXPECT(0xf7, gbc.readMem(0xace6));
        // F7 03AB
        gbc.setState(0x4f0, 0x847a, 0x39e0, 0xa406, 0x9b12, 0x1408, 0x0, 0x1);
        gbc.writeMem(0x4f0, { 0xf7 });
        gbc.writeMem(0x8478, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x8478, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x8478));
        EXPECT(0x4, gbc.readMem(0x8479));
        // F7 03AD
        gbc.setState(0xa39e, 0xf1fe, 0xf200, 0x5fd0, 0x6750, 0x5c4b, 0x1, 0x1);
        gbc.writeMem(0xa39e, { 0xf7 });
        gbc.writeMem(0xf1fc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xf1fc, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xa39e));
        EXPECT(0x9f, gbc.readMem(0xf1fc));
        EXPECT(0xa3, gbc.readMem(0xf1fd));
        // F7 03B3
        gbc.setState(0x6472, 0xf92f, 0xf910, 0x822, 0x4f0f, 0x9263, 0x0, 0x0);
        gbc.writeMem(0x6472, { 0xf7 });
        gbc.writeMem(0xf92d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xf92d, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xf92d));
        EXPECT(0x64, gbc.readMem(0xf92e));
        // F7 03B4
        gbc.setState(0x185, 0xc2af, 0x9970, 0x6615, 0xef4d, 0xf0f3, 0x0, 0x0);
        gbc.writeMem(0x185, { 0xf7 });
        gbc.writeMem(0xc2ad, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xc2ad, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xc2ad));
        EXPECT(0x1, gbc.readMem(0xc2ae));
        // F7 03B6
        gbc.setState(0x99e3, 0xc4f3, 0xd430, 0xc7ea, 0xb459, 0x3372, 0x1, 0x1);
        gbc.writeMem(0x99e3, { 0xf7 });
        gbc.writeMem(0xc4f1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xc4f1, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x99e3));
        EXPECT(0xe4, gbc.readMem(0xc4f1));
        EXPECT(0x99, gbc.readMem(0xc4f2));
        // F7 03B8
        gbc.setState(0xd810, 0x917f, 0x2240, 0x3380, 0xbfd8, 0xf493, 0x1, 0x1);
        gbc.writeMem(0x917d, { 0x0, 0x0 });
        gbc.writeMem(0xd810, { 0xf7 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x917d, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x917d));
        EXPECT(0xd8, gbc.readMem(0x917e));
        EXPECT(0xf7, gbc.readMem(0xd810));
        // F7 03BC
        gbc.setState(0x8dc7, 0x8780, 0xd4e0, 0x741f, 0x4e56, 0x8b81, 0x1, 0x0);
        gbc.writeMem(0x877e, { 0x0, 0x0 });
        gbc.writeMem(0x8dc7, { 0xf7 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x877e, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x877e));
        EXPECT(0x8d, gbc.readMem(0x877f));
        EXPECT(0xf7, gbc.readMem(0x8dc7));
        // F7 03BD
        gbc.setState(0x6e08, 0xbd74, 0x6560, 0x192c, 0xb8e8, 0x6682, 0x0, 0x1);
        gbc.writeMem(0x6e08, { 0xf7 });
        gbc.writeMem(0xbd72, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xbd72, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xbd72));
        EXPECT(0x6e, gbc.readMem(0xbd73));
        // F7 03BE
        gbc.setState(0x1879, 0xb406, 0xd560, 0x15f, 0x4d4f, 0x1e7, 0x0, 0x1);
        gbc.writeMem(0x1879, { 0xf7 });
        gbc.writeMem(0xb404, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xb404, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xb404));
        EXPECT(0x18, gbc.readMem(0xb405));
        // F7 03BF
        gbc.setState(0x778a, 0xc0e5, 0x7bc0, 0xf353, 0xc7c1, 0x283b, 0x1, 0x1);
        gbc.writeMem(0x778a, { 0xf7 });
        gbc.writeMem(0xc0e3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc0e3, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xc0e3));
        EXPECT(0x77, gbc.readMem(0xc0e4));
        // F7 03C1
        gbc.setState(0x7d7, 0xbdf0, 0xd700, 0x5ee3, 0x9cde, 0x55c6, 0x1, 0x1);
        gbc.writeMem(0x7d7, { 0xf7 });
        gbc.writeMem(0xbdee, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xbdee, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xbdee));
        EXPECT(0x7, gbc.readMem(0xbdef));
        // F7 03C3
        gbc.setState(0xa76e, 0xf39f, 0x2ba0, 0xdad, 0x15e7, 0xd500, 0x0, 0x0);
        gbc.writeMem(0xa76e, { 0xf7 });
        gbc.writeMem(0xf39d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xf39d, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xa76e));
        EXPECT(0x6f, gbc.readMem(0xf39d));
        EXPECT(0xa7, gbc.readMem(0xf39e));
        // F7 03C6
        gbc.setState(0x922f, 0x92ea, 0x5440, 0x100b, 0x7c1d, 0xc3ee, 0x1, 0x1);
        gbc.writeMem(0x922f, { 0xf7 });
        gbc.writeMem(0x92e8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x92e8, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x922f));
        EXPECT(0x30, gbc.readMem(0x92e8));
        EXPECT(0x92, gbc.readMem(0x92e9));
        // F7 03C7
        gbc.setState(0x8b9e, 0xc9e7, 0x14c0, 0x7c5b, 0xa75a, 0xb4a4, 0x1, 0x1);
        gbc.writeMem(0x8b9e, { 0xf7 });
        gbc.writeMem(0xc9e5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xc9e5, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x8b9e));
        EXPECT(0x9f, gbc.readMem(0xc9e5));
        EXPECT(0x8b, gbc.readMem(0xc9e6));
        // F7 03CB
        gbc.setState(0xde15, 0xe905, 0x20d0, 0x10d1, 0xf472, 0x98ee, 0x1, 0x0);
        gbc.writeMem(0xde15, { 0xf7 });
        gbc.writeMem(0xe903, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xe903, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xde15));
        EXPECT(0x16, gbc.readMem(0xe903));
        EXPECT(0xde, gbc.readMem(0xe904));
        // F7 03CC
        gbc.setState(0x35a3, 0x8a61, 0x2950, 0x3b37, 0x6328, 0x1d60, 0x0, 0x1);
        gbc.writeMem(0x35a3, { 0xf7 });
        gbc.writeMem(0x8a5f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x8a5f, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x8a5f));
        EXPECT(0x35, gbc.readMem(0x8a60));
        // F7 03CE
        gbc.setState(0x9809, 0xad28, 0x7c80, 0x2a65, 0xbd49, 0xfafc, 0x0, 0x0);
        gbc.writeMem(0x9809, { 0xf7 });
        gbc.writeMem(0xad26, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xad26, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x9809));
        EXPECT(0xa, gbc.readMem(0xad26));
        EXPECT(0x98, gbc.readMem(0xad27));
        // F7 03CF
        gbc.setState(0xe442, 0xeed3, 0x36b0, 0x1153, 0x6676, 0xdf58, 0x0, 0x0);
        gbc.writeMem(0xe442, { 0xf7 });
        gbc.writeMem(0xeed1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xeed1, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xe442));
        EXPECT(0x43, gbc.readMem(0xeed1));
        EXPECT(0xe4, gbc.readMem(0xeed2));
        // F7 03D1
        gbc.setState(0xa799, 0x8222, 0x2b10, 0x2875, 0x2194, 0x10d8, 0x1, 0x1);
        gbc.writeMem(0x8220, { 0x0, 0x0 });
        gbc.writeMem(0xa799, { 0xf7 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x8220, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x8220));
        EXPECT(0xa7, gbc.readMem(0x8221));
        EXPECT(0xf7, gbc.readMem(0xa799));
        // F7 03D3
        gbc.setState(0x8363, 0xf90f, 0x75e0, 0xeac2, 0x1fcf, 0xfbf4, 0x1, 0x1);
        gbc.writeMem(0x8363, { 0xf7 });
        gbc.writeMem(0xf90d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xf90d, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x8363));
        EXPECT(0x64, gbc.readMem(0xf90d));
        EXPECT(0x83, gbc.readMem(0xf90e));
        // F7 03D4
        gbc.setState(0x4c67, 0x8d26, 0x7180, 0x4057, 0x356b, 0x3c0b, 0x0, 0x1);
        gbc.writeMem(0x4c67, { 0xf7 });
        gbc.writeMem(0x8d24, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x8d24, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x8d24));
        EXPECT(0x4c, gbc.readMem(0x8d25));
        // F7 03D5
        gbc.setState(0xeca8, 0xca4f, 0x1ab0, 0x1732, 0x4d94, 0x4ace, 0x0, 0x1);
        gbc.writeMem(0xca4d, { 0x0, 0x0 });
        gbc.writeMem(0xeca8, { 0xf7 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xca4d, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0xca4d));
        EXPECT(0xec, gbc.readMem(0xca4e));
        EXPECT(0xf7, gbc.readMem(0xeca8));
        // F7 03D8
        gbc.setState(0x440d, 0x9166, 0xb620, 0x3ae4, 0xad36, 0xe887, 0x0, 0x0);
        gbc.writeMem(0x440d, { 0xf7 });
        gbc.writeMem(0x9164, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x9164, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x9164));
        EXPECT(0x44, gbc.readMem(0x9165));
        // F7 03D9
        gbc.setState(0xeb40, 0xeb56, 0xd410, 0xe628, 0x9f0c, 0x1772, 0x1, 0x1);
        gbc.writeMem(0xeb40, { 0xf7 });
        gbc.writeMem(0xeb54, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xeb54, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xeb40));
        EXPECT(0x41, gbc.readMem(0xeb54));
        EXPECT(0xeb, gbc.readMem(0xeb55));
        // F7 03DA
        gbc.setState(0x919d, 0xfe7f, 0x8ec0, 0x1b1c, 0xc7ee, 0x42f8, 0x0, 0x0);
        gbc.writeMem(0x919d, { 0xf7 });
        gbc.writeMem(0xfe7d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xfe7d, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x919d));
        EXPECT(0x9e, gbc.readMem(0xfe7d));
        EXPECT(0x91, gbc.readMem(0xfe7e));
        // F7 03DB
        gbc.setState(0x729c, 0xf39a, 0x80e0, 0xb370, 0xf221, 0x6832, 0x0, 0x0);
        gbc.writeMem(0x729c, { 0xf7 });
        gbc.writeMem(0xf398, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xf398, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xf398));
        EXPECT(0x72, gbc.readMem(0xf399));
        // F7 03DC
        gbc.setState(0x6a1, 0xcc97, 0xd100, 0xca5a, 0xb918, 0x2516, 0x1, 0x0);
        gbc.writeMem(0x6a1, { 0xf7 });
        gbc.writeMem(0xcc95, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xcc95, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xcc95));
        EXPECT(0x6, gbc.readMem(0xcc96));
        // F7 03DE
        gbc.setState(0xde1a, 0xb8a5, 0xcc60, 0x840c, 0x1f63, 0x1d8a, 0x1, 0x0);
        gbc.writeMem(0xb8a3, { 0x0, 0x0 });
        gbc.writeMem(0xde1a, { 0xf7 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xb8a3, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xb8a3));
        EXPECT(0xde, gbc.readMem(0xb8a4));
        EXPECT(0xf7, gbc.readMem(0xde1a));
        // F7 03E0
        gbc.setState(0x8d95, 0xd816, 0x2dd0, 0x7282, 0x7894, 0x4247, 0x1, 0x1);
        gbc.writeMem(0x8d95, { 0xf7 });
        gbc.writeMem(0xd814, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xd814, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x8d95));
        EXPECT(0x96, gbc.readMem(0xd814));
        EXPECT(0x8d, gbc.readMem(0xd815));
        // F7 03E1
        gbc.setState(0x26d0, 0x96ff, 0x9360, 0xe67a, 0xf0d6, 0xcf56, 0x1, 0x1);
        gbc.writeMem(0x26d0, { 0xf7 });
        gbc.writeMem(0x96fd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x96fd, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0x96fd));
        EXPECT(0x26, gbc.readMem(0x96fe));
        // F7 03E2
        gbc.setState(0x5692, 0x8de9, 0x7f50, 0x2f6c, 0xc17e, 0x5315, 0x1, 0x1);
        gbc.writeMem(0x5692, { 0xf7 });
        gbc.writeMem(0x8de7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x8de7, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x8de7));
        EXPECT(0x56, gbc.readMem(0x8de8));
        // F7 03E5
        gbc.setState(0xaa3, 0x83d4, 0x37a0, 0xe037, 0x86ae, 0x7b06, 0x1, 0x1);
        gbc.writeMem(0xaa3, { 0xf7 });
        gbc.writeMem(0x83d2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x83d2, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x83d2));
        EXPECT(0xa, gbc.readMem(0x83d3));
    }
