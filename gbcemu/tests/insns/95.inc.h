    TEST(gbcemu, opcode_95) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 95 0000
        gbc.setState(0xa197, 0xf92f, 0x89a0, 0x5fbf, 0xcd54, 0x5a14, 0x1, 0x0);
        gbc.writeMem(0xa197, { 0x95 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xf92f, gbc.sp());
        EXPECT(0xa198, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xa197));
        // 95 0001
        gbc.setState(0x7dce, 0x4aed, 0x9ce0, 0x91f0, 0xc92b, 0x2314, 0x1, 0x1);
        gbc.writeMem(0x7dce, { 0x95 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x4aed, gbc.sp());
        EXPECT(0x7dcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0002
        gbc.setState(0x89ba, 0xc418, 0x9dc0, 0x7452, 0x1f88, 0x3698, 0x0, 0x1);
        gbc.writeMem(0x89ba, { 0x95 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xc418, gbc.sp());
        EXPECT(0x89bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x89ba));
        // 95 0003
        gbc.setState(0xc7bb, 0x4988, 0xfe40, 0x41a8, 0x335b, 0x4f80, 0x0, 0x0);
        gbc.writeMem(0xc7bb, { 0x95 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x4988, gbc.sp());
        EXPECT(0xc7bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xc7bb));
        // 95 0004
        gbc.setState(0xec66, 0xde3e, 0xa730, 0x4f15, 0xdb50, 0x2818, 0x1, 0x1);
        gbc.writeMem(0xec66, { 0x95 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xde3e, gbc.sp());
        EXPECT(0xec67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xec66));
        // 95 0005
        gbc.setState(0xb5dc, 0x7a94, 0x3910, 0xc25e, 0xa870, 0x7973, 0x1, 0x0);
        gbc.writeMem(0xb5dc, { 0x95 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x7a94, gbc.sp());
        EXPECT(0xb5dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xb5dc));
        // 95 0006
        gbc.setState(0x7d79, 0x3cb0, 0x3ee0, 0xf588, 0x651, 0xb235, 0x0, 0x0);
        gbc.writeMem(0x7d79, { 0x95 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x3cb0, gbc.sp());
        EXPECT(0x7d7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0007
        gbc.setState(0xeb10, 0x2188, 0x2290, 0xc96b, 0x1e62, 0x3bd6, 0x1, 0x1);
        gbc.writeMem(0xeb10, { 0x95 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x2188, gbc.sp());
        EXPECT(0xeb11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xeb10));
        // 95 0008
        gbc.setState(0xd876, 0x9c13, 0x7c50, 0x64a1, 0x859d, 0x48a6, 0x0, 0x0);
        gbc.writeMem(0xd876, { 0x95 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x9c13, gbc.sp());
        EXPECT(0xd877, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xd876));
        // 95 0009
        gbc.setState(0xc539, 0x20, 0xfac0, 0x6485, 0xdeb5, 0xf6a8, 0x0, 0x0);
        gbc.writeMem(0xc539, { 0x95 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x20, gbc.sp());
        EXPECT(0xc53a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xc539));
        // 95 000A
        gbc.setState(0x688f, 0xd6ee, 0x1460, 0x547e, 0x53ce, 0x7d60, 0x1, 0x1);
        gbc.writeMem(0x688f, { 0x95 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xd6ee, gbc.sp());
        EXPECT(0x6890, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 000B
        gbc.setState(0xb358, 0xe0e2, 0x5080, 0x9bd4, 0x286, 0x558e, 0x0, 0x1);
        gbc.writeMem(0xb358, { 0x95 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xe0e2, gbc.sp());
        EXPECT(0xb359, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xb358));
        // 95 000C
        gbc.setState(0xb489, 0x830f, 0xd90, 0x2735, 0x8b6e, 0xa284, 0x0, 0x0);
        gbc.writeMem(0xb489, { 0x95 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x830f, gbc.sp());
        EXPECT(0xb48a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xb489));
        // 95 000D
        gbc.setState(0xd8c1, 0xb119, 0x2eb0, 0x509d, 0x8fc8, 0x9b2b, 0x0, 0x0);
        gbc.writeMem(0xd8c1, { 0x95 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xb119, gbc.sp());
        EXPECT(0xd8c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xd8c1));
        // 95 000E
        gbc.setState(0x4e15, 0x6ec8, 0xb0e0, 0xfca1, 0xcfc6, 0xc65c, 0x1, 0x0);
        gbc.writeMem(0x4e15, { 0x95 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x6ec8, gbc.sp());
        EXPECT(0x4e16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 000F
        gbc.setState(0xad8e, 0xb30c, 0xe8a0, 0x8776, 0xbced, 0x9b00, 0x1, 0x1);
        gbc.writeMem(0xad8e, { 0x95 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xb30c, gbc.sp());
        EXPECT(0xad8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xad8e));
        // 95 0010
        gbc.setState(0xc1d3, 0x7028, 0x1b10, 0x226e, 0xb421, 0x93db, 0x1, 0x1);
        gbc.writeMem(0xc1d3, { 0x95 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x7028, gbc.sp());
        EXPECT(0xc1d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xc1d3));
        // 95 0011
        gbc.setState(0x7426, 0xd4e8, 0x7be0, 0xd4a5, 0xf9d7, 0x2342, 0x1, 0x1);
        gbc.writeMem(0x7426, { 0x95 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xd4e8, gbc.sp());
        EXPECT(0x7427, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0013
        gbc.setState(0xd5b9, 0x4057, 0x9c0, 0x9a13, 0xc0ce, 0x2611, 0x1, 0x1);
        gbc.writeMem(0xd5b9, { 0x95 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x4057, gbc.sp());
        EXPECT(0xd5ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xd5b9));
        // 95 0014
        gbc.setState(0x565d, 0x34bc, 0xcd20, 0x7ad9, 0x672e, 0xf6af, 0x0, 0x1);
        gbc.writeMem(0x565d, { 0x95 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x34bc, gbc.sp());
        EXPECT(0x565e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0015
        gbc.setState(0x7428, 0x4810, 0x2430, 0x9e5b, 0x95d6, 0xd206, 0x0, 0x1);
        gbc.writeMem(0x7428, { 0x95 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x4810, gbc.sp());
        EXPECT(0x7429, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0016
        gbc.setState(0xdc45, 0xbb63, 0x9160, 0x23e0, 0x6fb5, 0xdfa0, 0x0, 0x1);
        gbc.writeMem(0xdc45, { 0x95 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xbb63, gbc.sp());
        EXPECT(0xdc46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xdc45));
        // 95 0017
        gbc.setState(0x522d, 0xde43, 0x7030, 0xe055, 0x6eae, 0xd753, 0x0, 0x0);
        gbc.writeMem(0x522d, { 0x95 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xde43, gbc.sp());
        EXPECT(0x522e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0018
        gbc.setState(0xece, 0x7ef5, 0x64d0, 0xb0bf, 0x72e2, 0xc029, 0x0, 0x1);
        gbc.writeMem(0xece, { 0x95 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x7ef5, gbc.sp());
        EXPECT(0xecf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0019
        gbc.setState(0xc97a, 0xaf5b, 0xae00, 0x21a7, 0xf9ee, 0x1bb1, 0x1, 0x1);
        gbc.writeMem(0xc97a, { 0x95 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xaf5b, gbc.sp());
        EXPECT(0xc97b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xc97a));
        // 95 001A
        gbc.setState(0x72e6, 0x68ad, 0x9b20, 0x9ff0, 0x8656, 0xae0b, 0x0, 0x0);
        gbc.writeMem(0x72e6, { 0x95 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x68ad, gbc.sp());
        EXPECT(0x72e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 001B
        gbc.setState(0xbc4f, 0xbee7, 0xbac0, 0x355d, 0x6eea, 0xf76b, 0x1, 0x0);
        gbc.writeMem(0xbc4f, { 0x95 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xbee7, gbc.sp());
        EXPECT(0xbc50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xbc4f));
        // 95 001C
        gbc.setState(0x39a1, 0xa2da, 0xabf0, 0xcd2a, 0xe248, 0x9b0e, 0x0, 0x0);
        gbc.writeMem(0x39a1, { 0x95 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xa2da, gbc.sp());
        EXPECT(0x39a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 001D
        gbc.setState(0x8386, 0xdae3, 0x2d90, 0x3bc0, 0x164c, 0x769c, 0x1, 0x1);
        gbc.writeMem(0x8386, { 0x95 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xdae3, gbc.sp());
        EXPECT(0x8387, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x8386));
        // 95 0020
        gbc.setState(0x9b76, 0x5e6, 0x61d0, 0x5c93, 0xa1f3, 0xce3f, 0x1, 0x1);
        gbc.writeMem(0x9b76, { 0x95 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x5e6, gbc.sp());
        EXPECT(0x9b77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x9b76));
        // 95 0021
        gbc.setState(0xc96c, 0x45f1, 0x2e60, 0x3257, 0x9184, 0xfae7, 0x1, 0x1);
        gbc.writeMem(0xc96c, { 0x95 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x45f1, gbc.sp());
        EXPECT(0xc96d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xc96c));
        // 95 0022
        gbc.setState(0xe40c, 0x50cf, 0x1950, 0xdb6, 0xd12, 0x7b2a, 0x1, 0x0);
        gbc.writeMem(0xe40c, { 0x95 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x50cf, gbc.sp());
        EXPECT(0xe40d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xe40c));
        // 95 0023
        gbc.setState(0x9a4a, 0x6af3, 0x6dc0, 0x4df9, 0xdcb4, 0xb1b1, 0x0, 0x0);
        gbc.writeMem(0x9a4a, { 0x95 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x6af3, gbc.sp());
        EXPECT(0x9a4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x9a4a));
        // 95 0024
        gbc.setState(0x68cc, 0x15a4, 0x15f0, 0x7e24, 0x1f8e, 0xcebc, 0x0, 0x0);
        gbc.writeMem(0x68cc, { 0x95 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x15a4, gbc.sp());
        EXPECT(0x68cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0025
        gbc.setState(0x63c6, 0xe1fb, 0x46d0, 0x8c6, 0xadf3, 0x6d75, 0x1, 0x1);
        gbc.writeMem(0x63c6, { 0x95 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xe1fb, gbc.sp());
        EXPECT(0x63c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0026
        gbc.setState(0x87ae, 0x6d2c, 0xf2d0, 0x65a3, 0x2d7d, 0x4ea0, 0x0, 0x0);
        gbc.writeMem(0x87ae, { 0x95 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x6d2c, gbc.sp());
        EXPECT(0x87af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x87ae));
        // 95 0027
        gbc.setState(0xc47f, 0x6586, 0x6ee0, 0x97dc, 0x50cd, 0x37e1, 0x0, 0x1);
        gbc.writeMem(0xc47f, { 0x95 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x6586, gbc.sp());
        EXPECT(0xc480, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xc47f));
        // 95 0028
        gbc.setState(0xedd4, 0x3a60, 0xb30, 0x6132, 0x86b9, 0x5648, 0x1, 0x1);
        gbc.writeMem(0xedd4, { 0x95 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x3a60, gbc.sp());
        EXPECT(0xedd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xedd4));
        // 95 0029
        gbc.setState(0x7672, 0x60a9, 0x64f0, 0x88d3, 0xcf91, 0x9561, 0x1, 0x1);
        gbc.writeMem(0x7672, { 0x95 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x60a9, gbc.sp());
        EXPECT(0x7673, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 002A
        gbc.setState(0xc6b7, 0xde4e, 0x4230, 0x60ca, 0xe4c1, 0x87c0, 0x1, 0x1);
        gbc.writeMem(0xc6b7, { 0x95 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xde4e, gbc.sp());
        EXPECT(0xc6b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xc6b7));
        // 95 002B
        gbc.setState(0x15be, 0xe310, 0x3970, 0xc105, 0x4c51, 0xe9fe, 0x0, 0x1);
        gbc.writeMem(0x15be, { 0x95 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xe310, gbc.sp());
        EXPECT(0x15bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 002C
        gbc.setState(0x5399, 0x79ef, 0xc980, 0x783, 0x310d, 0xb906, 0x1, 0x0);
        gbc.writeMem(0x5399, { 0x95 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x79ef, gbc.sp());
        EXPECT(0x539a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 002D
        gbc.setState(0x13c3, 0xdf95, 0x1960, 0x1c22, 0x75ad, 0x8fc0, 0x1, 0x0);
        gbc.writeMem(0x13c3, { 0x95 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xdf95, gbc.sp());
        EXPECT(0x13c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 002E
        gbc.setState(0x50a6, 0x7f, 0x45e0, 0xdf11, 0xef1c, 0x8c7b, 0x0, 0x0);
        gbc.writeMem(0x50a6, { 0x95 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x7f, gbc.sp());
        EXPECT(0x50a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 002F
        gbc.setState(0xb1b7, 0x2b47, 0xf690, 0x8d9, 0x7224, 0x17d5, 0x1, 0x0);
        gbc.writeMem(0xb1b7, { 0x95 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2b47, gbc.sp());
        EXPECT(0xb1b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xb1b7));
        // 95 0030
        gbc.setState(0xdeed, 0xaf40, 0x3490, 0xded7, 0xb030, 0xed88, 0x0, 0x1);
        gbc.writeMem(0xdeed, { 0x95 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xaf40, gbc.sp());
        EXPECT(0xdeee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xdeed));
        // 95 0031
        gbc.setState(0x29b1, 0x764e, 0xb800, 0xb6db, 0x5770, 0x44c9, 0x1, 0x0);
        gbc.writeMem(0x29b1, { 0x95 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x764e, gbc.sp());
        EXPECT(0x29b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0032
        gbc.setState(0x2890, 0x4cc2, 0xdfc0, 0x7165, 0x557f, 0xcc80, 0x1, 0x0);
        gbc.writeMem(0x2890, { 0x95 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x4cc2, gbc.sp());
        EXPECT(0x2891, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0033
        gbc.setState(0x6c16, 0xfe2c, 0x7e30, 0xe24a, 0x66cd, 0x7f8a, 0x1, 0x0);
        gbc.writeMem(0x6c16, { 0x95 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xfe2c, gbc.sp());
        EXPECT(0x6c17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0034
        gbc.setState(0x1320, 0xd762, 0x6320, 0x61af, 0x8647, 0x89d1, 0x0, 0x0);
        gbc.writeMem(0x1320, { 0x95 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xd762, gbc.sp());
        EXPECT(0x1321, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0035
        gbc.setState(0x4023, 0xeeeb, 0x32a0, 0xc1cf, 0xac7f, 0x8405, 0x1, 0x1);
        gbc.writeMem(0x4023, { 0x95 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xeeeb, gbc.sp());
        EXPECT(0x4024, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0036
        gbc.setState(0x9706, 0xf761, 0x1ae0, 0xe937, 0x4a01, 0xa668, 0x1, 0x0);
        gbc.writeMem(0x9706, { 0x95 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xf761, gbc.sp());
        EXPECT(0x9707, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x9706));
        // 95 0038
        gbc.setState(0x4d40, 0x6faf, 0x6a30, 0x6641, 0x58d9, 0xef7f, 0x0, 0x0);
        gbc.writeMem(0x4d40, { 0x95 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x6faf, gbc.sp());
        EXPECT(0x4d41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0039
        gbc.setState(0xecd7, 0x3b3, 0x3710, 0x7fdf, 0x612e, 0xb651, 0x1, 0x0);
        gbc.writeMem(0xecd7, { 0x95 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x3b3, gbc.sp());
        EXPECT(0xecd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xecd7));
        // 95 003A
        gbc.setState(0x6d84, 0xdd11, 0x1960, 0x4160, 0x6ac4, 0x997e, 0x1, 0x0);
        gbc.writeMem(0x6d84, { 0x95 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xdd11, gbc.sp());
        EXPECT(0x6d85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 003B
        gbc.setState(0xc54e, 0x5c67, 0xf350, 0xac7f, 0x73b1, 0x5167, 0x1, 0x0);
        gbc.writeMem(0xc54e, { 0x95 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x5c67, gbc.sp());
        EXPECT(0xc54f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xc54e));
        // 95 003C
        gbc.setState(0x761f, 0x1a2c, 0xaeb0, 0x49e0, 0xf113, 0x836f, 0x1, 0x0);
        gbc.writeMem(0x761f, { 0x95 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x1a2c, gbc.sp());
        EXPECT(0x7620, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 003E
        gbc.setState(0x887d, 0xba50, 0x6050, 0x8d68, 0xbdd5, 0x3fe, 0x1, 0x0);
        gbc.writeMem(0x887d, { 0x95 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xba50, gbc.sp());
        EXPECT(0x887e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x887d));
        // 95 003F
        gbc.setState(0x48, 0x533, 0xb0a0, 0x531a, 0xddf8, 0x3940, 0x0, 0x0);
        gbc.writeMem(0x48, { 0x95 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x533, gbc.sp());
        EXPECT(0x49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0040
        gbc.setState(0x60ba, 0x6d19, 0xe190, 0x2bdf, 0xd7d1, 0xe630, 0x1, 0x0);
        gbc.writeMem(0x60ba, { 0x95 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x6d19, gbc.sp());
        EXPECT(0x60bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0041
        gbc.setState(0x9980, 0x9bf2, 0xd3b0, 0xfaa2, 0xa6db, 0xeedc, 0x0, 0x0);
        gbc.writeMem(0x9980, { 0x95 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x9bf2, gbc.sp());
        EXPECT(0x9981, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x9980));
        // 95 0042
        gbc.setState(0x6dd3, 0xa5fb, 0xb2d0, 0xd2c7, 0x9506, 0xffb3, 0x1, 0x0);
        gbc.writeMem(0x6dd3, { 0x95 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xa5fb, gbc.sp());
        EXPECT(0x6dd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0043
        gbc.setState(0x29a9, 0xfbe3, 0x3ce0, 0xfdc3, 0xf356, 0x9ea3, 0x1, 0x1);
        gbc.writeMem(0x29a9, { 0x95 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xfbe3, gbc.sp());
        EXPECT(0x29aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0044
        gbc.setState(0xc68f, 0x6e5f, 0x22b0, 0xdb58, 0x558e, 0xabf2, 0x0, 0x0);
        gbc.writeMem(0xc68f, { 0x95 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x6e5f, gbc.sp());
        EXPECT(0xc690, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xc68f));
        // 95 0045
        gbc.setState(0x5d38, 0xf25f, 0x1030, 0xf62a, 0xfe16, 0xc90c, 0x0, 0x1);
        gbc.writeMem(0x5d38, { 0x95 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xf25f, gbc.sp());
        EXPECT(0x5d39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0046
        gbc.setState(0x5b2, 0x7a6f, 0xbb20, 0x6f68, 0x47d2, 0x7017, 0x1, 0x0);
        gbc.writeMem(0x5b2, { 0x95 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x7a6f, gbc.sp());
        EXPECT(0x5b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0047
        gbc.setState(0x5208, 0x684e, 0x7ab0, 0x1c0, 0xf68b, 0x225c, 0x1, 0x1);
        gbc.writeMem(0x5208, { 0x95 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x684e, gbc.sp());
        EXPECT(0x5209, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0048
        gbc.setState(0x5582, 0x3676, 0x24c0, 0xd5a2, 0x2d19, 0x16d0, 0x1, 0x1);
        gbc.writeMem(0x5582, { 0x95 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x3676, gbc.sp());
        EXPECT(0x5583, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0049
        gbc.setState(0xbbb2, 0xcc4, 0xc4f0, 0xb12a, 0x2b1b, 0x6681, 0x1, 0x1);
        gbc.writeMem(0xbbb2, { 0x95 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xcc4, gbc.sp());
        EXPECT(0xbbb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xbbb2));
        // 95 004A
        gbc.setState(0xc0e1, 0x6b7d, 0xe830, 0xbbfd, 0x71df, 0x784, 0x1, 0x1);
        gbc.writeMem(0xc0e1, { 0x95 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x6b7d, gbc.sp());
        EXPECT(0xc0e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xc0e1));
        // 95 004B
        gbc.setState(0xc33e, 0xc760, 0x4410, 0x2f54, 0x678c, 0x3f01, 0x0, 0x1);
        gbc.writeMem(0xc33e, { 0x95 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xc760, gbc.sp());
        EXPECT(0xc33f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xc33e));
        // 95 004C
        gbc.setState(0x3e27, 0xbb90, 0xf220, 0xb282, 0x3804, 0x26be, 0x1, 0x1);
        gbc.writeMem(0x3e27, { 0x95 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xbb90, gbc.sp());
        EXPECT(0x3e28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 004D
        gbc.setState(0xaf5c, 0x8bdb, 0x3d10, 0x20a1, 0x54c1, 0xaed9, 0x1, 0x1);
        gbc.writeMem(0xaf5c, { 0x95 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x8bdb, gbc.sp());
        EXPECT(0xaf5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xaf5c));
        // 95 004E
        gbc.setState(0xeadd, 0xb756, 0x17b0, 0x2429, 0x829f, 0x9176, 0x1, 0x0);
        gbc.writeMem(0xeadd, { 0x95 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xb756, gbc.sp());
        EXPECT(0xeade, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xeadd));
        // 95 004F
        gbc.setState(0x1628, 0x1472, 0x7e80, 0xde06, 0x31b3, 0x391e, 0x1, 0x1);
        gbc.writeMem(0x1628, { 0x95 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x1472, gbc.sp());
        EXPECT(0x1629, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0050
        gbc.setState(0x3d3e, 0x9aa5, 0x12c0, 0xe30c, 0xaaa5, 0x429a, 0x1, 0x0);
        gbc.writeMem(0x3d3e, { 0x95 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x9aa5, gbc.sp());
        EXPECT(0x3d3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0052
        gbc.setState(0x8e9f, 0xba55, 0xefd0, 0x54db, 0x8f03, 0xe793, 0x0, 0x0);
        gbc.writeMem(0x8e9f, { 0x95 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xba55, gbc.sp());
        EXPECT(0x8ea0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x8e9f));
        // 95 0053
        gbc.setState(0xa19f, 0xbc3c, 0x22b0, 0x65a9, 0x992, 0xde9a, 0x0, 0x1);
        gbc.writeMem(0xa19f, { 0x95 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xbc3c, gbc.sp());
        EXPECT(0xa1a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xa19f));
        // 95 0054
        gbc.setState(0x8f98, 0xd394, 0x2ef0, 0x41c7, 0x8ab3, 0x387f, 0x1, 0x0);
        gbc.writeMem(0x8f98, { 0x95 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xd394, gbc.sp());
        EXPECT(0x8f99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x8f98));
        // 95 0055
        gbc.setState(0x8ee4, 0x8ee2, 0xee10, 0x2f4f, 0x72f0, 0x4982, 0x1, 0x0);
        gbc.writeMem(0x8ee4, { 0x95 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x8ee2, gbc.sp());
        EXPECT(0x8ee5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x8ee4));
        // 95 0056
        gbc.setState(0x9810, 0x2632, 0xed70, 0xd1c3, 0x1c65, 0xc8d0, 0x0, 0x1);
        gbc.writeMem(0x9810, { 0x95 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x2632, gbc.sp());
        EXPECT(0x9811, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x9810));
        // 95 0057
        gbc.setState(0xd504, 0xcb0d, 0xa570, 0xda23, 0x404c, 0xf409, 0x0, 0x1);
        gbc.writeMem(0xd504, { 0x95 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xcb0d, gbc.sp());
        EXPECT(0xd505, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xd504));
        // 95 0058
        gbc.setState(0x6c23, 0xcd3e, 0x5ae0, 0x1bcf, 0x1ef0, 0x3272, 0x0, 0x1);
        gbc.writeMem(0x6c23, { 0x95 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xcd3e, gbc.sp());
        EXPECT(0x6c24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0059
        gbc.setState(0x4d4d, 0x10af, 0xfd10, 0x20ec, 0xbcba, 0xddfc, 0x0, 0x0);
        gbc.writeMem(0x4d4d, { 0x95 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x10af, gbc.sp());
        EXPECT(0x4d4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 005A
        gbc.setState(0xb576, 0x249d, 0xc750, 0xda27, 0xb1d6, 0xb8cb, 0x0, 0x0);
        gbc.writeMem(0xb576, { 0x95 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x249d, gbc.sp());
        EXPECT(0xb577, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xb576));
        // 95 005B
        gbc.setState(0x8ee9, 0x2447, 0xb3b0, 0x2562, 0xc285, 0xe890, 0x1, 0x1);
        gbc.writeMem(0x8ee9, { 0x95 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x2447, gbc.sp());
        EXPECT(0x8eea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x8ee9));
        // 95 005C
        gbc.setState(0x1615, 0xa931, 0x7590, 0x3964, 0xd52d, 0x43bf, 0x1, 0x1);
        gbc.writeMem(0x1615, { 0x95 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xa931, gbc.sp());
        EXPECT(0x1616, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 005E
        gbc.setState(0xa952, 0x4fac, 0xc1f0, 0x77c9, 0x585e, 0x589c, 0x0, 0x1);
        gbc.writeMem(0xa952, { 0x95 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x4fac, gbc.sp());
        EXPECT(0xa953, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xa952));
        // 95 005F
        gbc.setState(0x9d8a, 0x5951, 0x3630, 0xf97a, 0x1d9f, 0x7359, 0x0, 0x0);
        gbc.writeMem(0x9d8a, { 0x95 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x5951, gbc.sp());
        EXPECT(0x9d8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x9d8a));
        // 95 0060
        gbc.setState(0xdc74, 0x6371, 0x52e0, 0x6188, 0xc97c, 0x62f5, 0x1, 0x1);
        gbc.writeMem(0xdc74, { 0x95 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x6371, gbc.sp());
        EXPECT(0xdc75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xdc74));
        // 95 0061
        gbc.setState(0x5de7, 0x9fc7, 0x710, 0xaf9, 0xca16, 0x755, 0x1, 0x0);
        gbc.writeMem(0x5de7, { 0x95 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x9fc7, gbc.sp());
        EXPECT(0x5de8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0062
        gbc.setState(0x3144, 0x1840, 0x8f80, 0x93c7, 0x429d, 0xee9e, 0x0, 0x0);
        gbc.writeMem(0x3144, { 0x95 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x1840, gbc.sp());
        EXPECT(0x3145, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0063
        gbc.setState(0x19aa, 0x23ef, 0xa8d0, 0x23f3, 0x79dd, 0x8de9, 0x0, 0x0);
        gbc.writeMem(0x19aa, { 0x95 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x23ef, gbc.sp());
        EXPECT(0x19ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0064
        gbc.setState(0x380, 0xd8a2, 0xafb0, 0xafe8, 0x911d, 0xa4b1, 0x0, 0x1);
        gbc.writeMem(0x380, { 0x95 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xd8a2, gbc.sp());
        EXPECT(0x381, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0065
        gbc.setState(0x4933, 0x2e0d, 0x4b70, 0xb42e, 0xa8b5, 0x8a70, 0x1, 0x1);
        gbc.writeMem(0x4933, { 0x95 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x2e0d, gbc.sp());
        EXPECT(0x4934, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0066
        gbc.setState(0x827e, 0xffd0, 0x42a0, 0xd6db, 0xf88e, 0x9b45, 0x1, 0x1);
        gbc.writeMem(0x827e, { 0x95 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xffd0, gbc.sp());
        EXPECT(0x827f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x827e));
        // 95 0067
        gbc.setState(0x871, 0x322f, 0xd7e0, 0x775c, 0xd654, 0x20e0, 0x1, 0x0);
        gbc.writeMem(0x871, { 0x95 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x322f, gbc.sp());
        EXPECT(0x872, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0068
        gbc.setState(0xc4b4, 0xca6f, 0x2560, 0x2d3a, 0xfeed, 0xd6db, 0x1, 0x1);
        gbc.writeMem(0xc4b4, { 0x95 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xca6f, gbc.sp());
        EXPECT(0xc4b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xc4b4));
        // 95 006A
        gbc.setState(0x273d, 0xd494, 0xeb40, 0x655a, 0x2b25, 0xdde7, 0x0, 0x0);
        gbc.writeMem(0x273d, { 0x95 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xd494, gbc.sp());
        EXPECT(0x273e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 006B
        gbc.setState(0x937, 0x7c14, 0x4b60, 0xaa32, 0x70cb, 0x592a, 0x0, 0x0);
        gbc.writeMem(0x937, { 0x95 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x7c14, gbc.sp());
        EXPECT(0x938, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 006C
        gbc.setState(0xc150, 0xeee1, 0x2170, 0x1b92, 0xe289, 0xe2fe, 0x1, 0x1);
        gbc.writeMem(0xc150, { 0x95 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xeee1, gbc.sp());
        EXPECT(0xc151, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xc150));
        // 95 006D
        gbc.setState(0xc1e8, 0x4aae, 0xbcb0, 0xf3b9, 0x15a4, 0x1e2a, 0x0, 0x0);
        gbc.writeMem(0xc1e8, { 0x95 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x4aae, gbc.sp());
        EXPECT(0xc1e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xc1e8));
        // 95 006E
        gbc.setState(0x8a2e, 0x4795, 0x6610, 0x582e, 0xdab4, 0x6c75, 0x0, 0x0);
        gbc.writeMem(0x8a2e, { 0x95 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x4795, gbc.sp());
        EXPECT(0x8a2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x8a2e));
        // 95 006F
        gbc.setState(0x7072, 0x2d9d, 0x8bc0, 0xf577, 0xbb5b, 0xc90d, 0x0, 0x0);
        gbc.writeMem(0x7072, { 0x95 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x2d9d, gbc.sp());
        EXPECT(0x7073, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0070
        gbc.setState(0xc18f, 0xdbde, 0x910, 0x32a8, 0x224a, 0x77a0, 0x0, 0x0);
        gbc.writeMem(0xc18f, { 0x95 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xdbde, gbc.sp());
        EXPECT(0xc190, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xc18f));
        // 95 0071
        gbc.setState(0x3a96, 0x8c13, 0xd7a0, 0xa5, 0x8752, 0x821b, 0x1, 0x1);
        gbc.writeMem(0x3a96, { 0x95 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x8c13, gbc.sp());
        EXPECT(0x3a97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0072
        gbc.setState(0x6fcb, 0x1437, 0xaa20, 0x70ca, 0xae90, 0xec2a, 0x1, 0x0);
        gbc.writeMem(0x6fcb, { 0x95 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x1437, gbc.sp());
        EXPECT(0x6fcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0073
        gbc.setState(0x84c2, 0x42a5, 0xe4b0, 0xbd0f, 0x83ff, 0x1749, 0x1, 0x1);
        gbc.writeMem(0x84c2, { 0x95 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x42a5, gbc.sp());
        EXPECT(0x84c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x84c2));
        // 95 0074
        gbc.setState(0x39c3, 0x2086, 0x1870, 0x7ca3, 0x1d62, 0xbcfa, 0x0, 0x1);
        gbc.writeMem(0x39c3, { 0x95 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x2086, gbc.sp());
        EXPECT(0x39c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0075
        gbc.setState(0xc5b0, 0xb076, 0x7170, 0xdefc, 0x3dcd, 0xad6e, 0x1, 0x0);
        gbc.writeMem(0xc5b0, { 0x95 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xb076, gbc.sp());
        EXPECT(0xc5b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xc5b0));
        // 95 0076
        gbc.setState(0x3fb8, 0xa43, 0xfba0, 0x2247, 0x8e1f, 0x7af7, 0x0, 0x1);
        gbc.writeMem(0x3fb8, { 0x95 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xa43, gbc.sp());
        EXPECT(0x3fb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0077
        gbc.setState(0xe795, 0xdb47, 0x80e0, 0x3264, 0x56d3, 0x1cd7, 0x1, 0x0);
        gbc.writeMem(0xe795, { 0x95 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xdb47, gbc.sp());
        EXPECT(0xe796, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xe795));
        // 95 0078
        gbc.setState(0xbf25, 0x731e, 0xe480, 0x38be, 0x2d07, 0x9827, 0x1, 0x0);
        gbc.writeMem(0xbf25, { 0x95 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x731e, gbc.sp());
        EXPECT(0xbf26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xbf25));
        // 95 0079
        gbc.setState(0x7ee, 0x9bd8, 0xb010, 0xa10d, 0xdffd, 0xbd54, 0x1, 0x0);
        gbc.writeMem(0x7ee, { 0x95 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x9bd8, gbc.sp());
        EXPECT(0x7ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 007A
        gbc.setState(0x419b, 0x1f0, 0xd6d0, 0x63d2, 0x7d60, 0xcaa4, 0x1, 0x0);
        gbc.writeMem(0x419b, { 0x95 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x1f0, gbc.sp());
        EXPECT(0x419c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 007B
        gbc.setState(0xd5da, 0x4e8, 0x46f0, 0xb55b, 0x6ab5, 0xe56c, 0x1, 0x0);
        gbc.writeMem(0xd5da, { 0x95 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x4e8, gbc.sp());
        EXPECT(0xd5db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xd5da));
        // 95 007C
        gbc.setState(0x6f38, 0xd4a9, 0xea90, 0x5578, 0x805d, 0xc3cd, 0x1, 0x0);
        gbc.writeMem(0x6f38, { 0x95 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd4a9, gbc.sp());
        EXPECT(0x6f39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 007D
        gbc.setState(0xba6a, 0xfda6, 0x4870, 0xd092, 0x92d4, 0x86a, 0x0, 0x0);
        gbc.writeMem(0xba6a, { 0x95 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xfda6, gbc.sp());
        EXPECT(0xba6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xba6a));
        // 95 007E
        gbc.setState(0x3aaf, 0x5be8, 0x9890, 0x20f0, 0xa040, 0xbea4, 0x0, 0x0);
        gbc.writeMem(0x3aaf, { 0x95 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x5be8, gbc.sp());
        EXPECT(0x3ab0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 007F
        gbc.setState(0xbf79, 0x4a4, 0x9dd0, 0x2f11, 0xc834, 0x3a6a, 0x1, 0x1);
        gbc.writeMem(0xbf79, { 0x95 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x4a4, gbc.sp());
        EXPECT(0xbf7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xbf79));
        // 95 0080
        gbc.setState(0x38db, 0xab8c, 0x3340, 0x6ed3, 0xd706, 0x802b, 0x0, 0x1);
        gbc.writeMem(0x38db, { 0x95 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xab8c, gbc.sp());
        EXPECT(0x38dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0081
        gbc.setState(0x93a8, 0x4a90, 0xb0d0, 0xd9f9, 0x3f99, 0xc467, 0x0, 0x0);
        gbc.writeMem(0x93a8, { 0x95 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x4a90, gbc.sp());
        EXPECT(0x93a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x93a8));
        // 95 0082
        gbc.setState(0x3d2b, 0x8bb4, 0xd190, 0x16aa, 0xf38a, 0xb7b1, 0x1, 0x0);
        gbc.writeMem(0x3d2b, { 0x95 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x8bb4, gbc.sp());
        EXPECT(0x3d2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0084
        gbc.setState(0xa0e1, 0xaab2, 0xbbf0, 0x6d33, 0xc258, 0x263, 0x0, 0x0);
        gbc.writeMem(0xa0e1, { 0x95 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xaab2, gbc.sp());
        EXPECT(0xa0e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xa0e1));
        // 95 0085
        gbc.setState(0xc24f, 0x479c, 0xd550, 0x7619, 0x81d9, 0x3516, 0x1, 0x1);
        gbc.writeMem(0xc24f, { 0x95 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x479c, gbc.sp());
        EXPECT(0xc250, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xc24f));
        // 95 0086
        gbc.setState(0x891a, 0xeb46, 0xb5a0, 0x1069, 0xec1b, 0xd2ed, 0x1, 0x0);
        gbc.writeMem(0x891a, { 0x95 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xeb46, gbc.sp());
        EXPECT(0x891b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x891a));
        // 95 0087
        gbc.setState(0x34d5, 0xbab6, 0x1a40, 0x9eb6, 0x6e62, 0x5d37, 0x0, 0x0);
        gbc.writeMem(0x34d5, { 0x95 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xbab6, gbc.sp());
        EXPECT(0x34d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0088
        gbc.setState(0x5565, 0xa100, 0x3350, 0xc7f7, 0x9d44, 0xfc3c, 0x0, 0x1);
        gbc.writeMem(0x5565, { 0x95 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xa100, gbc.sp());
        EXPECT(0x5566, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0089
        gbc.setState(0xbafe, 0xc860, 0x3430, 0x919f, 0x693f, 0x5176, 0x0, 0x1);
        gbc.writeMem(0xbafe, { 0x95 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xc860, gbc.sp());
        EXPECT(0xbaff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xbafe));
        // 95 008A
        gbc.setState(0x9c76, 0x2cc7, 0xca40, 0xc461, 0x8758, 0x1c01, 0x0, 0x1);
        gbc.writeMem(0x9c76, { 0x95 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x2cc7, gbc.sp());
        EXPECT(0x9c77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x9c76));
        // 95 008B
        gbc.setState(0xb23c, 0x1fe7, 0xe210, 0xdc33, 0xf408, 0x3b88, 0x0, 0x1);
        gbc.writeMem(0xb23c, { 0x95 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x1fe7, gbc.sp());
        EXPECT(0xb23d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xb23c));
        // 95 008C
        gbc.setState(0x8551, 0xf502, 0xf780, 0x3a13, 0x7af1, 0x3a7a, 0x1, 0x1);
        gbc.writeMem(0x8551, { 0x95 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xf502, gbc.sp());
        EXPECT(0x8552, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x8551));
        // 95 008D
        gbc.setState(0x8a40, 0x64ab, 0x20f0, 0x35b, 0xa04d, 0x3c53, 0x0, 0x0);
        gbc.writeMem(0x8a40, { 0x95 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x64ab, gbc.sp());
        EXPECT(0x8a41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x8a40));
        // 95 008E
        gbc.setState(0xb406, 0x9a84, 0x6f50, 0x788d, 0xfc8f, 0x9732, 0x0, 0x1);
        gbc.writeMem(0xb406, { 0x95 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x9a84, gbc.sp());
        EXPECT(0xb407, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xb406));
        // 95 008F
        gbc.setState(0x7c6a, 0x993f, 0xb360, 0x410d, 0x5264, 0x7155, 0x0, 0x0);
        gbc.writeMem(0x7c6a, { 0x95 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x993f, gbc.sp());
        EXPECT(0x7c6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0090
        gbc.setState(0xa63b, 0x6668, 0x6ef0, 0x8c9b, 0xf4dd, 0x3188, 0x0, 0x0);
        gbc.writeMem(0xa63b, { 0x95 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x6668, gbc.sp());
        EXPECT(0xa63c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xa63b));
        // 95 0091
        gbc.setState(0xe953, 0xdcd, 0x4710, 0x2497, 0x6478, 0x80a5, 0x1, 0x1);
        gbc.writeMem(0xe953, { 0x95 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xdcd, gbc.sp());
        EXPECT(0xe954, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xe953));
        // 95 0092
        gbc.setState(0x55da, 0x404, 0x9510, 0xcc28, 0xe104, 0x1b50, 0x1, 0x0);
        gbc.writeMem(0x55da, { 0x95 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x404, gbc.sp());
        EXPECT(0x55db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0093
        gbc.setState(0x5907, 0xa5bd, 0x1790, 0x9b54, 0x8493, 0x18d1, 0x1, 0x1);
        gbc.writeMem(0x5907, { 0x95 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xa5bd, gbc.sp());
        EXPECT(0x5908, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0094
        gbc.setState(0x29a5, 0xb3c7, 0x6050, 0xd8f4, 0x793, 0x1343, 0x1, 0x1);
        gbc.writeMem(0x29a5, { 0x95 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb3c7, gbc.sp());
        EXPECT(0x29a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0095
        gbc.setState(0x7906, 0xbd3b, 0xbe60, 0xf54f, 0x9e8a, 0xd16, 0x1, 0x1);
        gbc.writeMem(0x7906, { 0x95 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xbd3b, gbc.sp());
        EXPECT(0x7907, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0097
        gbc.setState(0xce13, 0x364f, 0x10d0, 0x6f32, 0x3a6f, 0x4394, 0x0, 0x1);
        gbc.writeMem(0xce13, { 0x95 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x364f, gbc.sp());
        EXPECT(0xce14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xce13));
        // 95 0098
        gbc.setState(0xbc0d, 0x91db, 0xd250, 0x6453, 0x4316, 0xb7d3, 0x1, 0x0);
        gbc.writeMem(0xbc0d, { 0x95 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x91db, gbc.sp());
        EXPECT(0xbc0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xbc0d));
        // 95 009A
        gbc.setState(0x2f23, 0x2a52, 0x6350, 0xb3b9, 0x3c44, 0x8a79, 0x1, 0x1);
        gbc.writeMem(0x2f23, { 0x95 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x2a52, gbc.sp());
        EXPECT(0x2f24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 009B
        gbc.setState(0x15c1, 0x8fa7, 0xbe70, 0x8538, 0x9f55, 0xb2fb, 0x0, 0x0);
        gbc.writeMem(0x15c1, { 0x95 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x8fa7, gbc.sp());
        EXPECT(0x15c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 009C
        gbc.setState(0x5ee6, 0x9881, 0x7b20, 0xfb30, 0x1287, 0x542c, 0x0, 0x0);
        gbc.writeMem(0x5ee6, { 0x95 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x9881, gbc.sp());
        EXPECT(0x5ee7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 009D
        gbc.setState(0xb105, 0x9f0c, 0xfc10, 0x5510, 0x9f21, 0x14d, 0x1, 0x1);
        gbc.writeMem(0xb105, { 0x95 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x9f0c, gbc.sp());
        EXPECT(0xb106, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xb105));
        // 95 009E
        gbc.setState(0xc2fc, 0xeeb1, 0x8ad0, 0x14fe, 0x1672, 0x24ea, 0x0, 0x1);
        gbc.writeMem(0xc2fc, { 0x95 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xeeb1, gbc.sp());
        EXPECT(0xc2fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xc2fc));
        // 95 00A0
        gbc.setState(0x20f6, 0x6fca, 0x520, 0x1096, 0x5b0e, 0x8ed5, 0x0, 0x1);
        gbc.writeMem(0x20f6, { 0x95 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x6fca, gbc.sp());
        EXPECT(0x20f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 00A1
        gbc.setState(0xd755, 0x21a1, 0x6b80, 0xa916, 0x277c, 0x5569, 0x1, 0x0);
        gbc.writeMem(0xd755, { 0x95 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x21a1, gbc.sp());
        EXPECT(0xd756, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xd755));
        // 95 00A2
        gbc.setState(0xd307, 0xc6c3, 0xea80, 0x4a54, 0xd217, 0xb726, 0x0, 0x1);
        gbc.writeMem(0xd307, { 0x95 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xc6c3, gbc.sp());
        EXPECT(0xd308, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xd307));
        // 95 00A3
        gbc.setState(0x823d, 0xd317, 0x6f40, 0x7026, 0xfee9, 0x722b, 0x0, 0x0);
        gbc.writeMem(0x823d, { 0x95 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xd317, gbc.sp());
        EXPECT(0x823e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x823d));
        // 95 00A4
        gbc.setState(0x427, 0x2b45, 0x5ad0, 0x49f7, 0x2ece, 0x4127, 0x0, 0x0);
        gbc.writeMem(0x427, { 0x95 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x2b45, gbc.sp());
        EXPECT(0x428, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 00A5
        gbc.setState(0x43b2, 0xcc37, 0xb210, 0x8945, 0x1397, 0xfe9, 0x1, 0x1);
        gbc.writeMem(0x43b2, { 0x95 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xcc37, gbc.sp());
        EXPECT(0x43b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 00A6
        gbc.setState(0x3179, 0x54e1, 0xcee0, 0xd8f8, 0x4aa7, 0xe066, 0x1, 0x1);
        gbc.writeMem(0x3179, { 0x95 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x54e1, gbc.sp());
        EXPECT(0x317a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 00A7
        gbc.setState(0x1397, 0x6108, 0x2220, 0x503, 0xba31, 0x4c98, 0x0, 0x1);
        gbc.writeMem(0x1397, { 0x95 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x6108, gbc.sp());
        EXPECT(0x1398, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 00A8
        gbc.setState(0x1f20, 0x3089, 0x44a0, 0xeeb9, 0xb811, 0x21a2, 0x0, 0x1);
        gbc.writeMem(0x1f20, { 0x95 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x3089, gbc.sp());
        EXPECT(0x1f21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 00A9
        gbc.setState(0x8af4, 0xdff, 0x39e0, 0xc528, 0xc391, 0x534e, 0x1, 0x0);
        gbc.writeMem(0x8af4, { 0x95 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xdff, gbc.sp());
        EXPECT(0x8af5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x8af4));
        // 95 00AA
        gbc.setState(0xa343, 0x37b9, 0x8970, 0x3f36, 0x52ba, 0xd2ba, 0x1, 0x0);
        gbc.writeMem(0xa343, { 0x95 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x37b9, gbc.sp());
        EXPECT(0xa344, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xa343));
        // 95 00AB
        gbc.setState(0x68d9, 0xfc19, 0x30b0, 0xbab9, 0xd393, 0x2582, 0x1, 0x0);
        gbc.writeMem(0x68d9, { 0x95 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xfc19, gbc.sp());
        EXPECT(0x68da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 00AC
        gbc.setState(0xc440, 0xb740, 0x540, 0xb452, 0x2aa4, 0xb923, 0x0, 0x1);
        gbc.writeMem(0xc440, { 0x95 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xb740, gbc.sp());
        EXPECT(0xc441, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xc440));
        // 95 00AD
        gbc.setState(0xd59b, 0x7a02, 0x8fe0, 0x7e7a, 0x19b0, 0x195e, 0x0, 0x1);
        gbc.writeMem(0xd59b, { 0x95 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x7a02, gbc.sp());
        EXPECT(0xd59c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xd59b));
        // 95 00AE
        gbc.setState(0xdfd, 0x7959, 0x66f0, 0x829f, 0xfde1, 0xbd54, 0x1, 0x1);
        gbc.writeMem(0xdfd, { 0x95 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x7959, gbc.sp());
        EXPECT(0xdfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 00AF
        gbc.setState(0x54d6, 0xf726, 0x49d0, 0xbd82, 0x1666, 0x827f, 0x0, 0x1);
        gbc.writeMem(0x54d6, { 0x95 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xf726, gbc.sp());
        EXPECT(0x54d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 00B0
        gbc.setState(0x435c, 0x4e1e, 0xaa10, 0xad11, 0x4e1c, 0x7f48, 0x0, 0x1);
        gbc.writeMem(0x435c, { 0x95 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x4e1e, gbc.sp());
        EXPECT(0x435d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 00B1
        gbc.setState(0x6103, 0xcbdb, 0x8c10, 0x2d7d, 0xe63c, 0xd1df, 0x1, 0x1);
        gbc.writeMem(0x6103, { 0x95 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xcbdb, gbc.sp());
        EXPECT(0x6104, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 00B2
        gbc.setState(0x37e7, 0x374d, 0xbdf0, 0xd46d, 0xb6a1, 0x9afa, 0x0, 0x0);
        gbc.writeMem(0x37e7, { 0x95 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x374d, gbc.sp());
        EXPECT(0x37e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 00B3
        gbc.setState(0x1261, 0x672e, 0x7b20, 0x6e8c, 0x6864, 0xf032, 0x0, 0x1);
        gbc.writeMem(0x1261, { 0x95 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x672e, gbc.sp());
        EXPECT(0x1262, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 00B4
        gbc.setState(0xab56, 0xca2a, 0x1ba0, 0xe622, 0x135a, 0x7b24, 0x0, 0x1);
        gbc.writeMem(0xab56, { 0x95 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xca2a, gbc.sp());
        EXPECT(0xab57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xab56));
        // 95 00B6
        gbc.setState(0x7b25, 0x309d, 0xf5d0, 0x4a07, 0x7d7c, 0x2685, 0x1, 0x1);
        gbc.writeMem(0x7b25, { 0x95 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x309d, gbc.sp());
        EXPECT(0x7b26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 00B7
        gbc.setState(0x9daa, 0xda4f, 0x4800, 0x8646, 0xc2e5, 0xb246, 0x0, 0x1);
        gbc.writeMem(0x9daa, { 0x95 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xda4f, gbc.sp());
        EXPECT(0x9dab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x9daa));
        // 95 00B8
        gbc.setState(0x5888, 0xde93, 0x3160, 0x5b72, 0x4466, 0xa6b1, 0x0, 0x0);
        gbc.writeMem(0x5888, { 0x95 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xde93, gbc.sp());
        EXPECT(0x5889, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 00B9
        gbc.setState(0x6945, 0xc016, 0x3a80, 0xa07d, 0x272, 0x736d, 0x0, 0x0);
        gbc.writeMem(0x6945, { 0x95 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xc016, gbc.sp());
        EXPECT(0x6946, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 00BA
        gbc.setState(0x8131, 0xe362, 0xde60, 0xd35e, 0xe2c1, 0x6a16, 0x0, 0x0);
        gbc.writeMem(0x8131, { 0x95 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xe362, gbc.sp());
        EXPECT(0x8132, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x8131));
        // 95 00BB
        gbc.setState(0xe06d, 0xcd5a, 0xa200, 0x9c7c, 0x9574, 0x72e, 0x0, 0x0);
        gbc.writeMem(0xe06d, { 0x95 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xcd5a, gbc.sp());
        EXPECT(0xe06e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xe06d));
        // 95 00BC
        gbc.setState(0x5199, 0x7bfc, 0xbd90, 0x58e0, 0x3afd, 0x1e8a, 0x1, 0x1);
        gbc.writeMem(0x5199, { 0x95 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x7bfc, gbc.sp());
        EXPECT(0x519a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 00BE
        gbc.setState(0xdc37, 0xfd54, 0x1eb0, 0xe0c7, 0x4d80, 0x1957, 0x1, 0x1);
        gbc.writeMem(0xdc37, { 0x95 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xfd54, gbc.sp());
        EXPECT(0xdc38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xdc37));
        // 95 00BF
        gbc.setState(0xc8cf, 0xe2ec, 0x8bd0, 0x33a6, 0xe720, 0x60ef, 0x0, 0x1);
        gbc.writeMem(0xc8cf, { 0x95 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xe2ec, gbc.sp());
        EXPECT(0xc8d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xc8cf));
        // 95 00C0
        gbc.setState(0x5ca5, 0x6bb4, 0xe40, 0x1df1, 0xc3b2, 0xff1c, 0x1, 0x1);
        gbc.writeMem(0x5ca5, { 0x95 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x6bb4, gbc.sp());
        EXPECT(0x5ca6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 00C1
        gbc.setState(0xcaf8, 0x88b8, 0xd9c0, 0xa10c, 0x8aed, 0xd73a, 0x0, 0x1);
        gbc.writeMem(0xcaf8, { 0x95 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x88b8, gbc.sp());
        EXPECT(0xcaf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xcaf8));
        // 95 00C2
        gbc.setState(0x7359, 0xcba6, 0xe710, 0x679d, 0x577, 0x404d, 0x0, 0x0);
        gbc.writeMem(0x7359, { 0x95 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xcba6, gbc.sp());
        EXPECT(0x735a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 00C3
        gbc.setState(0x7063, 0xee5b, 0xcaf0, 0x79d1, 0xf0a3, 0x4ab, 0x0, 0x1);
        gbc.writeMem(0x7063, { 0x95 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xee5b, gbc.sp());
        EXPECT(0x7064, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 00C4
        gbc.setState(0xb492, 0xdcf1, 0xc930, 0xedcf, 0x783, 0xfe9b, 0x1, 0x1);
        gbc.writeMem(0xb492, { 0x95 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xdcf1, gbc.sp());
        EXPECT(0xb493, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xb492));
        // 95 00C5
        gbc.setState(0x1b16, 0xb520, 0xefd0, 0xb0a0, 0xa9b6, 0x7bb, 0x1, 0x0);
        gbc.writeMem(0x1b16, { 0x95 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xb520, gbc.sp());
        EXPECT(0x1b17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 00C6
        gbc.setState(0xae9f, 0xc10, 0x6820, 0x2e3c, 0x6815, 0x2410, 0x0, 0x1);
        gbc.writeMem(0xae9f, { 0x95 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xc10, gbc.sp());
        EXPECT(0xaea0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xae9f));
        // 95 00C7
        gbc.setState(0xe215, 0x53bc, 0x4b10, 0x4f0f, 0xf6a5, 0xa988, 0x0, 0x1);
        gbc.writeMem(0xe215, { 0x95 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x53bc, gbc.sp());
        EXPECT(0xe216, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xe215));
        // 95 00C8
        gbc.setState(0x9825, 0x71e6, 0x2b40, 0xad3e, 0x7419, 0x6e39, 0x1, 0x1);
        gbc.writeMem(0x9825, { 0x95 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x71e6, gbc.sp());
        EXPECT(0x9826, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x9825));
        // 95 00C9
        gbc.setState(0xf2c, 0xee9, 0x8740, 0xbe1f, 0x4e3c, 0x308, 0x0, 0x1);
        gbc.writeMem(0xf2c, { 0x95 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xee9, gbc.sp());
        EXPECT(0xf2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 00CA
        gbc.setState(0xa0b7, 0x955d, 0x26c0, 0x1728, 0x8e91, 0xebc1, 0x1, 0x0);
        gbc.writeMem(0xa0b7, { 0x95 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x955d, gbc.sp());
        EXPECT(0xa0b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xa0b7));
        // 95 00CB
        gbc.setState(0x6824, 0xec1a, 0x29a0, 0xc250, 0xd32d, 0xe69c, 0x0, 0x1);
        gbc.writeMem(0x6824, { 0x95 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xec1a, gbc.sp());
        EXPECT(0x6825, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 00CC
        gbc.setState(0xcdd6, 0x98a3, 0x7490, 0x51ef, 0x668, 0x96f6, 0x1, 0x0);
        gbc.writeMem(0xcdd6, { 0x95 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x98a3, gbc.sp());
        EXPECT(0xcdd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xcdd6));
        // 95 00CE
        gbc.setState(0x216c, 0xfdd8, 0xd2f0, 0x8d50, 0x4256, 0xf320, 0x0, 0x0);
        gbc.writeMem(0x216c, { 0x95 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xfdd8, gbc.sp());
        EXPECT(0x216d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 00CF
        gbc.setState(0x6ab7, 0x187f, 0x8330, 0x6ea2, 0xc782, 0xc6ec, 0x0, 0x0);
        gbc.writeMem(0x6ab7, { 0x95 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x187f, gbc.sp());
        EXPECT(0x6ab8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 00D0
        gbc.setState(0x753f, 0x883d, 0x5980, 0xb27e, 0x89ed, 0x774c, 0x1, 0x1);
        gbc.writeMem(0x753f, { 0x95 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x883d, gbc.sp());
        EXPECT(0x7540, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 00D1
        gbc.setState(0x2a42, 0xbb1, 0x6850, 0xc90c, 0x531e, 0x7b79, 0x0, 0x1);
        gbc.writeMem(0x2a42, { 0x95 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xbb1, gbc.sp());
        EXPECT(0x2a43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 00D2
        gbc.setState(0x3643, 0x15f1, 0xcb80, 0x40b1, 0x9612, 0x482a, 0x1, 0x0);
        gbc.writeMem(0x3643, { 0x95 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x15f1, gbc.sp());
        EXPECT(0x3644, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 00D3
        gbc.setState(0x3eb9, 0xbd96, 0x18c0, 0x1b94, 0x4e2f, 0x89e, 0x0, 0x0);
        gbc.writeMem(0x3eb9, { 0x95 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xbd96, gbc.sp());
        EXPECT(0x3eba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 00D4
        gbc.setState(0xaedb, 0xa427, 0xca80, 0xe8cb, 0xd59f, 0x37d1, 0x1, 0x0);
        gbc.writeMem(0xaedb, { 0x95 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xa427, gbc.sp());
        EXPECT(0xaedc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xaedb));
        // 95 00D5
        gbc.setState(0x5e27, 0x6774, 0xdb0, 0xc2a6, 0x5075, 0xe652, 0x0, 0x1);
        gbc.writeMem(0x5e27, { 0x95 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x6774, gbc.sp());
        EXPECT(0x5e28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 00D6
        gbc.setState(0x62bd, 0xb43f, 0xd20, 0xae92, 0x5b5c, 0x1c78, 0x1, 0x0);
        gbc.writeMem(0x62bd, { 0x95 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xb43f, gbc.sp());
        EXPECT(0x62be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 00D7
        gbc.setState(0x2aaf, 0x50a6, 0xe4a0, 0x1a33, 0x6d98, 0x91a6, 0x1, 0x1);
        gbc.writeMem(0x2aaf, { 0x95 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x50a6, gbc.sp());
        EXPECT(0x2ab0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 00D8
        gbc.setState(0xc4bd, 0x2310, 0x16d0, 0x4ceb, 0x9a18, 0x47d1, 0x1, 0x0);
        gbc.writeMem(0xc4bd, { 0x95 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x2310, gbc.sp());
        EXPECT(0xc4be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xc4bd));
        // 95 00D9
        gbc.setState(0x2024, 0x61fe, 0xb000, 0xe375, 0x4581, 0xa0f5, 0x0, 0x1);
        gbc.writeMem(0x2024, { 0x95 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x61fe, gbc.sp());
        EXPECT(0x2025, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 00DB
        gbc.setState(0x4e, 0xa488, 0x4e60, 0x8e7f, 0xfda2, 0x24a4, 0x0, 0x0);
        gbc.writeMem(0x4e, { 0x95 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xa488, gbc.sp());
        EXPECT(0x4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 00DC
        gbc.setState(0xc178, 0xee4e, 0xe2f0, 0xbf1e, 0xab9b, 0xec8f, 0x1, 0x0);
        gbc.writeMem(0xc178, { 0x95 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xee4e, gbc.sp());
        EXPECT(0xc179, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xc178));
        // 95 00DD
        gbc.setState(0x500d, 0x9527, 0x2cb0, 0x8bfd, 0x94f, 0x332, 0x0, 0x0);
        gbc.writeMem(0x500d, { 0x95 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x9527, gbc.sp());
        EXPECT(0x500e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 00DE
        gbc.setState(0x889a, 0xed29, 0x6b80, 0x9d7b, 0x47d1, 0x5e75, 0x1, 0x0);
        gbc.writeMem(0x889a, { 0x95 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xed29, gbc.sp());
        EXPECT(0x889b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x889a));
        // 95 00DF
        gbc.setState(0x6f74, 0x6f28, 0x2d20, 0x2633, 0x91aa, 0x118f, 0x0, 0x0);
        gbc.writeMem(0x6f74, { 0x95 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x6f28, gbc.sp());
        EXPECT(0x6f75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 00E1
        gbc.setState(0xc438, 0xbcf0, 0x6c20, 0x862f, 0xcb6d, 0xa7f4, 0x0, 0x0);
        gbc.writeMem(0xc438, { 0x95 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xbcf0, gbc.sp());
        EXPECT(0xc439, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xc438));
        // 95 00E2
        gbc.setState(0x28f4, 0x5eb5, 0xc2d0, 0xe9b8, 0xcf4b, 0x9b28, 0x1, 0x0);
        gbc.writeMem(0x28f4, { 0x95 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x5eb5, gbc.sp());
        EXPECT(0x28f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 00E3
        gbc.setState(0x477b, 0xe5d6, 0x5a90, 0xeb41, 0x865e, 0xe959, 0x0, 0x1);
        gbc.writeMem(0x477b, { 0x95 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xe5d6, gbc.sp());
        EXPECT(0x477c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 00E4
        gbc.setState(0x5d72, 0x4654, 0x9be0, 0x61dc, 0xe133, 0x454f, 0x0, 0x0);
        gbc.writeMem(0x5d72, { 0x95 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x4654, gbc.sp());
        EXPECT(0x5d73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 00E5
        gbc.setState(0x4e29, 0xc005, 0xe0a0, 0xaae8, 0x2626, 0x54ac, 0x0, 0x1);
        gbc.writeMem(0x4e29, { 0x95 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xc005, gbc.sp());
        EXPECT(0x4e2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 00E6
        gbc.setState(0xa9e4, 0x9e65, 0x4240, 0x35c, 0x1944, 0x84e0, 0x1, 0x0);
        gbc.writeMem(0xa9e4, { 0x95 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x9e65, gbc.sp());
        EXPECT(0xa9e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xa9e4));
        // 95 00E7
        gbc.setState(0x883, 0x1ab6, 0x950, 0xae41, 0x77fa, 0xbdec, 0x1, 0x1);
        gbc.writeMem(0x883, { 0x95 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x1ab6, gbc.sp());
        EXPECT(0x884, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 00E8
        gbc.setState(0x33da, 0xc099, 0xbcc0, 0x38d4, 0x1709, 0x59f2, 0x0, 0x1);
        gbc.writeMem(0x33da, { 0x95 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xc099, gbc.sp());
        EXPECT(0x33db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 00E9
        gbc.setState(0x9f34, 0x12e9, 0x590, 0xb31, 0x79d3, 0x6fcf, 0x0, 0x0);
        gbc.writeMem(0x9f34, { 0x95 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x12e9, gbc.sp());
        EXPECT(0x9f35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x9f34));
        // 95 00EA
        gbc.setState(0x9989, 0x25e0, 0x4130, 0xe8dd, 0x5032, 0x3af6, 0x1, 0x1);
        gbc.writeMem(0x9989, { 0x95 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x25e0, gbc.sp());
        EXPECT(0x998a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x9989));
        // 95 00EB
        gbc.setState(0xbbba, 0x7345, 0xd240, 0xa14b, 0x816d, 0x920b, 0x0, 0x1);
        gbc.writeMem(0xbbba, { 0x95 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x7345, gbc.sp());
        EXPECT(0xbbbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xbbba));
        // 95 00EC
        gbc.setState(0xc584, 0x1bd4, 0x5340, 0x8071, 0xdc1d, 0xbbdd, 0x1, 0x0);
        gbc.writeMem(0xc584, { 0x95 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x1bd4, gbc.sp());
        EXPECT(0xc585, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xc584));
        // 95 00ED
        gbc.setState(0x4c92, 0x9222, 0x24a0, 0x1a92, 0x3286, 0x4b90, 0x1, 0x1);
        gbc.writeMem(0x4c92, { 0x95 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x9222, gbc.sp());
        EXPECT(0x4c93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 00EE
        gbc.setState(0x2b00, 0x6659, 0x8b40, 0x2d40, 0x4123, 0x11f9, 0x0, 0x1);
        gbc.writeMem(0x2b00, { 0x95 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x6659, gbc.sp());
        EXPECT(0x2b01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 00EF
        gbc.setState(0x5072, 0x292e, 0x2030, 0xaf7d, 0xcb02, 0x5d26, 0x1, 0x1);
        gbc.writeMem(0x5072, { 0x95 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x292e, gbc.sp());
        EXPECT(0x5073, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 00F0
        gbc.setState(0x730b, 0x18fb, 0x3360, 0x6fb, 0xdd44, 0x4b22, 0x0, 0x1);
        gbc.writeMem(0x730b, { 0x95 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x18fb, gbc.sp());
        EXPECT(0x730c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 00F1
        gbc.setState(0xcca1, 0x720a, 0x4cd0, 0x3e49, 0xec3c, 0x5395, 0x1, 0x0);
        gbc.writeMem(0xcca1, { 0x95 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x720a, gbc.sp());
        EXPECT(0xcca2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xcca1));
        // 95 00F2
        gbc.setState(0xdb1a, 0x9326, 0x740, 0xc2c4, 0x8278, 0x66a8, 0x1, 0x1);
        gbc.writeMem(0xdb1a, { 0x95 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x9326, gbc.sp());
        EXPECT(0xdb1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xdb1a));
        // 95 00F3
        gbc.setState(0x791f, 0x8b63, 0x1a50, 0x1b0d, 0xb8a9, 0x898d, 0x1, 0x0);
        gbc.writeMem(0x791f, { 0x95 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x8b63, gbc.sp());
        EXPECT(0x7920, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 00F5
        gbc.setState(0x4880, 0xda19, 0x6430, 0xd232, 0x36dd, 0x869b, 0x1, 0x1);
        gbc.writeMem(0x4880, { 0x95 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xda19, gbc.sp());
        EXPECT(0x4881, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 00F6
        gbc.setState(0xe64, 0x9c23, 0x4a00, 0x80cc, 0xd973, 0xafe6, 0x0, 0x1);
        gbc.writeMem(0xe64, { 0x95 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9c23, gbc.sp());
        EXPECT(0xe65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 00F7
        gbc.setState(0x7008, 0xc969, 0x4770, 0x1919, 0xc009, 0x6efb, 0x0, 0x0);
        gbc.writeMem(0x7008, { 0x95 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xc969, gbc.sp());
        EXPECT(0x7009, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 00F8
        gbc.setState(0xd27e, 0x272f, 0x7050, 0x76ab, 0xd750, 0x1e2c, 0x1, 0x1);
        gbc.writeMem(0xd27e, { 0x95 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x272f, gbc.sp());
        EXPECT(0xd27f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xd27e));
        // 95 00F9
        gbc.setState(0x9a76, 0x6d30, 0xfba0, 0x5d67, 0x8b7f, 0x8ec5, 0x1, 0x1);
        gbc.writeMem(0x9a76, { 0x95 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x6d30, gbc.sp());
        EXPECT(0x9a77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x9a76));
        // 95 00FA
        gbc.setState(0x160f, 0xae2, 0x7f50, 0xfbd2, 0xf4bf, 0x55b3, 0x1, 0x0);
        gbc.writeMem(0x160f, { 0x95 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xae2, gbc.sp());
        EXPECT(0x1610, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 00FB
        gbc.setState(0xcea3, 0xce48, 0x2b90, 0x75e6, 0xd66f, 0xd756, 0x1, 0x0);
        gbc.writeMem(0xcea3, { 0x95 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xce48, gbc.sp());
        EXPECT(0xcea4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xcea3));
        // 95 00FC
        gbc.setState(0x7af9, 0xd423, 0x3da0, 0x5331, 0x3244, 0xda23, 0x1, 0x1);
        gbc.writeMem(0x7af9, { 0x95 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xd423, gbc.sp());
        EXPECT(0x7afa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 00FD
        gbc.setState(0xf69, 0x4dde, 0x7160, 0xc9ee, 0x3f79, 0xab20, 0x0, 0x0);
        gbc.writeMem(0xf69, { 0x95 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x4dde, gbc.sp());
        EXPECT(0xf6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 00FE
        gbc.setState(0x6748, 0xf7c8, 0xe7a0, 0x4c26, 0x18eb, 0x7e10, 0x0, 0x1);
        gbc.writeMem(0x6748, { 0x95 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xf7c8, gbc.sp());
        EXPECT(0x6749, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 00FF
        gbc.setState(0x68fa, 0x798f, 0x2930, 0xd223, 0x48cf, 0x5095, 0x1, 0x0);
        gbc.writeMem(0x68fa, { 0x95 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x798f, gbc.sp());
        EXPECT(0x68fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0100
        gbc.setState(0xa1ef, 0x7402, 0x2c40, 0x87ee, 0x2e63, 0x828, 0x1, 0x0);
        gbc.writeMem(0xa1ef, { 0x95 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x7402, gbc.sp());
        EXPECT(0xa1f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xa1ef));
        // 95 0101
        gbc.setState(0x79e6, 0xbf91, 0x7ae0, 0x9b08, 0xb0ef, 0xb0c2, 0x0, 0x0);
        gbc.writeMem(0x79e6, { 0x95 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xbf91, gbc.sp());
        EXPECT(0x79e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0102
        gbc.setState(0x94ba, 0xd7bc, 0xb8e0, 0x3fec, 0x3be, 0xb3ca, 0x1, 0x1);
        gbc.writeMem(0x94ba, { 0x95 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xd7bc, gbc.sp());
        EXPECT(0x94bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x94ba));
        // 95 0103
        gbc.setState(0xc6b3, 0x496, 0x9e60, 0x92ab, 0xc8d6, 0xae0e, 0x0, 0x1);
        gbc.writeMem(0xc6b3, { 0x95 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x496, gbc.sp());
        EXPECT(0xc6b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xc6b3));
        // 95 0104
        gbc.setState(0x48c0, 0x578a, 0x50, 0xa94c, 0x9337, 0xe7a3, 0x1, 0x1);
        gbc.writeMem(0x48c0, { 0x95 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x578a, gbc.sp());
        EXPECT(0x48c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0105
        gbc.setState(0xa2f2, 0x8996, 0x53c0, 0x17cd, 0x4810, 0x74e6, 0x0, 0x1);
        gbc.writeMem(0xa2f2, { 0x95 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x8996, gbc.sp());
        EXPECT(0xa2f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xa2f2));
        // 95 0106
        gbc.setState(0x519e, 0x1976, 0x1a80, 0xa18d, 0xb831, 0xa8b4, 0x1, 0x1);
        gbc.writeMem(0x519e, { 0x95 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x1976, gbc.sp());
        EXPECT(0x519f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0107
        gbc.setState(0x3831, 0xa49b, 0xc1d0, 0xe549, 0x3b67, 0xf3a9, 0x0, 0x1);
        gbc.writeMem(0x3831, { 0x95 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xa49b, gbc.sp());
        EXPECT(0x3832, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0108
        gbc.setState(0x1ed7, 0xd63, 0x1000, 0xff25, 0xdb84, 0xb6da, 0x0, 0x1);
        gbc.writeMem(0x1ed7, { 0x95 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xd63, gbc.sp());
        EXPECT(0x1ed8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0109
        gbc.setState(0x8ec8, 0x2477, 0xd160, 0x394b, 0xedc9, 0xa392, 0x0, 0x1);
        gbc.writeMem(0x8ec8, { 0x95 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x2477, gbc.sp());
        EXPECT(0x8ec9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x8ec8));
        // 95 010A
        gbc.setState(0x3b62, 0xe3e5, 0xecb0, 0x86d8, 0x708f, 0x8ade, 0x0, 0x0);
        gbc.writeMem(0x3b62, { 0x95 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xe3e5, gbc.sp());
        EXPECT(0x3b63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 010B
        gbc.setState(0x4b21, 0xb551, 0xc790, 0xf30, 0x45c3, 0x6f11, 0x1, 0x1);
        gbc.writeMem(0x4b21, { 0x95 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xb551, gbc.sp());
        EXPECT(0x4b22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 010C
        gbc.setState(0xc8fd, 0x258, 0xca70, 0x6dca, 0x548b, 0x9cd8, 0x1, 0x1);
        gbc.writeMem(0xc8fd, { 0x95 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x258, gbc.sp());
        EXPECT(0xc8fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xc8fd));
        // 95 010D
        gbc.setState(0xd59b, 0x3ff, 0x8fb0, 0x636e, 0x752f, 0x1014, 0x0, 0x0);
        gbc.writeMem(0xd59b, { 0x95 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x3ff, gbc.sp());
        EXPECT(0xd59c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xd59b));
        // 95 010E
        gbc.setState(0x37d6, 0x2460, 0x16c0, 0xcc92, 0xf6fe, 0x6e84, 0x1, 0x1);
        gbc.writeMem(0x37d6, { 0x95 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x2460, gbc.sp());
        EXPECT(0x37d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 010F
        gbc.setState(0x91a9, 0xc0, 0x1e00, 0x708e, 0x5b01, 0x2cc6, 0x0, 0x0);
        gbc.writeMem(0x91a9, { 0x95 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xc0, gbc.sp());
        EXPECT(0x91aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x91a9));
        // 95 0110
        gbc.setState(0xf83, 0x6dc1, 0xb0a0, 0xb6cc, 0x32c9, 0xc3aa, 0x0, 0x0);
        gbc.writeMem(0xf83, { 0x95 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x6dc1, gbc.sp());
        EXPECT(0xf84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0111
        gbc.setState(0x584f, 0x20a2, 0x6650, 0x83cd, 0xeb27, 0xc728, 0x0, 0x0);
        gbc.writeMem(0x584f, { 0x95 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x20a2, gbc.sp());
        EXPECT(0x5850, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0112
        gbc.setState(0x6eac, 0x2cfc, 0xd90, 0xfb1a, 0xcaa3, 0xc366, 0x1, 0x0);
        gbc.writeMem(0x6eac, { 0x95 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x2cfc, gbc.sp());
        EXPECT(0x6ead, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0113
        gbc.setState(0x839e, 0x3a82, 0x6530, 0x6545, 0xb91c, 0xe5dd, 0x1, 0x1);
        gbc.writeMem(0x839e, { 0x95 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x3a82, gbc.sp());
        EXPECT(0x839f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x839e));
        // 95 0114
        gbc.setState(0x542c, 0x46d7, 0xdb80, 0x2593, 0xafac, 0x2f5d, 0x1, 0x0);
        gbc.writeMem(0x542c, { 0x95 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x46d7, gbc.sp());
        EXPECT(0x542d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0115
        gbc.setState(0x4262, 0xbf55, 0xb0b0, 0x4bf9, 0xcef3, 0xcc4, 0x0, 0x0);
        gbc.writeMem(0x4262, { 0x95 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xbf55, gbc.sp());
        EXPECT(0x4263, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0116
        gbc.setState(0x5e39, 0xaabc, 0x6940, 0xa009, 0x8ff4, 0x1251, 0x0, 0x1);
        gbc.writeMem(0x5e39, { 0x95 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xaabc, gbc.sp());
        EXPECT(0x5e3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0117
        gbc.setState(0xe6c7, 0xaada, 0x7ac0, 0x15bb, 0xdd30, 0x31de, 0x0, 0x1);
        gbc.writeMem(0xe6c7, { 0x95 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xaada, gbc.sp());
        EXPECT(0xe6c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xe6c7));
        // 95 0118
        gbc.setState(0xd9bb, 0x986c, 0x97a0, 0xfe1c, 0x8fe3, 0x7656, 0x1, 0x0);
        gbc.writeMem(0xd9bb, { 0x95 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x986c, gbc.sp());
        EXPECT(0xd9bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xd9bb));
        // 95 0119
        gbc.setState(0x2c85, 0x41eb, 0xbc00, 0x472d, 0x6a0, 0xa255, 0x1, 0x0);
        gbc.writeMem(0x2c85, { 0x95 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x41eb, gbc.sp());
        EXPECT(0x2c86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 011A
        gbc.setState(0x27f1, 0xf591, 0x9ae0, 0x2a64, 0xee03, 0x7f8d, 0x0, 0x0);
        gbc.writeMem(0x27f1, { 0x95 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xf591, gbc.sp());
        EXPECT(0x27f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 011B
        gbc.setState(0x1fea, 0xc578, 0x1230, 0xae8f, 0x5a68, 0x4433, 0x0, 0x0);
        gbc.writeMem(0x1fea, { 0x95 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xc578, gbc.sp());
        EXPECT(0x1feb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 011C
        gbc.setState(0x8fc8, 0x5c36, 0xaf80, 0x34e3, 0x786b, 0x174e, 0x0, 0x0);
        gbc.writeMem(0x8fc8, { 0x95 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x5c36, gbc.sp());
        EXPECT(0x8fc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x8fc8));
        // 95 011D
        gbc.setState(0x2421, 0x557e, 0x7a70, 0xe7ba, 0xbb29, 0xf4c1, 0x0, 0x1);
        gbc.writeMem(0x2421, { 0x95 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x557e, gbc.sp());
        EXPECT(0x2422, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 011E
        gbc.setState(0xa136, 0xea69, 0x10, 0x29b1, 0x9097, 0xf9ca, 0x0, 0x1);
        gbc.writeMem(0xa136, { 0x95 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xea69, gbc.sp());
        EXPECT(0xa137, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xa136));
        // 95 011F
        gbc.setState(0xb607, 0xb6b5, 0xa230, 0xb32, 0xd033, 0x2680, 0x0, 0x1);
        gbc.writeMem(0xb607, { 0x95 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xb6b5, gbc.sp());
        EXPECT(0xb608, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xb607));
        // 95 0120
        gbc.setState(0x19d, 0xe028, 0x21d0, 0x91d6, 0x90db, 0x68aa, 0x0, 0x1);
        gbc.writeMem(0x19d, { 0x95 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xe028, gbc.sp());
        EXPECT(0x19e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0121
        gbc.setState(0x540e, 0xb108, 0xbfb0, 0xedf8, 0x758b, 0xdc17, 0x0, 0x1);
        gbc.writeMem(0x540e, { 0x95 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xb108, gbc.sp());
        EXPECT(0x540f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0122
        gbc.setState(0x8e8d, 0x8d18, 0x9020, 0xc6c8, 0xf6b2, 0x2c19, 0x1, 0x0);
        gbc.writeMem(0x8e8d, { 0x95 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x8d18, gbc.sp());
        EXPECT(0x8e8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x8e8d));
        // 95 0123
        gbc.setState(0xdcda, 0xe345, 0xe000, 0xa0f7, 0x3ecd, 0xa881, 0x0, 0x1);
        gbc.writeMem(0xdcda, { 0x95 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xe345, gbc.sp());
        EXPECT(0xdcdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xdcda));
        // 95 0124
        gbc.setState(0xb90d, 0x3095, 0x3160, 0x48e8, 0xdb24, 0xd3bd, 0x0, 0x0);
        gbc.writeMem(0xb90d, { 0x95 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x3095, gbc.sp());
        EXPECT(0xb90e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xb90d));
        // 95 0126
        gbc.setState(0xecf5, 0x5d41, 0x7cb0, 0xbc3, 0x6acf, 0x98b9, 0x1, 0x0);
        gbc.writeMem(0xecf5, { 0x95 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x5d41, gbc.sp());
        EXPECT(0xecf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xecf5));
        // 95 0127
        gbc.setState(0x4695, 0x9c2f, 0x2f30, 0x892f, 0x4f7c, 0x1605, 0x1, 0x1);
        gbc.writeMem(0x4695, { 0x95 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x9c2f, gbc.sp());
        EXPECT(0x4696, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0128
        gbc.setState(0xce41, 0xe933, 0x7ec0, 0x2c02, 0xa352, 0xa253, 0x0, 0x1);
        gbc.writeMem(0xce41, { 0x95 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xe933, gbc.sp());
        EXPECT(0xce42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xce41));
        // 95 0129
        gbc.setState(0x9d4, 0x7ee8, 0x4510, 0x9554, 0xbae8, 0xb5f3, 0x0, 0x0);
        gbc.writeMem(0x9d4, { 0x95 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x7ee8, gbc.sp());
        EXPECT(0x9d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 012A
        gbc.setState(0x508e, 0xfa56, 0xd540, 0x7a84, 0x8a3, 0x6784, 0x1, 0x1);
        gbc.writeMem(0x508e, { 0x95 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xfa56, gbc.sp());
        EXPECT(0x508f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 012B
        gbc.setState(0xcf89, 0x194f, 0xa150, 0x8c02, 0x15f8, 0x5746, 0x1, 0x1);
        gbc.writeMem(0xcf89, { 0x95 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x194f, gbc.sp());
        EXPECT(0xcf8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xcf89));
        // 95 012C
        gbc.setState(0x9eaa, 0x5757, 0xac80, 0xf36, 0x72bb, 0x1291, 0x0, 0x0);
        gbc.writeMem(0x9eaa, { 0x95 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x5757, gbc.sp());
        EXPECT(0x9eab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x9eaa));
        // 95 012D
        gbc.setState(0x4588, 0x26c3, 0x4f0, 0xc77f, 0xfe6f, 0x17ab, 0x0, 0x1);
        gbc.writeMem(0x4588, { 0x95 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x26c3, gbc.sp());
        EXPECT(0x4589, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 012E
        gbc.setState(0xc723, 0xf2d9, 0x37e0, 0xc583, 0x7293, 0x4f11, 0x0, 0x0);
        gbc.writeMem(0xc723, { 0x95 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xf2d9, gbc.sp());
        EXPECT(0xc724, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xc723));
        // 95 012F
        gbc.setState(0xbadb, 0xae84, 0x2360, 0x74ef, 0x7899, 0x610b, 0x1, 0x1);
        gbc.writeMem(0xbadb, { 0x95 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xae84, gbc.sp());
        EXPECT(0xbadc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xbadb));
        // 95 0130
        gbc.setState(0xa291, 0xe94c, 0x6dc0, 0x1e9f, 0xf57, 0x2db3, 0x0, 0x1);
        gbc.writeMem(0xa291, { 0x95 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xe94c, gbc.sp());
        EXPECT(0xa292, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xa291));
        // 95 0131
        gbc.setState(0x8a40, 0x565c, 0xaeb0, 0x4c25, 0x82fc, 0xb74c, 0x1, 0x0);
        gbc.writeMem(0x8a40, { 0x95 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x565c, gbc.sp());
        EXPECT(0x8a41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x8a40));
        // 95 0132
        gbc.setState(0xcbd8, 0xa63c, 0xb290, 0xaaf, 0xf56c, 0xf047, 0x0, 0x1);
        gbc.writeMem(0xcbd8, { 0x95 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xa63c, gbc.sp());
        EXPECT(0xcbd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xcbd8));
        // 95 0133
        gbc.setState(0x633a, 0x78cd, 0xd090, 0x3724, 0x122c, 0xdb56, 0x1, 0x1);
        gbc.writeMem(0x633a, { 0x95 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x78cd, gbc.sp());
        EXPECT(0x633b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0134
        gbc.setState(0x6e1b, 0x780b, 0xf70, 0x314e, 0x5746, 0x7fa, 0x0, 0x0);
        gbc.writeMem(0x6e1b, { 0x95 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x780b, gbc.sp());
        EXPECT(0x6e1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0135
        gbc.setState(0x2fc8, 0xc657, 0x3ef0, 0x237d, 0x771c, 0x4efe, 0x0, 0x1);
        gbc.writeMem(0x2fc8, { 0x95 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xc657, gbc.sp());
        EXPECT(0x2fc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0136
        gbc.setState(0xda5, 0xa81, 0xb730, 0x5902, 0xadc3, 0xe8a7, 0x1, 0x1);
        gbc.writeMem(0xda5, { 0x95 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xa81, gbc.sp());
        EXPECT(0xda6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0137
        gbc.setState(0x2ae1, 0x617b, 0x5c20, 0x36b8, 0x1834, 0x1119, 0x0, 0x0);
        gbc.writeMem(0x2ae1, { 0x95 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x617b, gbc.sp());
        EXPECT(0x2ae2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0138
        gbc.setState(0xcd83, 0x1aee, 0xef50, 0xcd21, 0x962e, 0xf640, 0x1, 0x0);
        gbc.writeMem(0xcd83, { 0x95 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x1aee, gbc.sp());
        EXPECT(0xcd84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xcd83));
        // 95 0139
        gbc.setState(0x227a, 0xcaa1, 0x170, 0x355c, 0x61c3, 0xd6be, 0x0, 0x1);
        gbc.writeMem(0x227a, { 0x95 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xcaa1, gbc.sp());
        EXPECT(0x227b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 013A
        gbc.setState(0xdcbe, 0xb46f, 0x5ed0, 0xa0b, 0xe24d, 0xff8, 0x0, 0x0);
        gbc.writeMem(0xdcbe, { 0x95 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xb46f, gbc.sp());
        EXPECT(0xdcbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xdcbe));
        // 95 013B
        gbc.setState(0x874c, 0xc8aa, 0x41c0, 0xcd43, 0x9a7f, 0xee1c, 0x1, 0x1);
        gbc.writeMem(0x874c, { 0x95 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xc8aa, gbc.sp());
        EXPECT(0x874d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x874c));
        // 95 013C
        gbc.setState(0x10ad, 0xd6b9, 0xdef0, 0x3fc0, 0x36a7, 0x75af, 0x1, 0x0);
        gbc.writeMem(0x10ad, { 0x95 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xd6b9, gbc.sp());
        EXPECT(0x10ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 013D
        gbc.setState(0xc936, 0x50f8, 0xe9d0, 0x972a, 0x275f, 0xc8c4, 0x0, 0x0);
        gbc.writeMem(0xc936, { 0x95 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x50f8, gbc.sp());
        EXPECT(0xc937, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xc936));
        // 95 013E
        gbc.setState(0xbe42, 0xa5fd, 0x2810, 0xea10, 0xe5e2, 0xe7be, 0x1, 0x1);
        gbc.writeMem(0xbe42, { 0x95 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xa5fd, gbc.sp());
        EXPECT(0xbe43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xbe42));
        // 95 013F
        gbc.setState(0xd9bc, 0x863, 0x7b10, 0x5330, 0xa75d, 0x79d5, 0x1, 0x0);
        gbc.writeMem(0xd9bc, { 0x95 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x863, gbc.sp());
        EXPECT(0xd9bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xd9bc));
        // 95 0140
        gbc.setState(0xbc71, 0x28da, 0x3600, 0x624d, 0x66c4, 0xdf6f, 0x1, 0x0);
        gbc.writeMem(0xbc71, { 0x95 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x28da, gbc.sp());
        EXPECT(0xbc72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xbc71));
        // 95 0141
        gbc.setState(0x5ce5, 0xb10c, 0x2030, 0x9d13, 0xb58b, 0x51dc, 0x1, 0x1);
        gbc.writeMem(0x5ce5, { 0x95 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xb10c, gbc.sp());
        EXPECT(0x5ce6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0142
        gbc.setState(0x8473, 0x2f99, 0xc0f0, 0x351, 0x8fb8, 0x253d, 0x0, 0x0);
        gbc.writeMem(0x8473, { 0x95 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x2f99, gbc.sp());
        EXPECT(0x8474, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x8473));
        // 95 0143
        gbc.setState(0xc531, 0x6fd9, 0xc510, 0x76a, 0x6b4c, 0xd9e4, 0x1, 0x0);
        gbc.writeMem(0xc531, { 0x95 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x6fd9, gbc.sp());
        EXPECT(0xc532, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xc531));
        // 95 0144
        gbc.setState(0x2ce4, 0x9c96, 0x7f30, 0xfed1, 0xecfb, 0xc775, 0x0, 0x0);
        gbc.writeMem(0x2ce4, { 0x95 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x9c96, gbc.sp());
        EXPECT(0x2ce5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0145
        gbc.setState(0x9628, 0xf0f, 0xbd90, 0xac5, 0xd41e, 0xf171, 0x1, 0x0);
        gbc.writeMem(0x9628, { 0x95 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xf0f, gbc.sp());
        EXPECT(0x9629, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x9628));
        // 95 0146
        gbc.setState(0xe57c, 0xd792, 0x5750, 0x1f8d, 0x7ad7, 0x772a, 0x0, 0x1);
        gbc.writeMem(0xe57c, { 0x95 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xd792, gbc.sp());
        EXPECT(0xe57d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xe57c));
        // 95 0147
        gbc.setState(0x7984, 0x8d95, 0x4a50, 0xd39a, 0x5f72, 0x3959, 0x1, 0x0);
        gbc.writeMem(0x7984, { 0x95 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x8d95, gbc.sp());
        EXPECT(0x7985, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0148
        gbc.setState(0x8d44, 0xb13a, 0xdb50, 0x5c5b, 0x4f54, 0x878, 0x0, 0x1);
        gbc.writeMem(0x8d44, { 0x95 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xb13a, gbc.sp());
        EXPECT(0x8d45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x8d44));
        // 95 0149
        gbc.setState(0x3858, 0x25a3, 0xfae0, 0x2437, 0x159b, 0x319d, 0x0, 0x0);
        gbc.writeMem(0x3858, { 0x95 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x25a3, gbc.sp());
        EXPECT(0x3859, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 014A
        gbc.setState(0x2548, 0xb209, 0x7240, 0xb360, 0x51d, 0x15aa, 0x0, 0x1);
        gbc.writeMem(0x2548, { 0x95 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xb209, gbc.sp());
        EXPECT(0x2549, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 014B
        gbc.setState(0xd42a, 0x1d99, 0x90f0, 0xae3c, 0xcb69, 0x61cc, 0x1, 0x0);
        gbc.writeMem(0xd42a, { 0x95 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x1d99, gbc.sp());
        EXPECT(0xd42b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xd42a));
        // 95 014C
        gbc.setState(0xd86f, 0x62e9, 0x82d0, 0xbe1e, 0xf502, 0x65ff, 0x1, 0x1);
        gbc.writeMem(0xd86f, { 0x95 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x62e9, gbc.sp());
        EXPECT(0xd870, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xd86f));
        // 95 014D
        gbc.setState(0x6954, 0x47a7, 0xc9a0, 0xb10c, 0x5c16, 0x3084, 0x0, 0x1);
        gbc.writeMem(0x6954, { 0x95 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x47a7, gbc.sp());
        EXPECT(0x6955, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 014E
        gbc.setState(0x806d, 0xed58, 0xc6b0, 0xa40c, 0xb710, 0x3da5, 0x0, 0x1);
        gbc.writeMem(0x806d, { 0x95 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xed58, gbc.sp());
        EXPECT(0x806e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x806d));
        // 95 014F
        gbc.setState(0xae2f, 0x6071, 0x55f0, 0x99d8, 0xfe09, 0xe7a4, 0x1, 0x0);
        gbc.writeMem(0xae2f, { 0x95 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x6071, gbc.sp());
        EXPECT(0xae30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xae2f));
        // 95 0150
        gbc.setState(0xcd9a, 0x7bcb, 0x24b0, 0x665f, 0x307c, 0xfc56, 0x0, 0x1);
        gbc.writeMem(0xcd9a, { 0x95 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x7bcb, gbc.sp());
        EXPECT(0xcd9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xcd9a));
        // 95 0151
        gbc.setState(0x3c68, 0x516a, 0x6a70, 0x584, 0xf5c6, 0xc8ac, 0x1, 0x1);
        gbc.writeMem(0x3c68, { 0x95 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x516a, gbc.sp());
        EXPECT(0x3c69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0152
        gbc.setState(0xa546, 0x46ba, 0x9740, 0x7953, 0x63a8, 0xf6d9, 0x1, 0x1);
        gbc.writeMem(0xa546, { 0x95 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x46ba, gbc.sp());
        EXPECT(0xa547, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xa546));
        // 95 0153
        gbc.setState(0x1d81, 0x203, 0x7eb0, 0x2b7b, 0x11ba, 0x8c75, 0x1, 0x0);
        gbc.writeMem(0x1d81, { 0x95 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x203, gbc.sp());
        EXPECT(0x1d82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0154
        gbc.setState(0x28fe, 0x8e88, 0x67e0, 0xc34c, 0x3421, 0x832f, 0x0, 0x0);
        gbc.writeMem(0x28fe, { 0x95 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x8e88, gbc.sp());
        EXPECT(0x28ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0155
        gbc.setState(0xd80c, 0xf21e, 0x6390, 0x1070, 0x901e, 0x79d3, 0x1, 0x0);
        gbc.writeMem(0xd80c, { 0x95 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xf21e, gbc.sp());
        EXPECT(0xd80d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xd80c));
        // 95 0156
        gbc.setState(0x4944, 0xd18, 0xf20, 0x996d, 0xd513, 0x3990, 0x1, 0x0);
        gbc.writeMem(0x4944, { 0x95 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xd18, gbc.sp());
        EXPECT(0x4945, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0157
        gbc.setState(0x929c, 0x357f, 0xd860, 0x4c38, 0x4928, 0x88f8, 0x0, 0x0);
        gbc.writeMem(0x929c, { 0x95 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x357f, gbc.sp());
        EXPECT(0x929d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x929c));
        // 95 0159
        gbc.setState(0x5a45, 0x9ee8, 0x8fd0, 0x77eb, 0x6196, 0x5f88, 0x0, 0x1);
        gbc.writeMem(0x5a45, { 0x95 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x9ee8, gbc.sp());
        EXPECT(0x5a46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 015A
        gbc.setState(0xde6f, 0x1805, 0x6b70, 0x55e0, 0xe892, 0xf480, 0x1, 0x0);
        gbc.writeMem(0xde6f, { 0x95 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x1805, gbc.sp());
        EXPECT(0xde70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xde6f));
        // 95 015B
        gbc.setState(0x75b8, 0x741e, 0x6e10, 0xa0c4, 0xce6e, 0x8389, 0x1, 0x1);
        gbc.writeMem(0x75b8, { 0x95 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x741e, gbc.sp());
        EXPECT(0x75b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 015C
        gbc.setState(0xd585, 0xda5e, 0xae80, 0x76f1, 0xee20, 0x3907, 0x0, 0x0);
        gbc.writeMem(0xd585, { 0x95 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xda5e, gbc.sp());
        EXPECT(0xd586, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xd585));
        // 95 015D
        gbc.setState(0x2109, 0x1dc9, 0xbc0, 0x157c, 0xe21c, 0x71b7, 0x0, 0x1);
        gbc.writeMem(0x2109, { 0x95 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x1dc9, gbc.sp());
        EXPECT(0x210a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 015E
        gbc.setState(0xe14, 0xa710, 0x3d80, 0xdbaa, 0xa3, 0xe4fe, 0x0, 0x0);
        gbc.writeMem(0xe14, { 0x95 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xa710, gbc.sp());
        EXPECT(0xe15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 015F
        gbc.setState(0xa61f, 0xf820, 0x5db0, 0xe0d4, 0x9e61, 0xdcfe, 0x0, 0x1);
        gbc.writeMem(0xa61f, { 0x95 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xf820, gbc.sp());
        EXPECT(0xa620, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xa61f));
        // 95 0160
        gbc.setState(0x220b, 0xe740, 0x2500, 0xdc97, 0x5846, 0x5707, 0x0, 0x0);
        gbc.writeMem(0x220b, { 0x95 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xe740, gbc.sp());
        EXPECT(0x220c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0161
        gbc.setState(0x95ce, 0xffaf, 0x7fe0, 0xec4d, 0xe918, 0x85d3, 0x0, 0x0);
        gbc.writeMem(0x95ce, { 0x95 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xffaf, gbc.sp());
        EXPECT(0x95cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x95ce));
        // 95 0162
        gbc.setState(0xef40, 0xc28a, 0x3260, 0x2e7, 0xf8e7, 0x68f0, 0x1, 0x0);
        gbc.writeMem(0xef40, { 0x95 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xc28a, gbc.sp());
        EXPECT(0xef41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xef40));
        // 95 0163
        gbc.setState(0xc86, 0xee48, 0xef10, 0x12ef, 0x431d, 0x8de4, 0x0, 0x1);
        gbc.writeMem(0xc86, { 0x95 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xee48, gbc.sp());
        EXPECT(0xc87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0165
        gbc.setState(0x75b9, 0xded9, 0xa710, 0x6fe4, 0x6843, 0x3890, 0x1, 0x0);
        gbc.writeMem(0x75b9, { 0x95 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xded9, gbc.sp());
        EXPECT(0x75ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0166
        gbc.setState(0x20f1, 0xcd26, 0xc550, 0xc5a1, 0x646, 0xd1a8, 0x0, 0x1);
        gbc.writeMem(0x20f1, { 0x95 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xcd26, gbc.sp());
        EXPECT(0x20f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0167
        gbc.setState(0x8033, 0x71c1, 0xfdb0, 0x87d7, 0xaf83, 0x4893, 0x1, 0x1);
        gbc.writeMem(0x8033, { 0x95 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x71c1, gbc.sp());
        EXPECT(0x8034, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x8033));
        // 95 0168
        gbc.setState(0x43a, 0x954d, 0x5970, 0x94b, 0x85d7, 0xeebc, 0x1, 0x0);
        gbc.writeMem(0x43a, { 0x95 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x954d, gbc.sp());
        EXPECT(0x43b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0169
        gbc.setState(0x65d9, 0x7c11, 0xe170, 0x31f6, 0xaab0, 0x8318, 0x1, 0x1);
        gbc.writeMem(0x65d9, { 0x95 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x7c11, gbc.sp());
        EXPECT(0x65da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 016A
        gbc.setState(0xb5e8, 0x3fc2, 0x42b0, 0x6100, 0xa1d6, 0xa29d, 0x1, 0x1);
        gbc.writeMem(0xb5e8, { 0x95 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x3fc2, gbc.sp());
        EXPECT(0xb5e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xb5e8));
        // 95 016B
        gbc.setState(0xcbbf, 0xa311, 0x7ed0, 0x3301, 0x72ad, 0x87b2, 0x1, 0x0);
        gbc.writeMem(0xcbbf, { 0x95 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xa311, gbc.sp());
        EXPECT(0xcbc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xcbbf));
        // 95 016C
        gbc.setState(0x5cfe, 0xb745, 0x5360, 0x875f, 0x16be, 0x84be, 0x1, 0x1);
        gbc.writeMem(0x5cfe, { 0x95 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xb745, gbc.sp());
        EXPECT(0x5cff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 016D
        gbc.setState(0x68e3, 0x5c98, 0x66b0, 0x49fa, 0xf1fe, 0xce72, 0x0, 0x1);
        gbc.writeMem(0x68e3, { 0x95 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x5c98, gbc.sp());
        EXPECT(0x68e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 016E
        gbc.setState(0x4bb7, 0xad9a, 0x3700, 0xf614, 0x38e7, 0xdeee, 0x1, 0x1);
        gbc.writeMem(0x4bb7, { 0x95 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xad9a, gbc.sp());
        EXPECT(0x4bb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 016F
        gbc.setState(0x516d, 0xd788, 0xa1f0, 0x9306, 0x386, 0x9bcd, 0x0, 0x0);
        gbc.writeMem(0x516d, { 0x95 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd788, gbc.sp());
        EXPECT(0x516e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0170
        gbc.setState(0x842, 0x186, 0x1be0, 0x1b07, 0x8996, 0xf0ad, 0x0, 0x1);
        gbc.writeMem(0x842, { 0x95 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x186, gbc.sp());
        EXPECT(0x843, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0171
        gbc.setState(0xc997, 0x6799, 0x40, 0x2bbe, 0xea91, 0x35ea, 0x1, 0x1);
        gbc.writeMem(0xc997, { 0x95 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x6799, gbc.sp());
        EXPECT(0xc998, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xc997));
        // 95 0172
        gbc.setState(0x98ff, 0xb9ee, 0xbc50, 0x1cc2, 0xa2fe, 0x9fcf, 0x0, 0x0);
        gbc.writeMem(0x98ff, { 0x95 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xb9ee, gbc.sp());
        EXPECT(0x9900, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x98ff));
        // 95 0173
        gbc.setState(0x5800, 0xf248, 0xe6f0, 0x6935, 0x78c8, 0xd623, 0x0, 0x0);
        gbc.writeMem(0x5800, { 0x95 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xf248, gbc.sp());
        EXPECT(0x5801, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0174
        gbc.setState(0x892a, 0xdead, 0x2410, 0x2be8, 0x23e1, 0x8121, 0x1, 0x1);
        gbc.writeMem(0x892a, { 0x95 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xdead, gbc.sp());
        EXPECT(0x892b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x892a));
        // 95 0175
        gbc.setState(0x4fec, 0x7e24, 0x1c0, 0xbf6d, 0xb4c1, 0xa8ec, 0x0, 0x0);
        gbc.writeMem(0x4fec, { 0x95 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x7e24, gbc.sp());
        EXPECT(0x4fed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0176
        gbc.setState(0x7754, 0x77c6, 0x6660, 0xdb61, 0x6add, 0xe2d1, 0x1, 0x1);
        gbc.writeMem(0x7754, { 0x95 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x77c6, gbc.sp());
        EXPECT(0x7755, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0177
        gbc.setState(0xac5, 0x7b49, 0x55a0, 0x4b0a, 0xc689, 0xbbef, 0x1, 0x1);
        gbc.writeMem(0xac5, { 0x95 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x7b49, gbc.sp());
        EXPECT(0xac6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0178
        gbc.setState(0x76d6, 0xe949, 0xbef0, 0xc188, 0xd10e, 0x2548, 0x1, 0x1);
        gbc.writeMem(0x76d6, { 0x95 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xe949, gbc.sp());
        EXPECT(0x76d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0179
        gbc.setState(0x8002, 0xbc2c, 0xd2c0, 0x145a, 0x45ec, 0x493b, 0x0, 0x0);
        gbc.writeMem(0x8002, { 0x95 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xbc2c, gbc.sp());
        EXPECT(0x8003, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x8002));
        // 95 017A
        gbc.setState(0x44eb, 0x5b8, 0xa4c0, 0x628a, 0x4713, 0xecb9, 0x0, 0x0);
        gbc.writeMem(0x44eb, { 0x95 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x5b8, gbc.sp());
        EXPECT(0x44ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 017B
        gbc.setState(0x59d5, 0xcc22, 0xb8a0, 0xb2fc, 0x7232, 0x6cf5, 0x1, 0x0);
        gbc.writeMem(0x59d5, { 0x95 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xcc22, gbc.sp());
        EXPECT(0x59d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 017C
        gbc.setState(0x9baf, 0xa891, 0x5d90, 0xcff3, 0x7e34, 0xf9cd, 0x0, 0x1);
        gbc.writeMem(0x9baf, { 0x95 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xa891, gbc.sp());
        EXPECT(0x9bb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x9baf));
        // 95 017D
        gbc.setState(0xeb1c, 0x78f1, 0xcc00, 0x3886, 0xd9fb, 0xcd33, 0x0, 0x0);
        gbc.writeMem(0xeb1c, { 0x95 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x78f1, gbc.sp());
        EXPECT(0xeb1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xeb1c));
        // 95 017E
        gbc.setState(0xadcd, 0x6136, 0xc7d0, 0xda8, 0xe4c3, 0xce7d, 0x0, 0x1);
        gbc.writeMem(0xadcd, { 0x95 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x6136, gbc.sp());
        EXPECT(0xadce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xadcd));
        // 95 017F
        gbc.setState(0x7496, 0x2560, 0x1b30, 0x665, 0xe052, 0xd939, 0x0, 0x1);
        gbc.writeMem(0x7496, { 0x95 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x2560, gbc.sp());
        EXPECT(0x7497, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0180
        gbc.setState(0xed6, 0xc277, 0xf500, 0xa665, 0xd6a3, 0xfe34, 0x0, 0x0);
        gbc.writeMem(0xed6, { 0x95 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc277, gbc.sp());
        EXPECT(0xed7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0181
        gbc.setState(0x2fe4, 0x339, 0x670, 0x3a54, 0x9819, 0x13c5, 0x0, 0x1);
        gbc.writeMem(0x2fe4, { 0x95 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x339, gbc.sp());
        EXPECT(0x2fe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0182
        gbc.setState(0x4fba, 0x793f, 0x8da0, 0x9f72, 0x47f4, 0xf88b, 0x0, 0x0);
        gbc.writeMem(0x4fba, { 0x95 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x793f, gbc.sp());
        EXPECT(0x4fbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0183
        gbc.setState(0x80e7, 0x87f0, 0x2400, 0x6d96, 0xf433, 0x67af, 0x0, 0x0);
        gbc.writeMem(0x80e7, { 0x95 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x87f0, gbc.sp());
        EXPECT(0x80e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x80e7));
        // 95 0184
        gbc.setState(0xb614, 0x2eba, 0xc760, 0x342f, 0x4ab6, 0xe63e, 0x1, 0x1);
        gbc.writeMem(0xb614, { 0x95 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x2eba, gbc.sp());
        EXPECT(0xb615, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xb614));
        // 95 0185
        gbc.setState(0x4fb5, 0xb2c2, 0x6980, 0x88d3, 0x604f, 0x6020, 0x0, 0x1);
        gbc.writeMem(0x4fb5, { 0x95 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xb2c2, gbc.sp());
        EXPECT(0x4fb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0186
        gbc.setState(0x346f, 0x8a02, 0x3d30, 0x42dd, 0x8389, 0x6472, 0x0, 0x1);
        gbc.writeMem(0x346f, { 0x95 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x8a02, gbc.sp());
        EXPECT(0x3470, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0187
        gbc.setState(0x2641, 0x9b5f, 0x7620, 0x71b2, 0x8df7, 0x4160, 0x0, 0x1);
        gbc.writeMem(0x2641, { 0x95 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x9b5f, gbc.sp());
        EXPECT(0x2642, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0188
        gbc.setState(0x59db, 0xeab1, 0xe540, 0xfc6c, 0x7020, 0x588e, 0x1, 0x1);
        gbc.writeMem(0x59db, { 0x95 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xeab1, gbc.sp());
        EXPECT(0x59dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0189
        gbc.setState(0x270e, 0xe298, 0xef30, 0x8419, 0xc7de, 0x7f3e, 0x1, 0x1);
        gbc.writeMem(0x270e, { 0x95 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xe298, gbc.sp());
        EXPECT(0x270f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 018A
        gbc.setState(0x92c3, 0x5784, 0x8890, 0x16ec, 0x3e13, 0xf65d, 0x0, 0x1);
        gbc.writeMem(0x92c3, { 0x95 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x5784, gbc.sp());
        EXPECT(0x92c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x92c3));
        // 95 018B
        gbc.setState(0x4802, 0x70e5, 0x1240, 0x7d48, 0xa983, 0x130c, 0x1, 0x0);
        gbc.writeMem(0x4802, { 0x95 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x70e5, gbc.sp());
        EXPECT(0x4803, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 018C
        gbc.setState(0xd551, 0xc5ae, 0x32c0, 0xa940, 0x3d0e, 0x9313, 0x1, 0x1);
        gbc.writeMem(0xd551, { 0x95 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xc5ae, gbc.sp());
        EXPECT(0xd552, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xd551));
        // 95 018D
        gbc.setState(0xb77d, 0xda20, 0x43b0, 0x30be, 0x5ca5, 0x8fbc, 0x0, 0x0);
        gbc.writeMem(0xb77d, { 0x95 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xda20, gbc.sp());
        EXPECT(0xb77e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xb77d));
        // 95 018E
        gbc.setState(0x790d, 0xc66, 0x8c40, 0xf703, 0x1246, 0x9b3e, 0x1, 0x0);
        gbc.writeMem(0x790d, { 0x95 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xc66, gbc.sp());
        EXPECT(0x790e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 018F
        gbc.setState(0x2157, 0x1fe1, 0x5310, 0xf2b, 0x1a8, 0x9a2b, 0x0, 0x1);
        gbc.writeMem(0x2157, { 0x95 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x1fe1, gbc.sp());
        EXPECT(0x2158, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0190
        gbc.setState(0x3874, 0xacd3, 0x8cf0, 0x44be, 0xb7ce, 0xe020, 0x1, 0x1);
        gbc.writeMem(0x3874, { 0x95 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xacd3, gbc.sp());
        EXPECT(0x3875, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0191
        gbc.setState(0xed36, 0xbf02, 0xe290, 0x4baf, 0x896c, 0x5d5b, 0x0, 0x0);
        gbc.writeMem(0xed36, { 0x95 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xbf02, gbc.sp());
        EXPECT(0xed37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xed36));
        // 95 0192
        gbc.setState(0x4015, 0x69e0, 0x9600, 0x55c4, 0x305b, 0x7662, 0x1, 0x1);
        gbc.writeMem(0x4015, { 0x95 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x69e0, gbc.sp());
        EXPECT(0x4016, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0193
        gbc.setState(0x4d29, 0x6c85, 0x78f0, 0xa433, 0x7fc9, 0x2cab, 0x0, 0x1);
        gbc.writeMem(0x4d29, { 0x95 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x6c85, gbc.sp());
        EXPECT(0x4d2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0194
        gbc.setState(0x39b8, 0x82ac, 0xeef0, 0x6151, 0x8d1d, 0x2e4e, 0x1, 0x0);
        gbc.writeMem(0x39b8, { 0x95 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x82ac, gbc.sp());
        EXPECT(0x39b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0195
        gbc.setState(0x424c, 0xabf5, 0xa0, 0x4aa0, 0x61c9, 0xce2, 0x0, 0x0);
        gbc.writeMem(0x424c, { 0x95 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xabf5, gbc.sp());
        EXPECT(0x424d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0196
        gbc.setState(0x1112, 0x6fde, 0xcc00, 0x22c0, 0x8188, 0x7153, 0x1, 0x0);
        gbc.writeMem(0x1112, { 0x95 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x6fde, gbc.sp());
        EXPECT(0x1113, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0197
        gbc.setState(0xa239, 0x6afe, 0xed40, 0x5033, 0xe39e, 0x977, 0x0, 0x0);
        gbc.writeMem(0xa239, { 0x95 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x6afe, gbc.sp());
        EXPECT(0xa23a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xa239));
        // 95 0198
        gbc.setState(0x2e7b, 0xfdaf, 0x7e0, 0x35e1, 0xa157, 0xaafc, 0x0, 0x1);
        gbc.writeMem(0x2e7b, { 0x95 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xfdaf, gbc.sp());
        EXPECT(0x2e7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0199
        gbc.setState(0x1d6f, 0x14b3, 0xd010, 0x654d, 0x22d5, 0xfd18, 0x1, 0x1);
        gbc.writeMem(0x1d6f, { 0x95 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x14b3, gbc.sp());
        EXPECT(0x1d70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 019A
        gbc.setState(0xad6d, 0x727e, 0x7930, 0x2bd, 0xe1cc, 0x97b6, 0x0, 0x1);
        gbc.writeMem(0xad6d, { 0x95 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x727e, gbc.sp());
        EXPECT(0xad6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xad6d));
        // 95 019B
        gbc.setState(0x2cd7, 0x34ac, 0xa6e0, 0xdf1d, 0x10ff, 0x219d, 0x1, 0x1);
        gbc.writeMem(0x2cd7, { 0x95 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x34ac, gbc.sp());
        EXPECT(0x2cd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 019C
        gbc.setState(0x6eb1, 0x8eb2, 0x5b10, 0xe68b, 0x9a24, 0xf088, 0x1, 0x1);
        gbc.writeMem(0x6eb1, { 0x95 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x8eb2, gbc.sp());
        EXPECT(0x6eb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 019D
        gbc.setState(0x8436, 0x2dda, 0x1370, 0x95a, 0x8f46, 0xc018, 0x0, 0x1);
        gbc.writeMem(0x8436, { 0x95 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x2dda, gbc.sp());
        EXPECT(0x8437, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x8436));
        // 95 019E
        gbc.setState(0xca1f, 0x7687, 0x8ec0, 0x4c1f, 0x3c18, 0xa148, 0x0, 0x0);
        gbc.writeMem(0xca1f, { 0x95 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x7687, gbc.sp());
        EXPECT(0xca20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xca1f));
        // 95 019F
        gbc.setState(0xe547, 0x9549, 0xdb00, 0x6180, 0x2d96, 0x89d8, 0x1, 0x1);
        gbc.writeMem(0xe547, { 0x95 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x9549, gbc.sp());
        EXPECT(0xe548, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xe547));
        // 95 01A0
        gbc.setState(0x421d, 0x50d3, 0x8900, 0x5ec7, 0x531d, 0xa6a0, 0x1, 0x1);
        gbc.writeMem(0x421d, { 0x95 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x50d3, gbc.sp());
        EXPECT(0x421e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 01A1
        gbc.setState(0x6009, 0xa7ea, 0x73f0, 0x670f, 0x8d45, 0x62aa, 0x1, 0x0);
        gbc.writeMem(0x6009, { 0x95 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xa7ea, gbc.sp());
        EXPECT(0x600a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 01A2
        gbc.setState(0x6d3a, 0xa2dd, 0xf4a0, 0x9e80, 0xd9f9, 0x7b58, 0x0, 0x0);
        gbc.writeMem(0x6d3a, { 0x95 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xa2dd, gbc.sp());
        EXPECT(0x6d3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 01A3
        gbc.setState(0xa5f, 0x7cdc, 0xb100, 0x8ed6, 0xa59c, 0xdd2, 0x1, 0x1);
        gbc.writeMem(0xa5f, { 0x95 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x7cdc, gbc.sp());
        EXPECT(0xa60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 01A4
        gbc.setState(0x3189, 0xf40c, 0xb8e0, 0xf454, 0x790d, 0x7de7, 0x0, 0x1);
        gbc.writeMem(0x3189, { 0x95 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xf40c, gbc.sp());
        EXPECT(0x318a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 01A5
        gbc.setState(0x12f9, 0x9422, 0xb3e0, 0x8c22, 0x4492, 0xe59a, 0x1, 0x1);
        gbc.writeMem(0x12f9, { 0x95 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x9422, gbc.sp());
        EXPECT(0x12fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 01A6
        gbc.setState(0x5c0b, 0x3d57, 0x5970, 0x178f, 0x687c, 0x8eb6, 0x0, 0x1);
        gbc.writeMem(0x5c0b, { 0x95 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x3d57, gbc.sp());
        EXPECT(0x5c0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 01A7
        gbc.setState(0xa77c, 0xaf28, 0xd230, 0x6b42, 0x3c51, 0x964, 0x0, 0x1);
        gbc.writeMem(0xa77c, { 0x95 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xaf28, gbc.sp());
        EXPECT(0xa77d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xa77c));
        // 95 01A8
        gbc.setState(0xdfe, 0xbaba, 0xf7e0, 0x835e, 0x8149, 0x75c9, 0x0, 0x1);
        gbc.writeMem(0xdfe, { 0x95 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xbaba, gbc.sp());
        EXPECT(0xdff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 01A9
        gbc.setState(0x4eb, 0x7fc, 0xfdf0, 0x8ccf, 0x327, 0x2e32, 0x0, 0x1);
        gbc.writeMem(0x4eb, { 0x95 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x7fc, gbc.sp());
        EXPECT(0x4ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 01AA
        gbc.setState(0xda9, 0x2207, 0x1910, 0xeaaf, 0x14e2, 0x9cbd, 0x1, 0x0);
        gbc.writeMem(0xda9, { 0x95 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x2207, gbc.sp());
        EXPECT(0xdaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 01AB
        gbc.setState(0x5f4b, 0x584c, 0x8580, 0x3c22, 0xf915, 0x5862, 0x0, 0x1);
        gbc.writeMem(0x5f4b, { 0x95 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x584c, gbc.sp());
        EXPECT(0x5f4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 01AC
        gbc.setState(0x5db, 0xa669, 0x2a40, 0x142d, 0x7ffa, 0x3cc6, 0x0, 0x1);
        gbc.writeMem(0x5db, { 0x95 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xa669, gbc.sp());
        EXPECT(0x5dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 01AD
        gbc.setState(0x40e3, 0xbaa7, 0x8c80, 0x43d2, 0x864b, 0x1347, 0x0, 0x1);
        gbc.writeMem(0x40e3, { 0x95 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xbaa7, gbc.sp());
        EXPECT(0x40e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 01AE
        gbc.setState(0x91f6, 0x1ab2, 0xc930, 0xb2bc, 0xbb58, 0x47b1, 0x0, 0x1);
        gbc.writeMem(0x91f6, { 0x95 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x1ab2, gbc.sp());
        EXPECT(0x91f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x91f6));
        // 95 01AF
        gbc.setState(0x626d, 0xee7b, 0x8430, 0x6bdf, 0x160f, 0xf767, 0x0, 0x1);
        gbc.writeMem(0x626d, { 0x95 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xee7b, gbc.sp());
        EXPECT(0x626e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 01B0
        gbc.setState(0xe1f8, 0xfa8, 0x5770, 0xbe25, 0x831, 0xa55, 0x0, 0x0);
        gbc.writeMem(0xe1f8, { 0x95 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xfa8, gbc.sp());
        EXPECT(0xe1f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xe1f8));
        // 95 01B1
        gbc.setState(0x93ce, 0x1f43, 0xb730, 0xa903, 0xccb6, 0x3a59, 0x1, 0x0);
        gbc.writeMem(0x93ce, { 0x95 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x1f43, gbc.sp());
        EXPECT(0x93cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x93ce));
        // 95 01B2
        gbc.setState(0x9af5, 0xa7bf, 0x4ea0, 0xc8f1, 0xb3a5, 0x91a7, 0x1, 0x0);
        gbc.writeMem(0x9af5, { 0x95 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xa7bf, gbc.sp());
        EXPECT(0x9af6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x9af5));
        // 95 01B3
        gbc.setState(0xad82, 0x3fe0, 0x680, 0x960f, 0xa68c, 0xc881, 0x0, 0x0);
        gbc.writeMem(0xad82, { 0x95 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x3fe0, gbc.sp());
        EXPECT(0xad83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xad82));
        // 95 01B4
        gbc.setState(0xc8dd, 0xe616, 0xc3b0, 0xcd65, 0x984d, 0xf31e, 0x1, 0x0);
        gbc.writeMem(0xc8dd, { 0x95 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xe616, gbc.sp());
        EXPECT(0xc8de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xc8dd));
        // 95 01B5
        gbc.setState(0x5239, 0x2105, 0x8220, 0xc82b, 0x5052, 0x9481, 0x1, 0x1);
        gbc.writeMem(0x5239, { 0x95 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x2105, gbc.sp());
        EXPECT(0x523a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 01B6
        gbc.setState(0xebc3, 0x2f58, 0xf280, 0xb108, 0x96f5, 0xb4b2, 0x0, 0x1);
        gbc.writeMem(0xebc3, { 0x95 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x2f58, gbc.sp());
        EXPECT(0xebc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xebc3));
        // 95 01B7
        gbc.setState(0xbd1f, 0x4652, 0x8930, 0x72f, 0x8e31, 0xf98b, 0x0, 0x0);
        gbc.writeMem(0xbd1f, { 0x95 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x4652, gbc.sp());
        EXPECT(0xbd20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xbd1f));
        // 95 01B8
        gbc.setState(0x61c6, 0x8e46, 0xd060, 0x1abd, 0x174d, 0xf6d5, 0x1, 0x0);
        gbc.writeMem(0x61c6, { 0x95 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x8e46, gbc.sp());
        EXPECT(0x61c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 01B9
        gbc.setState(0x75f2, 0x17b3, 0xc0a0, 0x19d, 0x67a0, 0x82c7, 0x0, 0x0);
        gbc.writeMem(0x75f2, { 0x95 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x17b3, gbc.sp());
        EXPECT(0x75f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 01BA
        gbc.setState(0xc4a9, 0x59f5, 0x6210, 0x966c, 0x4a15, 0x585a, 0x1, 0x1);
        gbc.writeMem(0xc4a9, { 0x95 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x59f5, gbc.sp());
        EXPECT(0xc4aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xc4a9));
        // 95 01BB
        gbc.setState(0x4dab, 0x13d8, 0xb600, 0x3f15, 0x2201, 0xcd92, 0x1, 0x1);
        gbc.writeMem(0x4dab, { 0x95 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x13d8, gbc.sp());
        EXPECT(0x4dac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 01BC
        gbc.setState(0x8b56, 0xfc85, 0x3fe0, 0xd863, 0xf9f4, 0x25f2, 0x1, 0x1);
        gbc.writeMem(0x8b56, { 0x95 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xfc85, gbc.sp());
        EXPECT(0x8b57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x8b56));
        // 95 01BD
        gbc.setState(0x8b4e, 0x7566, 0xd350, 0x94cc, 0xfc48, 0x8350, 0x1, 0x0);
        gbc.writeMem(0x8b4e, { 0x95 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x7566, gbc.sp());
        EXPECT(0x8b4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x8b4e));
        // 95 01BE
        gbc.setState(0x19aa, 0xb4ed, 0x5360, 0x68e2, 0x4b82, 0xcc0a, 0x1, 0x1);
        gbc.writeMem(0x19aa, { 0x95 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xb4ed, gbc.sp());
        EXPECT(0x19ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 01BF
        gbc.setState(0x3983, 0x3f0b, 0xa720, 0xdd2a, 0xee87, 0xd5b8, 0x0, 0x0);
        gbc.writeMem(0x3983, { 0x95 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x3f0b, gbc.sp());
        EXPECT(0x3984, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 01C0
        gbc.setState(0x5762, 0xefc3, 0x9d00, 0x5fe2, 0xe441, 0xe65c, 0x0, 0x1);
        gbc.writeMem(0x5762, { 0x95 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xefc3, gbc.sp());
        EXPECT(0x5763, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 01C2
        gbc.setState(0x708d, 0xb9fe, 0x99f0, 0x97ce, 0xc709, 0x2f94, 0x0, 0x1);
        gbc.writeMem(0x708d, { 0x95 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xb9fe, gbc.sp());
        EXPECT(0x708e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 01C3
        gbc.setState(0xa44c, 0xec20, 0xbcd0, 0x4e8e, 0x588b, 0xd250, 0x0, 0x1);
        gbc.writeMem(0xa44c, { 0x95 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xec20, gbc.sp());
        EXPECT(0xa44d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xa44c));
        // 95 01C4
        gbc.setState(0x669d, 0x7582, 0x8900, 0xc24c, 0x3edb, 0x128b, 0x0, 0x1);
        gbc.writeMem(0x669d, { 0x95 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x7582, gbc.sp());
        EXPECT(0x669e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 01C5
        gbc.setState(0x16c4, 0x6df9, 0x1510, 0xb4b7, 0x8da2, 0xbef1, 0x0, 0x0);
        gbc.writeMem(0x16c4, { 0x95 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x6df9, gbc.sp());
        EXPECT(0x16c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 01C6
        gbc.setState(0x197b, 0xd6a9, 0xac70, 0x176f, 0x238a, 0xd764, 0x0, 0x1);
        gbc.writeMem(0x197b, { 0x95 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xd6a9, gbc.sp());
        EXPECT(0x197c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 01C7
        gbc.setState(0xe6f2, 0xe919, 0xd770, 0x12a8, 0x8953, 0x8c20, 0x1, 0x0);
        gbc.writeMem(0xe6f2, { 0x95 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xe919, gbc.sp());
        EXPECT(0xe6f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xe6f2));
        // 95 01C8
        gbc.setState(0x3e77, 0xf2d4, 0x1d0, 0xb233, 0xa145, 0xf4e3, 0x1, 0x0);
        gbc.writeMem(0x3e77, { 0x95 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xf2d4, gbc.sp());
        EXPECT(0x3e78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 01C9
        gbc.setState(0x4e0f, 0x9999, 0x9cf0, 0x35d8, 0x7820, 0xa3ed, 0x0, 0x1);
        gbc.writeMem(0x4e0f, { 0x95 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x9999, gbc.sp());
        EXPECT(0x4e10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 01CA
        gbc.setState(0x7039, 0x191a, 0x7790, 0xca64, 0x84b9, 0x7a5f, 0x0, 0x0);
        gbc.writeMem(0x7039, { 0x95 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x191a, gbc.sp());
        EXPECT(0x703a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 01CB
        gbc.setState(0x52b7, 0x2596, 0x1cb0, 0x20c2, 0xcb14, 0xa9e2, 0x0, 0x0);
        gbc.writeMem(0x52b7, { 0x95 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x2596, gbc.sp());
        EXPECT(0x52b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 01CC
        gbc.setState(0xe737, 0x7d83, 0x3110, 0x1cb, 0xe5f1, 0x695b, 0x1, 0x0);
        gbc.writeMem(0xe737, { 0x95 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x7d83, gbc.sp());
        EXPECT(0xe738, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xe737));
        // 95 01CD
        gbc.setState(0x6107, 0x3e53, 0x7aa0, 0x4045, 0x60c8, 0xf82c, 0x0, 0x1);
        gbc.writeMem(0x6107, { 0x95 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x3e53, gbc.sp());
        EXPECT(0x6108, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 01CE
        gbc.setState(0x70ad, 0xb984, 0x91a0, 0x8f90, 0x7014, 0xad4a, 0x0, 0x0);
        gbc.writeMem(0x70ad, { 0x95 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xb984, gbc.sp());
        EXPECT(0x70ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 01CF
        gbc.setState(0x47d7, 0x834d, 0xda00, 0x2c5b, 0x6a65, 0xd34, 0x1, 0x0);
        gbc.writeMem(0x47d7, { 0x95 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x834d, gbc.sp());
        EXPECT(0x47d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 01D0
        gbc.setState(0xc0d0, 0x26ad, 0x8bc0, 0x8dcc, 0x2eca, 0x480a, 0x0, 0x1);
        gbc.writeMem(0xc0d0, { 0x95 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x26ad, gbc.sp());
        EXPECT(0xc0d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xc0d0));
        // 95 01D1
        gbc.setState(0x2e2b, 0xede2, 0x5de0, 0xc5e6, 0x4033, 0xda75, 0x0, 0x0);
        gbc.writeMem(0x2e2b, { 0x95 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xede2, gbc.sp());
        EXPECT(0x2e2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 01D2
        gbc.setState(0x9f05, 0xd134, 0xf380, 0x24d3, 0xbac5, 0x125f, 0x0, 0x0);
        gbc.writeMem(0x9f05, { 0x95 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xd134, gbc.sp());
        EXPECT(0x9f06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x9f05));
        // 95 01D3
        gbc.setState(0x4ebb, 0x7f68, 0x8ba0, 0x77ae, 0x2c5c, 0xebaa, 0x1, 0x1);
        gbc.writeMem(0x4ebb, { 0x95 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x7f68, gbc.sp());
        EXPECT(0x4ebc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 01D4
        gbc.setState(0xd13f, 0x989d, 0x44b0, 0x9536, 0x7fa6, 0xcd2e, 0x0, 0x0);
        gbc.writeMem(0xd13f, { 0x95 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x989d, gbc.sp());
        EXPECT(0xd140, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xd13f));
        // 95 01D5
        gbc.setState(0x4016, 0x82ca, 0x2950, 0xa33, 0xd29d, 0xc54a, 0x0, 0x0);
        gbc.writeMem(0x4016, { 0x95 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x82ca, gbc.sp());
        EXPECT(0x4017, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 01D6
        gbc.setState(0x66cf, 0x9976, 0x1b10, 0x5b12, 0x9c2f, 0x35fc, 0x1, 0x1);
        gbc.writeMem(0x66cf, { 0x95 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x9976, gbc.sp());
        EXPECT(0x66d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 01D7
        gbc.setState(0xab23, 0xe7e0, 0x890, 0xe7ad, 0x6baa, 0x8476, 0x1, 0x1);
        gbc.writeMem(0xab23, { 0x95 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xe7e0, gbc.sp());
        EXPECT(0xab24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xab23));
        // 95 01D8
        gbc.setState(0x6168, 0xce1a, 0x44e0, 0x18af, 0xf364, 0x9228, 0x1, 0x0);
        gbc.writeMem(0x6168, { 0x95 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xce1a, gbc.sp());
        EXPECT(0x6169, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 01D9
        gbc.setState(0xa0d3, 0xe87e, 0x4e00, 0x9e18, 0xd44d, 0x3bc9, 0x1, 0x0);
        gbc.writeMem(0xa0d3, { 0x95 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xe87e, gbc.sp());
        EXPECT(0xa0d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xa0d3));
        // 95 01DA
        gbc.setState(0xa227, 0x902b, 0x1bc0, 0x5c06, 0x1c00, 0x154e, 0x0, 0x0);
        gbc.writeMem(0xa227, { 0x95 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x902b, gbc.sp());
        EXPECT(0xa228, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xa227));
        // 95 01DB
        gbc.setState(0x5beb, 0xb179, 0x6fe0, 0xb456, 0x5c57, 0x4df6, 0x1, 0x1);
        gbc.writeMem(0x5beb, { 0x95 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xb179, gbc.sp());
        EXPECT(0x5bec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 01DC
        gbc.setState(0x431f, 0x6a31, 0x6c30, 0x46c2, 0x7609, 0x3c92, 0x1, 0x1);
        gbc.writeMem(0x431f, { 0x95 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x6a31, gbc.sp());
        EXPECT(0x4320, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 01DD
        gbc.setState(0xd6b6, 0x6455, 0x77f0, 0xbbd6, 0xfe97, 0x6259, 0x1, 0x0);
        gbc.writeMem(0xd6b6, { 0x95 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x6455, gbc.sp());
        EXPECT(0xd6b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xd6b6));
        // 95 01DE
        gbc.setState(0xd7dd, 0x98e2, 0x4930, 0xab33, 0x4a48, 0xbd19, 0x1, 0x0);
        gbc.writeMem(0xd7dd, { 0x95 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x98e2, gbc.sp());
        EXPECT(0xd7de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xd7dd));
        // 95 01DF
        gbc.setState(0x91f6, 0x436a, 0x3900, 0x5c3c, 0x8f90, 0x9b90, 0x0, 0x1);
        gbc.writeMem(0x91f6, { 0x95 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x436a, gbc.sp());
        EXPECT(0x91f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x91f6));
        // 95 01E0
        gbc.setState(0xb719, 0x35b7, 0xc520, 0xf9a7, 0x8c9f, 0x1fbe, 0x1, 0x1);
        gbc.writeMem(0xb719, { 0x95 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x35b7, gbc.sp());
        EXPECT(0xb71a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xb719));
        // 95 01E1
        gbc.setState(0x1091, 0x7dbb, 0x3cc0, 0x542d, 0x536e, 0x2bb0, 0x0, 0x0);
        gbc.writeMem(0x1091, { 0x95 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x7dbb, gbc.sp());
        EXPECT(0x1092, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 01E2
        gbc.setState(0x8f64, 0x6799, 0xa50, 0x7291, 0x3dd0, 0x8dbb, 0x1, 0x1);
        gbc.writeMem(0x8f64, { 0x95 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x6799, gbc.sp());
        EXPECT(0x8f65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x8f64));
        // 95 01E3
        gbc.setState(0x45c2, 0x7020, 0x89d0, 0x2847, 0xe148, 0x856c, 0x1, 0x0);
        gbc.writeMem(0x45c2, { 0x95 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x7020, gbc.sp());
        EXPECT(0x45c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 01E4
        gbc.setState(0xdc15, 0xe470, 0x9330, 0x688a, 0xfbd5, 0x5d5a, 0x0, 0x0);
        gbc.writeMem(0xdc15, { 0x95 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xe470, gbc.sp());
        EXPECT(0xdc16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xdc15));
        // 95 01E5
        gbc.setState(0xea73, 0xf7f1, 0x3a60, 0xfbdc, 0xd42e, 0x3533, 0x0, 0x1);
        gbc.writeMem(0xea73, { 0x95 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xf7f1, gbc.sp());
        EXPECT(0xea74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xea73));
        // 95 01E6
        gbc.setState(0xde62, 0x3090, 0x45d0, 0x972f, 0x5b85, 0x44f2, 0x0, 0x0);
        gbc.writeMem(0xde62, { 0x95 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x3090, gbc.sp());
        EXPECT(0xde63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xde62));
        // 95 01E8
        gbc.setState(0x4ba2, 0x729f, 0x5350, 0x677, 0xd065, 0xfacb, 0x0, 0x0);
        gbc.writeMem(0x4ba2, { 0x95 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x729f, gbc.sp());
        EXPECT(0x4ba3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 01E9
        gbc.setState(0x9a3f, 0x4462, 0xbc10, 0x764e, 0xcc0, 0xe599, 0x0, 0x0);
        gbc.writeMem(0x9a3f, { 0x95 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x4462, gbc.sp());
        EXPECT(0x9a40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x9a3f));
        // 95 01EA
        gbc.setState(0xeda3, 0x2830, 0xa180, 0xf6e3, 0x12e7, 0x341d, 0x0, 0x0);
        gbc.writeMem(0xeda3, { 0x95 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x2830, gbc.sp());
        EXPECT(0xeda4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xeda3));
        // 95 01EB
        gbc.setState(0xae09, 0x5a9e, 0x36b0, 0xef5f, 0x287c, 0x5834, 0x0, 0x1);
        gbc.writeMem(0xae09, { 0x95 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x5a9e, gbc.sp());
        EXPECT(0xae0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xae09));
        // 95 01EC
        gbc.setState(0x917d, 0x8d92, 0xee30, 0x74e, 0x45c9, 0x95bc, 0x0, 0x0);
        gbc.writeMem(0x917d, { 0x95 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x8d92, gbc.sp());
        EXPECT(0x917e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x917d));
        // 95 01ED
        gbc.setState(0x5666, 0xbf8b, 0xfc30, 0xe1f6, 0x17ac, 0xb60a, 0x0, 0x1);
        gbc.writeMem(0x5666, { 0x95 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xbf8b, gbc.sp());
        EXPECT(0x5667, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 01EE
        gbc.setState(0xa806, 0xd412, 0x8c10, 0x43e2, 0x8514, 0x610d, 0x0, 0x0);
        gbc.writeMem(0xa806, { 0x95 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xd412, gbc.sp());
        EXPECT(0xa807, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xa806));
        // 95 01EF
        gbc.setState(0x2065, 0xa743, 0xc6f0, 0x1ac, 0xde17, 0xa02, 0x0, 0x1);
        gbc.writeMem(0x2065, { 0x95 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xa743, gbc.sp());
        EXPECT(0x2066, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 01F1
        gbc.setState(0x41f3, 0xfe1c, 0x6d10, 0x8e39, 0xc6e1, 0x7d76, 0x0, 0x1);
        gbc.writeMem(0x41f3, { 0x95 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xfe1c, gbc.sp());
        EXPECT(0x41f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 01F2
        gbc.setState(0x487b, 0x5e2a, 0xc650, 0xbe1f, 0xe348, 0x41d9, 0x0, 0x1);
        gbc.writeMem(0x487b, { 0x95 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x5e2a, gbc.sp());
        EXPECT(0x487c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 01F3
        gbc.setState(0xd5e8, 0xfbe9, 0xc220, 0x2eab, 0x416c, 0x6b38, 0x0, 0x0);
        gbc.writeMem(0xd5e8, { 0x95 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xfbe9, gbc.sp());
        EXPECT(0xd5e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xd5e8));
        // 95 01F4
        gbc.setState(0x8194, 0x50f8, 0x1bb0, 0x7090, 0xfe96, 0x1dee, 0x1, 0x1);
        gbc.writeMem(0x8194, { 0x95 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x50f8, gbc.sp());
        EXPECT(0x8195, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x8194));
        // 95 01F5
        gbc.setState(0x56de, 0x99f7, 0x88c0, 0xc413, 0x46f, 0x8f94, 0x0, 0x1);
        gbc.writeMem(0x56de, { 0x95 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x99f7, gbc.sp());
        EXPECT(0x56df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 01F6
        gbc.setState(0x2b49, 0x1bfc, 0x6c0, 0x1626, 0xa090, 0x5929, 0x0, 0x0);
        gbc.writeMem(0x2b49, { 0x95 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x1bfc, gbc.sp());
        EXPECT(0x2b4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 01F7
        gbc.setState(0xac57, 0xab9e, 0xd7c0, 0x171a, 0xed1c, 0xb577, 0x1, 0x0);
        gbc.writeMem(0xac57, { 0x95 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xab9e, gbc.sp());
        EXPECT(0xac58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xac57));
        // 95 01F8
        gbc.setState(0xcc47, 0xf519, 0xc4b0, 0xe6eb, 0x5875, 0x331e, 0x0, 0x1);
        gbc.writeMem(0xcc47, { 0x95 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xf519, gbc.sp());
        EXPECT(0xcc48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xcc47));
        // 95 01F9
        gbc.setState(0x6a23, 0x58ae, 0xc120, 0x2083, 0x43ef, 0x76c8, 0x0, 0x1);
        gbc.writeMem(0x6a23, { 0x95 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x58ae, gbc.sp());
        EXPECT(0x6a24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 01FA
        gbc.setState(0x2f26, 0xf88f, 0x2a90, 0x19b5, 0x18bc, 0xd366, 0x0, 0x0);
        gbc.writeMem(0x2f26, { 0x95 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xf88f, gbc.sp());
        EXPECT(0x2f27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 01FB
        gbc.setState(0xb8dd, 0x1503, 0x4150, 0x9698, 0x1ad9, 0xc4ac, 0x0, 0x1);
        gbc.writeMem(0xb8dd, { 0x95 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x1503, gbc.sp());
        EXPECT(0xb8de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xb8dd));
        // 95 01FC
        gbc.setState(0xa411, 0x3655, 0x3280, 0x7bbc, 0x83e, 0xf074, 0x1, 0x0);
        gbc.writeMem(0xa411, { 0x95 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x3655, gbc.sp());
        EXPECT(0xa412, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xa411));
        // 95 01FD
        gbc.setState(0x6876, 0xdf8f, 0x3c90, 0xe107, 0x3c4e, 0xc89d, 0x1, 0x0);
        gbc.writeMem(0x6876, { 0x95 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xdf8f, gbc.sp());
        EXPECT(0x6877, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 01FE
        gbc.setState(0x369c, 0x76e1, 0x18e0, 0x8ee4, 0x92f4, 0xd9f, 0x0, 0x1);
        gbc.writeMem(0x369c, { 0x95 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x76e1, gbc.sp());
        EXPECT(0x369d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 01FF
        gbc.setState(0x375f, 0x9d6c, 0x5a10, 0x1da7, 0xb68a, 0x725d, 0x1, 0x1);
        gbc.writeMem(0x375f, { 0x95 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x9d6c, gbc.sp());
        EXPECT(0x3760, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0200
        gbc.setState(0x78fd, 0xf9, 0xe9c0, 0x4c73, 0x79b6, 0x6254, 0x1, 0x0);
        gbc.writeMem(0x78fd, { 0x95 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xf9, gbc.sp());
        EXPECT(0x78fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0201
        gbc.setState(0xdf10, 0x39b5, 0x5420, 0x4e53, 0x3165, 0xc43b, 0x0, 0x0);
        gbc.writeMem(0xdf10, { 0x95 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x39b5, gbc.sp());
        EXPECT(0xdf11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xdf10));
        // 95 0202
        gbc.setState(0xee9a, 0x4f9d, 0xd810, 0xf8aa, 0xdfd1, 0x2739, 0x1, 0x0);
        gbc.writeMem(0xee9a, { 0x95 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x4f9d, gbc.sp());
        EXPECT(0xee9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xee9a));
        // 95 0203
        gbc.setState(0x6066, 0xc563, 0xe800, 0x4cdb, 0x2ade, 0xfa8c, 0x1, 0x0);
        gbc.writeMem(0x6066, { 0x95 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xc563, gbc.sp());
        EXPECT(0x6067, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0204
        gbc.setState(0x4b59, 0x448b, 0x2740, 0xa3eb, 0xf5bd, 0xb3e7, 0x1, 0x1);
        gbc.writeMem(0x4b59, { 0x95 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x448b, gbc.sp());
        EXPECT(0x4b5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0205
        gbc.setState(0x3675, 0xf614, 0x56e0, 0xd919, 0x7869, 0x53d8, 0x1, 0x0);
        gbc.writeMem(0x3675, { 0x95 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xf614, gbc.sp());
        EXPECT(0x3676, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0206
        gbc.setState(0xc45a, 0xd3d7, 0x5770, 0x4dcc, 0xbe25, 0x93d7, 0x1, 0x1);
        gbc.writeMem(0xc45a, { 0x95 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xd3d7, gbc.sp());
        EXPECT(0xc45b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xc45a));
        // 95 0207
        gbc.setState(0xe66b, 0x6a80, 0x1840, 0x8df8, 0x9e2f, 0x18e8, 0x1, 0x1);
        gbc.writeMem(0xe66b, { 0x95 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x6a80, gbc.sp());
        EXPECT(0xe66c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xe66b));
        // 95 0208
        gbc.setState(0x596a, 0xdd56, 0x21e0, 0xc464, 0x8ca, 0x560e, 0x0, 0x0);
        gbc.writeMem(0x596a, { 0x95 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xdd56, gbc.sp());
        EXPECT(0x596b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0209
        gbc.setState(0x2915, 0x1e3c, 0x8d90, 0x2f8d, 0xc976, 0x4cb5, 0x0, 0x0);
        gbc.writeMem(0x2915, { 0x95 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x1e3c, gbc.sp());
        EXPECT(0x2916, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 020A
        gbc.setState(0xce66, 0x3e1d, 0x5c40, 0x17ee, 0xe970, 0x21f0, 0x1, 0x1);
        gbc.writeMem(0xce66, { 0x95 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x3e1d, gbc.sp());
        EXPECT(0xce67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xce66));
        // 95 020B
        gbc.setState(0xeb6a, 0xcb0e, 0xe630, 0xc880, 0x58dd, 0x1d90, 0x1, 0x1);
        gbc.writeMem(0xeb6a, { 0x95 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xcb0e, gbc.sp());
        EXPECT(0xeb6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xeb6a));
        // 95 020C
        gbc.setState(0xc1b9, 0x51d5, 0xa770, 0xa4fa, 0xa4f, 0x685d, 0x1, 0x1);
        gbc.writeMem(0xc1b9, { 0x95 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x51d5, gbc.sp());
        EXPECT(0xc1ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xc1b9));
        // 95 020D
        gbc.setState(0xcf6f, 0x9311, 0xd60, 0x7ac5, 0xb290, 0x7b18, 0x0, 0x0);
        gbc.writeMem(0xcf6f, { 0x95 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x9311, gbc.sp());
        EXPECT(0xcf70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xcf6f));
        // 95 020E
        gbc.setState(0x6335, 0x5487, 0xc120, 0xd9ef, 0xccb7, 0x83ad, 0x1, 0x1);
        gbc.writeMem(0x6335, { 0x95 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x5487, gbc.sp());
        EXPECT(0x6336, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0210
        gbc.setState(0x948e, 0x4a6b, 0xc70, 0xcb9, 0x678a, 0xbb01, 0x0, 0x1);
        gbc.writeMem(0x948e, { 0x95 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x4a6b, gbc.sp());
        EXPECT(0x948f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x948e));
        // 95 0211
        gbc.setState(0xecc1, 0x96a6, 0xc980, 0x448f, 0xcda8, 0xa9a9, 0x0, 0x0);
        gbc.writeMem(0xecc1, { 0x95 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x96a6, gbc.sp());
        EXPECT(0xecc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xecc1));
        // 95 0212
        gbc.setState(0x942c, 0xe358, 0x3f20, 0x2d51, 0xecd8, 0xace3, 0x1, 0x1);
        gbc.writeMem(0x942c, { 0x95 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xe358, gbc.sp());
        EXPECT(0x942d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x942c));
        // 95 0213
        gbc.setState(0xd4c, 0x6417, 0xc2d0, 0x29a, 0xb876, 0x3960, 0x0, 0x0);
        gbc.writeMem(0xd4c, { 0x95 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x6417, gbc.sp());
        EXPECT(0xd4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0214
        gbc.setState(0x3af9, 0x6971, 0x3730, 0x9a21, 0xc72c, 0xc578, 0x0, 0x0);
        gbc.writeMem(0x3af9, { 0x95 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x6971, gbc.sp());
        EXPECT(0x3afa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0215
        gbc.setState(0x4620, 0x43e9, 0x6b60, 0x32ec, 0x72aa, 0x2b51, 0x1, 0x0);
        gbc.writeMem(0x4620, { 0x95 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x43e9, gbc.sp());
        EXPECT(0x4621, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0216
        gbc.setState(0xdb14, 0x4545, 0x7530, 0x4e18, 0xfbc5, 0x806c, 0x0, 0x1);
        gbc.writeMem(0xdb14, { 0x95 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x4545, gbc.sp());
        EXPECT(0xdb15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xdb14));
        // 95 0219
        gbc.setState(0x874a, 0xd54d, 0x3410, 0x11d1, 0xa163, 0xe81, 0x0, 0x0);
        gbc.writeMem(0x874a, { 0x95 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xd54d, gbc.sp());
        EXPECT(0x874b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x874a));
        // 95 021A
        gbc.setState(0x6ad, 0xebb8, 0x94b0, 0x1067, 0xd53f, 0x6460, 0x0, 0x1);
        gbc.writeMem(0x6ad, { 0x95 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xebb8, gbc.sp());
        EXPECT(0x6ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 021B
        gbc.setState(0x348e, 0x3387, 0x51f0, 0x708c, 0x795a, 0x1019, 0x1, 0x0);
        gbc.writeMem(0x348e, { 0x95 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x3387, gbc.sp());
        EXPECT(0x348f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 021C
        gbc.setState(0x62c2, 0x9a2d, 0x2e80, 0xd0b9, 0xd9ee, 0xefe5, 0x0, 0x1);
        gbc.writeMem(0x62c2, { 0x95 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x9a2d, gbc.sp());
        EXPECT(0x62c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 021D
        gbc.setState(0x4d4e, 0x74f6, 0x6da0, 0xcbc5, 0xbe6a, 0x7ad, 0x0, 0x0);
        gbc.writeMem(0x4d4e, { 0x95 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x74f6, gbc.sp());
        EXPECT(0x4d4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 021E
        gbc.setState(0x56c2, 0xf80, 0x1e30, 0x8d57, 0x23e4, 0x4fe2, 0x1, 0x0);
        gbc.writeMem(0x56c2, { 0x95 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xf80, gbc.sp());
        EXPECT(0x56c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 021F
        gbc.setState(0xb0b5, 0xd974, 0x6ce0, 0x138c, 0x99a2, 0x65bf, 0x1, 0x0);
        gbc.writeMem(0xb0b5, { 0x95 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xd974, gbc.sp());
        EXPECT(0xb0b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xb0b5));
        // 95 0220
        gbc.setState(0xdb59, 0xf53d, 0xb350, 0x8f11, 0x5d22, 0x6c0c, 0x1, 0x1);
        gbc.writeMem(0xdb59, { 0x95 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xf53d, gbc.sp());
        EXPECT(0xdb5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xdb59));
        // 95 0221
        gbc.setState(0x2f80, 0xb56e, 0x3a0, 0xec6f, 0x5b4a, 0xa9ef, 0x1, 0x0);
        gbc.writeMem(0x2f80, { 0x95 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xb56e, gbc.sp());
        EXPECT(0x2f81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0222
        gbc.setState(0xe373, 0x5db8, 0x5c0, 0x3ae7, 0xce19, 0xd986, 0x1, 0x1);
        gbc.writeMem(0xe373, { 0x95 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x5db8, gbc.sp());
        EXPECT(0xe374, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xe373));
        // 95 0223
        gbc.setState(0xe0ac, 0xdb6f, 0x5000, 0x2933, 0xc8a6, 0x1588, 0x1, 0x0);
        gbc.writeMem(0xe0ac, { 0x95 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xdb6f, gbc.sp());
        EXPECT(0xe0ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xe0ac));
        // 95 0224
        gbc.setState(0xc1f1, 0x46e8, 0x1780, 0xb003, 0x77a5, 0xc119, 0x0, 0x0);
        gbc.writeMem(0xc1f1, { 0x95 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x46e8, gbc.sp());
        EXPECT(0xc1f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xc1f1));
        // 95 0225
        gbc.setState(0xbc3c, 0x5cc1, 0x4230, 0x8eca, 0x9d37, 0xb2de, 0x0, 0x0);
        gbc.writeMem(0xbc3c, { 0x95 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x5cc1, gbc.sp());
        EXPECT(0xbc3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xbc3c));
        // 95 0227
        gbc.setState(0x9e71, 0xde0, 0xd880, 0x550e, 0xe69, 0x49b3, 0x0, 0x0);
        gbc.writeMem(0x9e71, { 0x95 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xde0, gbc.sp());
        EXPECT(0x9e72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x9e71));
        // 95 0228
        gbc.setState(0x5e7c, 0x6c27, 0xb980, 0x1961, 0xb7d4, 0x100e, 0x0, 0x0);
        gbc.writeMem(0x5e7c, { 0x95 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x6c27, gbc.sp());
        EXPECT(0x5e7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0229
        gbc.setState(0x7fbf, 0xd8d9, 0xbf90, 0xbe8a, 0xe5a1, 0x864a, 0x1, 0x1);
        gbc.writeMem(0x7fbf, { 0x95 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xd8d9, gbc.sp());
        EXPECT(0x7fc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 022A
        gbc.setState(0x7022, 0xab50, 0x56d0, 0xdfeb, 0xd0ce, 0xf111, 0x1, 0x1);
        gbc.writeMem(0x7022, { 0x95 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xab50, gbc.sp());
        EXPECT(0x7023, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 022B
        gbc.setState(0x8205, 0xb87f, 0xd880, 0xb2b, 0xa7df, 0x9fc9, 0x1, 0x1);
        gbc.writeMem(0x8205, { 0x95 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xb87f, gbc.sp());
        EXPECT(0x8206, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x8205));
        // 95 022C
        gbc.setState(0x92f0, 0x493c, 0x8620, 0xc4d, 0x145a, 0x7978, 0x1, 0x1);
        gbc.writeMem(0x92f0, { 0x95 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x493c, gbc.sp());
        EXPECT(0x92f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x92f0));
        // 95 022D
        gbc.setState(0x6ab, 0x59ac, 0xa790, 0x6170, 0xfd90, 0x35f8, 0x0, 0x1);
        gbc.writeMem(0x6ab, { 0x95 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x59ac, gbc.sp());
        EXPECT(0x6ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 022E
        gbc.setState(0x3ba0, 0xa741, 0x830, 0x2c80, 0xe687, 0x838a, 0x0, 0x0);
        gbc.writeMem(0x3ba0, { 0x95 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xa741, gbc.sp());
        EXPECT(0x3ba1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 022F
        gbc.setState(0xedea, 0x9c85, 0x5a40, 0xbbf6, 0xaa80, 0x5ae5, 0x1, 0x1);
        gbc.writeMem(0xedea, { 0x95 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x9c85, gbc.sp());
        EXPECT(0xedeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xedea));
        // 95 0230
        gbc.setState(0xd227, 0x3742, 0xe240, 0xd312, 0x82a6, 0x625c, 0x1, 0x0);
        gbc.writeMem(0xd227, { 0x95 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x3742, gbc.sp());
        EXPECT(0xd228, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xd227));
        // 95 0232
        gbc.setState(0x5ee2, 0xc97c, 0x99c0, 0xe87c, 0xa006, 0x6328, 0x1, 0x0);
        gbc.writeMem(0x5ee2, { 0x95 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xc97c, gbc.sp());
        EXPECT(0x5ee3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0234
        gbc.setState(0x642f, 0x3b04, 0x5990, 0xb5b2, 0xd49a, 0xc267, 0x1, 0x0);
        gbc.writeMem(0x642f, { 0x95 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x3b04, gbc.sp());
        EXPECT(0x6430, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0235
        gbc.setState(0x843, 0x840c, 0x3600, 0xa4e9, 0xf55e, 0x6f46, 0x1, 0x0);
        gbc.writeMem(0x843, { 0x95 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x840c, gbc.sp());
        EXPECT(0x844, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0236
        gbc.setState(0x6e11, 0xc461, 0x8550, 0x91c, 0xb55c, 0xc3ec, 0x0, 0x1);
        gbc.writeMem(0x6e11, { 0x95 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xc461, gbc.sp());
        EXPECT(0x6e12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0237
        gbc.setState(0x5154, 0x6f1a, 0xc8d0, 0xa73, 0xbb7f, 0xcac2, 0x0, 0x1);
        gbc.writeMem(0x5154, { 0x95 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x6f1a, gbc.sp());
        EXPECT(0x5155, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0238
        gbc.setState(0x8b2, 0xb4a6, 0xde80, 0xd2cc, 0x3f71, 0xbde6, 0x1, 0x0);
        gbc.writeMem(0x8b2, { 0x95 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb4a6, gbc.sp());
        EXPECT(0x8b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0239
        gbc.setState(0xc83f, 0x28e9, 0x65b0, 0x204c, 0x152e, 0x1507, 0x1, 0x1);
        gbc.writeMem(0xc83f, { 0x95 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x28e9, gbc.sp());
        EXPECT(0xc840, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xc83f));
        // 95 023A
        gbc.setState(0x54de, 0xffa8, 0x5eb0, 0xea5, 0x9624, 0xa0bf, 0x0, 0x1);
        gbc.writeMem(0x54de, { 0x95 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xffa8, gbc.sp());
        EXPECT(0x54df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 023B
        gbc.setState(0x77eb, 0xcf0f, 0xf150, 0x1639, 0xb53f, 0x7063, 0x0, 0x0);
        gbc.writeMem(0x77eb, { 0x95 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xcf0f, gbc.sp());
        EXPECT(0x77ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 023C
        gbc.setState(0xadf0, 0x9271, 0xf80, 0x8e2f, 0x41cc, 0x5caa, 0x1, 0x0);
        gbc.writeMem(0xadf0, { 0x95 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x9271, gbc.sp());
        EXPECT(0xadf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xadf0));
        // 95 023D
        gbc.setState(0xb30d, 0xc0e2, 0x3790, 0xa1a0, 0xcae5, 0x807b, 0x0, 0x1);
        gbc.writeMem(0xb30d, { 0x95 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xc0e2, gbc.sp());
        EXPECT(0xb30e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xb30d));
        // 95 023E
        gbc.setState(0x3e89, 0xa466, 0xb010, 0x415c, 0xf60a, 0x36c, 0x1, 0x1);
        gbc.writeMem(0x3e89, { 0x95 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xa466, gbc.sp());
        EXPECT(0x3e8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 023F
        gbc.setState(0x71c3, 0x14ea, 0x9ea0, 0x9ba1, 0x3c6f, 0xb65a, 0x0, 0x0);
        gbc.writeMem(0x71c3, { 0x95 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x14ea, gbc.sp());
        EXPECT(0x71c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0240
        gbc.setState(0x8fe9, 0x77b5, 0x4d40, 0x7085, 0x2fd0, 0x2c4b, 0x0, 0x1);
        gbc.writeMem(0x8fe9, { 0x95 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x77b5, gbc.sp());
        EXPECT(0x8fea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x8fe9));
        // 95 0242
        gbc.setState(0xeb74, 0x5e1e, 0x2b0, 0xd3b8, 0x9bed, 0x70b4, 0x1, 0x0);
        gbc.writeMem(0xeb74, { 0x95 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x5e1e, gbc.sp());
        EXPECT(0xeb75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xeb74));
        // 95 0243
        gbc.setState(0xb549, 0x6782, 0x84b0, 0xafde, 0xb277, 0x8a8a, 0x1, 0x1);
        gbc.writeMem(0xb549, { 0x95 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x6782, gbc.sp());
        EXPECT(0xb54a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xb549));
        // 95 0244
        gbc.setState(0x59eb, 0x128f, 0xfd90, 0xa377, 0xfcc9, 0xaded, 0x1, 0x0);
        gbc.writeMem(0x59eb, { 0x95 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x128f, gbc.sp());
        EXPECT(0x59ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0245
        gbc.setState(0x83a6, 0xd075, 0xb9d0, 0x263b, 0x74b2, 0x314e, 0x0, 0x0);
        gbc.writeMem(0x83a6, { 0x95 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xd075, gbc.sp());
        EXPECT(0x83a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x83a6));
        // 95 0246
        gbc.setState(0x3a50, 0x7356, 0xd3a0, 0x6b95, 0x80b3, 0x2b7d, 0x0, 0x0);
        gbc.writeMem(0x3a50, { 0x95 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x7356, gbc.sp());
        EXPECT(0x3a51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0247
        gbc.setState(0xd9e, 0xedfb, 0x2310, 0x1618, 0xfce0, 0x20fa, 0x0, 0x1);
        gbc.writeMem(0xd9e, { 0x95 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xedfb, gbc.sp());
        EXPECT(0xd9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0248
        gbc.setState(0xce99, 0xf305, 0xc6b0, 0x3b69, 0x6b32, 0x8b0d, 0x0, 0x1);
        gbc.writeMem(0xce99, { 0x95 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xf305, gbc.sp());
        EXPECT(0xce9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xce99));
        // 95 0249
        gbc.setState(0x3d53, 0xacb2, 0xe9c0, 0xe359, 0x689e, 0x5c5c, 0x0, 0x0);
        gbc.writeMem(0x3d53, { 0x95 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xacb2, gbc.sp());
        EXPECT(0x3d54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 024A
        gbc.setState(0xe2, 0x516c, 0x2e10, 0x22ad, 0x9e50, 0xef62, 0x1, 0x1);
        gbc.writeMem(0xe2, { 0x95 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x516c, gbc.sp());
        EXPECT(0xe3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 024B
        gbc.setState(0x7bc6, 0xd4b7, 0x4c60, 0xae76, 0x64bd, 0xee51, 0x1, 0x1);
        gbc.writeMem(0x7bc6, { 0x95 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xd4b7, gbc.sp());
        EXPECT(0x7bc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 024C
        gbc.setState(0x942, 0x690a, 0x5a20, 0xba33, 0x63e9, 0x4e62, 0x0, 0x0);
        gbc.writeMem(0x942, { 0x95 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x690a, gbc.sp());
        EXPECT(0x943, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 024D
        gbc.setState(0xe5fe, 0xe5c5, 0x710, 0x2ccb, 0x4489, 0xfae7, 0x0, 0x0);
        gbc.writeMem(0xe5fe, { 0x95 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xe5c5, gbc.sp());
        EXPECT(0xe5ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xe5fe));
        // 95 024E
        gbc.setState(0x451a, 0x954a, 0x75a0, 0xcb10, 0x47cf, 0x3ff, 0x1, 0x1);
        gbc.writeMem(0x451a, { 0x95 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x954a, gbc.sp());
        EXPECT(0x451b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 024F
        gbc.setState(0xdd38, 0x6b0f, 0xf560, 0xcb1b, 0x416c, 0xa3f3, 0x0, 0x1);
        gbc.writeMem(0xdd38, { 0x95 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x6b0f, gbc.sp());
        EXPECT(0xdd39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xdd38));
        // 95 0251
        gbc.setState(0x85cb, 0x17e, 0x9600, 0x310e, 0xf57b, 0xd36b, 0x0, 0x0);
        gbc.writeMem(0x85cb, { 0x95 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x17e, gbc.sp());
        EXPECT(0x85cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x85cb));
        // 95 0252
        gbc.setState(0x17d4, 0xcdcf, 0xcf50, 0x96e2, 0x5cd1, 0x83e1, 0x1, 0x1);
        gbc.writeMem(0x17d4, { 0x95 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xcdcf, gbc.sp());
        EXPECT(0x17d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0253
        gbc.setState(0x4744, 0x87b0, 0xf6b0, 0x1882, 0xa3c0, 0x14e7, 0x0, 0x0);
        gbc.writeMem(0x4744, { 0x95 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x87b0, gbc.sp());
        EXPECT(0x4745, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0254
        gbc.setState(0x30b0, 0xbef8, 0xe070, 0x50fb, 0xbf20, 0x1815, 0x0, 0x1);
        gbc.writeMem(0x30b0, { 0x95 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xbef8, gbc.sp());
        EXPECT(0x30b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0255
        gbc.setState(0xe276, 0x9c9, 0x9640, 0x638, 0x28b0, 0x44f3, 0x1, 0x1);
        gbc.writeMem(0xe276, { 0x95 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x9c9, gbc.sp());
        EXPECT(0xe277, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xe276));
        // 95 0256
        gbc.setState(0xa921, 0x5c97, 0x9bb0, 0x8d3d, 0x6301, 0xbd42, 0x0, 0x0);
        gbc.writeMem(0xa921, { 0x95 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x5c97, gbc.sp());
        EXPECT(0xa922, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xa921));
        // 95 0257
        gbc.setState(0x244b, 0xe848, 0xb570, 0x7688, 0xa3c3, 0xe1a0, 0x0, 0x0);
        gbc.writeMem(0x244b, { 0x95 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xe848, gbc.sp());
        EXPECT(0x244c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0258
        gbc.setState(0x1320, 0x5cfe, 0xcec0, 0x77f4, 0x1367, 0x57e5, 0x0, 0x0);
        gbc.writeMem(0x1320, { 0x95 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x5cfe, gbc.sp());
        EXPECT(0x1321, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0259
        gbc.setState(0xbbe1, 0x23e1, 0xb390, 0x1327, 0xb61c, 0xd882, 0x1, 0x1);
        gbc.writeMem(0xbbe1, { 0x95 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x23e1, gbc.sp());
        EXPECT(0xbbe2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xbbe1));
        // 95 025A
        gbc.setState(0x69dd, 0x587, 0x9860, 0x8bbf, 0x11a3, 0xf51b, 0x1, 0x0);
        gbc.writeMem(0x69dd, { 0x95 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x587, gbc.sp());
        EXPECT(0x69de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 025B
        gbc.setState(0xe298, 0x69b0, 0xb4d0, 0x5213, 0xd324, 0xcdf8, 0x1, 0x0);
        gbc.writeMem(0xe298, { 0x95 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x69b0, gbc.sp());
        EXPECT(0xe299, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xe298));
        // 95 025C
        gbc.setState(0x6e78, 0xb71, 0x2550, 0x771b, 0x2b78, 0xaa7b, 0x0, 0x1);
        gbc.writeMem(0x6e78, { 0x95 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xb71, gbc.sp());
        EXPECT(0x6e79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 025D
        gbc.setState(0x605e, 0x9a06, 0x58e0, 0x152b, 0x669b, 0x460f, 0x0, 0x1);
        gbc.writeMem(0x605e, { 0x95 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x9a06, gbc.sp());
        EXPECT(0x605f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 025E
        gbc.setState(0xe139, 0xe7ff, 0x3200, 0xa3a4, 0x1888, 0x2215, 0x0, 0x1);
        gbc.writeMem(0xe139, { 0x95 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xe7ff, gbc.sp());
        EXPECT(0xe13a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xe139));
        // 95 025F
        gbc.setState(0xd7d3, 0xecca, 0xd9a0, 0xa57a, 0xa99, 0xbab4, 0x1, 0x1);
        gbc.writeMem(0xd7d3, { 0x95 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xecca, gbc.sp());
        EXPECT(0xd7d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xd7d3));
        // 95 0260
        gbc.setState(0xedd8, 0xba7f, 0x7210, 0xf4ab, 0xf6e5, 0x64aa, 0x1, 0x0);
        gbc.writeMem(0xedd8, { 0x95 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xba7f, gbc.sp());
        EXPECT(0xedd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xedd8));
        // 95 0262
        gbc.setState(0xcc67, 0x7120, 0x6c80, 0x104f, 0xf84d, 0x299f, 0x1, 0x1);
        gbc.writeMem(0xcc67, { 0x95 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x7120, gbc.sp());
        EXPECT(0xcc68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xcc67));
        // 95 0263
        gbc.setState(0xdce0, 0xb568, 0x2490, 0x87ce, 0x2492, 0x837a, 0x0, 0x1);
        gbc.writeMem(0xdce0, { 0x95 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xb568, gbc.sp());
        EXPECT(0xdce1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xdce0));
        // 95 0264
        gbc.setState(0x14ac, 0xaa65, 0xaa90, 0xa07e, 0xaad1, 0x54e0, 0x0, 0x1);
        gbc.writeMem(0x14ac, { 0x95 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xaa65, gbc.sp());
        EXPECT(0x14ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0265
        gbc.setState(0x362, 0xa6f5, 0x5e40, 0xd82e, 0x700, 0xfcbc, 0x0, 0x1);
        gbc.writeMem(0x362, { 0x95 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xa6f5, gbc.sp());
        EXPECT(0x363, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0266
        gbc.setState(0x2afb, 0xee23, 0x8c40, 0x6474, 0x87de, 0x72e7, 0x0, 0x1);
        gbc.writeMem(0x2afb, { 0x95 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xee23, gbc.sp());
        EXPECT(0x2afc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0267
        gbc.setState(0x2f08, 0x9f2, 0xb740, 0xe8ad, 0xc83f, 0x885b, 0x0, 0x0);
        gbc.writeMem(0x2f08, { 0x95 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x9f2, gbc.sp());
        EXPECT(0x2f09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0268
        gbc.setState(0xe99, 0xedd7, 0xaf30, 0x2c28, 0xf859, 0x537c, 0x0, 0x0);
        gbc.writeMem(0xe99, { 0x95 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xedd7, gbc.sp());
        EXPECT(0xe9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0269
        gbc.setState(0x7a41, 0x1ccc, 0x95b0, 0xcb72, 0xfd5c, 0x8d52, 0x1, 0x1);
        gbc.writeMem(0x7a41, { 0x95 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x1ccc, gbc.sp());
        EXPECT(0x7a42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 026A
        gbc.setState(0x94dc, 0xd5d9, 0x6d10, 0x3aa9, 0xeb11, 0x560f, 0x0, 0x0);
        gbc.writeMem(0x94dc, { 0x95 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xd5d9, gbc.sp());
        EXPECT(0x94dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x94dc));
        // 95 026B
        gbc.setState(0x8e78, 0x41fd, 0xeff0, 0xfeb9, 0x5c6a, 0x2033, 0x1, 0x0);
        gbc.writeMem(0x8e78, { 0x95 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x41fd, gbc.sp());
        EXPECT(0x8e79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x8e78));
        // 95 026C
        gbc.setState(0x74ca, 0x100, 0x2a50, 0x7f79, 0x7cce, 0x5f8c, 0x1, 0x0);
        gbc.writeMem(0x74ca, { 0x95 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x100, gbc.sp());
        EXPECT(0x74cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 026E
        gbc.setState(0xe804, 0x389c, 0x520, 0x2727, 0xb439, 0xc585, 0x0, 0x1);
        gbc.writeMem(0xe804, { 0x95 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x389c, gbc.sp());
        EXPECT(0xe805, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xe804));
        // 95 026F
        gbc.setState(0x2365, 0x2ca8, 0x1e30, 0xf841, 0xa497, 0xcf17, 0x0, 0x1);
        gbc.writeMem(0x2365, { 0x95 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x2ca8, gbc.sp());
        EXPECT(0x2366, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0270
        gbc.setState(0x8c9c, 0xff80, 0xf4c0, 0xaae2, 0xa650, 0xc667, 0x0, 0x0);
        gbc.writeMem(0x8c9c, { 0x95 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xff80, gbc.sp());
        EXPECT(0x8c9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x8c9c));
        // 95 0271
        gbc.setState(0x9760, 0xb74, 0xf0c0, 0xde7f, 0x4be0, 0xa1b3, 0x1, 0x1);
        gbc.writeMem(0x9760, { 0x95 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xb74, gbc.sp());
        EXPECT(0x9761, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x9760));
        // 95 0272
        gbc.setState(0xb636, 0x18d9, 0xea0, 0x5b37, 0xb2fd, 0xd389, 0x0, 0x1);
        gbc.writeMem(0xb636, { 0x95 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x18d9, gbc.sp());
        EXPECT(0xb637, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xb636));
        // 95 0273
        gbc.setState(0xe410, 0x53ee, 0xb350, 0x63d5, 0x8ca7, 0xca82, 0x1, 0x1);
        gbc.writeMem(0xe410, { 0x95 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x53ee, gbc.sp());
        EXPECT(0xe411, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xe410));
        // 95 0274
        gbc.setState(0x1511, 0xd660, 0x3090, 0x97ce, 0xc731, 0xf092, 0x0, 0x1);
        gbc.writeMem(0x1511, { 0x95 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xd660, gbc.sp());
        EXPECT(0x1512, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0275
        gbc.setState(0xbc3f, 0xb3e7, 0x1040, 0xf23b, 0xad51, 0xda0a, 0x1, 0x1);
        gbc.writeMem(0xbc3f, { 0x95 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xb3e7, gbc.sp());
        EXPECT(0xbc40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xbc3f));
        // 95 0276
        gbc.setState(0x1fdf, 0x47bd, 0xfdc0, 0xc51, 0x2da, 0x11e3, 0x1, 0x0);
        gbc.writeMem(0x1fdf, { 0x95 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x47bd, gbc.sp());
        EXPECT(0x1fe0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0277
        gbc.setState(0x2e3a, 0x5ddf, 0x6f00, 0x9387, 0x77b3, 0x1114, 0x1, 0x1);
        gbc.writeMem(0x2e3a, { 0x95 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x5ddf, gbc.sp());
        EXPECT(0x2e3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0278
        gbc.setState(0x57c1, 0x5ba7, 0x5530, 0x55aa, 0x5043, 0x67dd, 0x1, 0x1);
        gbc.writeMem(0x57c1, { 0x95 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x5ba7, gbc.sp());
        EXPECT(0x57c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 027A
        gbc.setState(0xa065, 0x42ba, 0xe330, 0x5c1b, 0x250e, 0x66cb, 0x0, 0x0);
        gbc.writeMem(0xa065, { 0x95 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x42ba, gbc.sp());
        EXPECT(0xa066, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xa065));
        // 95 027B
        gbc.setState(0x1ee3, 0xca8c, 0xc910, 0x6339, 0x58c5, 0x37d1, 0x0, 0x0);
        gbc.writeMem(0x1ee3, { 0x95 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xca8c, gbc.sp());
        EXPECT(0x1ee4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 027C
        gbc.setState(0xaf6f, 0x2446, 0xd060, 0xe767, 0x737d, 0x1021, 0x0, 0x0);
        gbc.writeMem(0xaf6f, { 0x95 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x2446, gbc.sp());
        EXPECT(0xaf70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xaf6f));
        // 95 027D
        gbc.setState(0x8e0, 0xa45, 0x43e0, 0x964a, 0x3520, 0x6e1, 0x0, 0x1);
        gbc.writeMem(0x8e0, { 0x95 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xa45, gbc.sp());
        EXPECT(0x8e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 027E
        gbc.setState(0x59b3, 0x9559, 0xb5f0, 0x700d, 0xb5ce, 0x9913, 0x0, 0x1);
        gbc.writeMem(0x59b3, { 0x95 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x9559, gbc.sp());
        EXPECT(0x59b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 027F
        gbc.setState(0xdc5b, 0xa5aa, 0x3260, 0x915b, 0xf0e, 0x1f53, 0x0, 0x0);
        gbc.writeMem(0xdc5b, { 0x95 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xa5aa, gbc.sp());
        EXPECT(0xdc5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xdc5b));
        // 95 0280
        gbc.setState(0x424, 0x1503, 0x2850, 0x278a, 0xa728, 0x1d08, 0x1, 0x1);
        gbc.writeMem(0x424, { 0x95 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x1503, gbc.sp());
        EXPECT(0x425, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0281
        gbc.setState(0x2284, 0x3b88, 0xbe90, 0xab88, 0x19a1, 0xb727, 0x0, 0x0);
        gbc.writeMem(0x2284, { 0x95 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x3b88, gbc.sp());
        EXPECT(0x2285, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0282
        gbc.setState(0xa0a1, 0x7140, 0x4800, 0x9e4, 0x408f, 0x7c4d, 0x1, 0x1);
        gbc.writeMem(0xa0a1, { 0x95 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x7140, gbc.sp());
        EXPECT(0xa0a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xa0a1));
        // 95 0283
        gbc.setState(0x554f, 0x2c6d, 0x6d30, 0xe1e3, 0x3516, 0x57df, 0x0, 0x1);
        gbc.writeMem(0x554f, { 0x95 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x2c6d, gbc.sp());
        EXPECT(0x5550, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0285
        gbc.setState(0x846f, 0x9fe3, 0xc3b0, 0x2801, 0xe221, 0xcbe8, 0x0, 0x0);
        gbc.writeMem(0x846f, { 0x95 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x9fe3, gbc.sp());
        EXPECT(0x8470, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x846f));
        // 95 0286
        gbc.setState(0x7290, 0xab1, 0x8830, 0x5b1d, 0xc02, 0xa987, 0x1, 0x1);
        gbc.writeMem(0x7290, { 0x95 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xab1, gbc.sp());
        EXPECT(0x7291, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0288
        gbc.setState(0xe2a8, 0x4beb, 0x7780, 0x4a85, 0xe2a0, 0x5b33, 0x0, 0x0);
        gbc.writeMem(0xe2a8, { 0x95 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x4beb, gbc.sp());
        EXPECT(0xe2a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xe2a8));
        // 95 0289
        gbc.setState(0x91d4, 0xf831, 0x2560, 0x1cee, 0x9ce5, 0x5300, 0x1, 0x0);
        gbc.writeMem(0x91d4, { 0x95 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xf831, gbc.sp());
        EXPECT(0x91d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x91d4));
        // 95 028A
        gbc.setState(0x8af0, 0x28e8, 0xe980, 0xffab, 0x1e94, 0x91ec, 0x0, 0x0);
        gbc.writeMem(0x8af0, { 0x95 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x28e8, gbc.sp());
        EXPECT(0x8af1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x8af0));
        // 95 028B
        gbc.setState(0xec3f, 0x483a, 0x1de0, 0x188b, 0xb24a, 0x973, 0x1, 0x0);
        gbc.writeMem(0xec3f, { 0x95 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x483a, gbc.sp());
        EXPECT(0xec40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xec3f));
        // 95 028C
        gbc.setState(0xdf7, 0xedad, 0xca90, 0x5bf9, 0xbb88, 0x600d, 0x0, 0x1);
        gbc.writeMem(0xdf7, { 0x95 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xedad, gbc.sp());
        EXPECT(0xdf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 028D
        gbc.setState(0xe43d, 0x671a, 0xa380, 0x7e32, 0x7cc3, 0xd95a, 0x1, 0x0);
        gbc.writeMem(0xe43d, { 0x95 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x671a, gbc.sp());
        EXPECT(0xe43e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xe43d));
        // 95 028E
        gbc.setState(0xa86a, 0xabfa, 0x7c20, 0x7e5b, 0xe9be, 0xba22, 0x0, 0x1);
        gbc.writeMem(0xa86a, { 0x95 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xabfa, gbc.sp());
        EXPECT(0xa86b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xa86a));
        // 95 028F
        gbc.setState(0x9ce8, 0xab6d, 0xc7f0, 0x8a84, 0xcfd8, 0x7887, 0x0, 0x1);
        gbc.writeMem(0x9ce8, { 0x95 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xab6d, gbc.sp());
        EXPECT(0x9ce9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x9ce8));
        // 95 0290
        gbc.setState(0xa768, 0x6cd7, 0xeeb0, 0x5637, 0xc847, 0x9166, 0x1, 0x0);
        gbc.writeMem(0xa768, { 0x95 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x6cd7, gbc.sp());
        EXPECT(0xa769, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xa768));
        // 95 0291
        gbc.setState(0xeedc, 0x7b22, 0x64f0, 0x8555, 0x7f83, 0x4362, 0x1, 0x0);
        gbc.writeMem(0xeedc, { 0x95 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x7b22, gbc.sp());
        EXPECT(0xeedd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xeedc));
        // 95 0292
        gbc.setState(0x6ba6, 0x556c, 0x6a60, 0x45e, 0xea2a, 0x1c1e, 0x1, 0x0);
        gbc.writeMem(0x6ba6, { 0x95 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x556c, gbc.sp());
        EXPECT(0x6ba7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0293
        gbc.setState(0x28e3, 0xcc39, 0x490, 0x5fc5, 0x1dba, 0x6107, 0x0, 0x0);
        gbc.writeMem(0x28e3, { 0x95 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xcc39, gbc.sp());
        EXPECT(0x28e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0295
        gbc.setState(0x750f, 0x59e1, 0x7eb0, 0x8d34, 0xb4fc, 0x9e49, 0x1, 0x1);
        gbc.writeMem(0x750f, { 0x95 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x59e1, gbc.sp());
        EXPECT(0x7510, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0296
        gbc.setState(0x643e, 0x926f, 0xeea0, 0x5859, 0x8cf4, 0xb010, 0x1, 0x1);
        gbc.writeMem(0x643e, { 0x95 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x926f, gbc.sp());
        EXPECT(0x643f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0297
        gbc.setState(0xc52, 0xbfa1, 0x34f0, 0xde5c, 0x7ae9, 0x7883, 0x0, 0x0);
        gbc.writeMem(0xc52, { 0x95 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xbfa1, gbc.sp());
        EXPECT(0xc53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0298
        gbc.setState(0xd094, 0x83e6, 0xb350, 0x6570, 0x1b0b, 0x9617, 0x1, 0x0);
        gbc.writeMem(0xd094, { 0x95 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x83e6, gbc.sp());
        EXPECT(0xd095, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xd094));
        // 95 0299
        gbc.setState(0x4d52, 0x89d6, 0x9040, 0x7d68, 0xb322, 0x3bdb, 0x1, 0x0);
        gbc.writeMem(0x4d52, { 0x95 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x89d6, gbc.sp());
        EXPECT(0x4d53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 029A
        gbc.setState(0xad22, 0x2f4c, 0xdc60, 0x6103, 0x116c, 0xd47, 0x1, 0x0);
        gbc.writeMem(0xad22, { 0x95 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x2f4c, gbc.sp());
        EXPECT(0xad23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xad22));
        // 95 029B
        gbc.setState(0xaf71, 0x2e3, 0x6140, 0xf5ef, 0x52b9, 0xbb78, 0x1, 0x0);
        gbc.writeMem(0xaf71, { 0x95 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x2e3, gbc.sp());
        EXPECT(0xaf72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xaf71));
        // 95 029D
        gbc.setState(0xe9f1, 0xa087, 0xda10, 0xb581, 0x79c0, 0xda55, 0x1, 0x1);
        gbc.writeMem(0xe9f1, { 0x95 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xa087, gbc.sp());
        EXPECT(0xe9f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xe9f1));
        // 95 029E
        gbc.setState(0x962f, 0xc0f2, 0x73e0, 0x2dc3, 0x5a60, 0xa82c, 0x0, 0x0);
        gbc.writeMem(0x962f, { 0x95 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xc0f2, gbc.sp());
        EXPECT(0x9630, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x962f));
        // 95 029F
        gbc.setState(0x79aa, 0xc00c, 0xdad0, 0x6549, 0xe3b6, 0x5fe9, 0x0, 0x0);
        gbc.writeMem(0x79aa, { 0x95 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xc00c, gbc.sp());
        EXPECT(0x79ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 02A0
        gbc.setState(0x5efb, 0x6b74, 0x4020, 0xae10, 0xed97, 0xe303, 0x0, 0x1);
        gbc.writeMem(0x5efb, { 0x95 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x6b74, gbc.sp());
        EXPECT(0x5efc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 02A1
        gbc.setState(0x94b8, 0x366b, 0x7040, 0x824e, 0xb96d, 0xa8f7, 0x0, 0x0);
        gbc.writeMem(0x94b8, { 0x95 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x366b, gbc.sp());
        EXPECT(0x94b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x94b8));
        // 95 02A2
        gbc.setState(0x16c7, 0xc822, 0x72f0, 0xac4b, 0x237b, 0xbfea, 0x1, 0x0);
        gbc.writeMem(0x16c7, { 0x95 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xc822, gbc.sp());
        EXPECT(0x16c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 02A3
        gbc.setState(0x5e56, 0xa2a4, 0x6050, 0xf223, 0x681c, 0xb7f4, 0x1, 0x0);
        gbc.writeMem(0x5e56, { 0x95 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xa2a4, gbc.sp());
        EXPECT(0x5e57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 02A4
        gbc.setState(0x26f8, 0x7e25, 0x9af0, 0xc3d1, 0xf36c, 0x92df, 0x0, 0x0);
        gbc.writeMem(0x26f8, { 0x95 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x7e25, gbc.sp());
        EXPECT(0x26f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 02A5
        gbc.setState(0x78d2, 0xbde3, 0xc940, 0x80a7, 0x4f8f, 0x96b6, 0x0, 0x1);
        gbc.writeMem(0x78d2, { 0x95 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xbde3, gbc.sp());
        EXPECT(0x78d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 02A6
        gbc.setState(0x3825, 0x3e60, 0x7920, 0xfe77, 0xcf78, 0x33a4, 0x1, 0x0);
        gbc.writeMem(0x3825, { 0x95 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x3e60, gbc.sp());
        EXPECT(0x3826, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 02A7
        gbc.setState(0x1927, 0x3d56, 0xe4b0, 0x7196, 0xef46, 0xe329, 0x1, 0x0);
        gbc.writeMem(0x1927, { 0x95 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x3d56, gbc.sp());
        EXPECT(0x1928, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 02A8
        gbc.setState(0xc37, 0xa6c2, 0x4860, 0x981e, 0x3cc6, 0x1e3f, 0x0, 0x0);
        gbc.writeMem(0xc37, { 0x95 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xa6c2, gbc.sp());
        EXPECT(0xc38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 02A9
        gbc.setState(0x416, 0xde1, 0x81f0, 0xf509, 0x25f4, 0xfe76, 0x1, 0x1);
        gbc.writeMem(0x416, { 0x95 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xde1, gbc.sp());
        EXPECT(0x417, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 02AA
        gbc.setState(0x95b2, 0x2978, 0x6050, 0xe75b, 0x7fcc, 0x4c33, 0x1, 0x0);
        gbc.writeMem(0x95b2, { 0x95 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x2978, gbc.sp());
        EXPECT(0x95b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x95b2));
        // 95 02AB
        gbc.setState(0x2175, 0x908a, 0xf150, 0xa2a4, 0xa888, 0x3211, 0x0, 0x1);
        gbc.writeMem(0x2175, { 0x95 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x908a, gbc.sp());
        EXPECT(0x2176, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 02AC
        gbc.setState(0x9dc5, 0x3df4, 0xd400, 0xc333, 0x53f6, 0xbee2, 0x1, 0x0);
        gbc.writeMem(0x9dc5, { 0x95 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x3df4, gbc.sp());
        EXPECT(0x9dc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x9dc5));
        // 95 02AE
        gbc.setState(0x624b, 0xb42c, 0xbc80, 0x4c43, 0xa727, 0xfd1f, 0x0, 0x1);
        gbc.writeMem(0x624b, { 0x95 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xb42c, gbc.sp());
        EXPECT(0x624c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 02AF
        gbc.setState(0x4e78, 0x2341, 0xe060, 0xdb1, 0x564c, 0xf90e, 0x1, 0x1);
        gbc.writeMem(0x4e78, { 0x95 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x2341, gbc.sp());
        EXPECT(0x4e79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 02B0
        gbc.setState(0x9e3a, 0xb519, 0xb210, 0xa42c, 0x85e1, 0x4790, 0x1, 0x1);
        gbc.writeMem(0x9e3a, { 0x95 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xb519, gbc.sp());
        EXPECT(0x9e3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x9e3a));
        // 95 02B1
        gbc.setState(0x8d12, 0xa27, 0x56b0, 0x7849, 0xaa13, 0x1cb0, 0x0, 0x1);
        gbc.writeMem(0x8d12, { 0x95 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xa27, gbc.sp());
        EXPECT(0x8d13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x8d12));
        // 95 02B2
        gbc.setState(0xb2b, 0x71c0, 0x4c0, 0xef86, 0xfd7a, 0xbb84, 0x0, 0x1);
        gbc.writeMem(0xb2b, { 0x95 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x71c0, gbc.sp());
        EXPECT(0xb2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 02B3
        gbc.setState(0x45a, 0x9332, 0x5970, 0xdd7, 0x16e0, 0xb7c7, 0x1, 0x1);
        gbc.writeMem(0x45a, { 0x95 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x9332, gbc.sp());
        EXPECT(0x45b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 02B4
        gbc.setState(0xebfe, 0x65a, 0x2440, 0xadfb, 0x2daa, 0x4a9d, 0x0, 0x1);
        gbc.writeMem(0xebfe, { 0x95 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x65a, gbc.sp());
        EXPECT(0xebff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xebfe));
        // 95 02B5
        gbc.setState(0x6574, 0x3f48, 0xcb10, 0x12e7, 0x8f43, 0x462e, 0x0, 0x0);
        gbc.writeMem(0x6574, { 0x95 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x3f48, gbc.sp());
        EXPECT(0x6575, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 02B6
        gbc.setState(0xbb8, 0x5dc5, 0x5e60, 0x1f33, 0xa701, 0x2f5f, 0x1, 0x0);
        gbc.writeMem(0xbb8, { 0x95 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x5dc5, gbc.sp());
        EXPECT(0xbb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 02B7
        gbc.setState(0x4b94, 0x85, 0xbfd0, 0x3b1d, 0xa914, 0xcec3, 0x1, 0x1);
        gbc.writeMem(0x4b94, { 0x95 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x85, gbc.sp());
        EXPECT(0x4b95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 02B8
        gbc.setState(0x269a, 0x4a40, 0x43e0, 0x74d7, 0x6f54, 0xb788, 0x0, 0x0);
        gbc.writeMem(0x269a, { 0x95 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x4a40, gbc.sp());
        EXPECT(0x269b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 02BA
        gbc.setState(0xe38, 0xffec, 0x270, 0x9f02, 0x7053, 0xb7a, 0x0, 0x0);
        gbc.writeMem(0xe38, { 0x95 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xffec, gbc.sp());
        EXPECT(0xe39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 02BC
        gbc.setState(0x4256, 0x9ec9, 0xe440, 0x3d2e, 0xc054, 0x3894, 0x0, 0x0);
        gbc.writeMem(0x4256, { 0x95 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x9ec9, gbc.sp());
        EXPECT(0x4257, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 02BD
        gbc.setState(0xdfcd, 0xad2, 0xfb0, 0x79d1, 0x5bb7, 0xcc1d, 0x1, 0x1);
        gbc.writeMem(0xdfcd, { 0x95 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xad2, gbc.sp());
        EXPECT(0xdfce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xdfcd));
        // 95 02BE
        gbc.setState(0x24a8, 0x34c9, 0x3050, 0x1be6, 0x8ebe, 0x57b4, 0x0, 0x1);
        gbc.writeMem(0x24a8, { 0x95 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x34c9, gbc.sp());
        EXPECT(0x24a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 02BF
        gbc.setState(0xbd65, 0xe53e, 0x9540, 0x3bd, 0xcf8d, 0x8159, 0x0, 0x1);
        gbc.writeMem(0xbd65, { 0x95 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xe53e, gbc.sp());
        EXPECT(0xbd66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xbd65));
        // 95 02C0
        gbc.setState(0x5af6, 0xe1ca, 0xa9c0, 0x8ceb, 0x6373, 0xbf09, 0x0, 0x0);
        gbc.writeMem(0x5af6, { 0x95 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xe1ca, gbc.sp());
        EXPECT(0x5af7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 02C1
        gbc.setState(0xc0, 0x85aa, 0xf0d0, 0xa2ab, 0xb4d7, 0xb135, 0x1, 0x0);
        gbc.writeMem(0xc0, { 0x95 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x85aa, gbc.sp());
        EXPECT(0xc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 02C2
        gbc.setState(0xb6e7, 0x29cc, 0xb300, 0x6d9d, 0xe5e3, 0xe1c1, 0x1, 0x0);
        gbc.writeMem(0xb6e7, { 0x95 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x29cc, gbc.sp());
        EXPECT(0xb6e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xb6e7));
        // 95 02C4
        gbc.setState(0x6d42, 0x8883, 0x9610, 0xf51, 0xc03e, 0x5e07, 0x1, 0x1);
        gbc.writeMem(0x6d42, { 0x95 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x8883, gbc.sp());
        EXPECT(0x6d43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 02C5
        gbc.setState(0x2757, 0x93d9, 0xfd00, 0xc2f8, 0x35d0, 0x91dc, 0x0, 0x0);
        gbc.writeMem(0x2757, { 0x95 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x93d9, gbc.sp());
        EXPECT(0x2758, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 02C6
        gbc.setState(0x4e79, 0x8cba, 0x9c50, 0x4667, 0x20e8, 0xa1bd, 0x1, 0x1);
        gbc.writeMem(0x4e79, { 0x95 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x8cba, gbc.sp());
        EXPECT(0x4e7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 02C7
        gbc.setState(0xe8af, 0xa42f, 0x8180, 0x81ef, 0x9a3f, 0x2aed, 0x1, 0x1);
        gbc.writeMem(0xe8af, { 0x95 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xa42f, gbc.sp());
        EXPECT(0xe8b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xe8af));
        // 95 02C8
        gbc.setState(0x91cc, 0x9e37, 0x8f90, 0x6cbb, 0x5c87, 0xd7a4, 0x0, 0x1);
        gbc.writeMem(0x91cc, { 0x95 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x9e37, gbc.sp());
        EXPECT(0x91cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x91cc));
        // 95 02C9
        gbc.setState(0x79b6, 0xf151, 0xa30, 0xa377, 0xf71e, 0xe7c4, 0x0, 0x0);
        gbc.writeMem(0x79b6, { 0x95 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xf151, gbc.sp());
        EXPECT(0x79b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 02CA
        gbc.setState(0xb9b1, 0xffa1, 0xd5c0, 0x9762, 0x5e2e, 0x2dbb, 0x0, 0x0);
        gbc.writeMem(0xb9b1, { 0x95 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xffa1, gbc.sp());
        EXPECT(0xb9b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xb9b1));
        // 95 02CB
        gbc.setState(0x9d32, 0xd2e1, 0x1a10, 0xba6f, 0xd2a8, 0x4de3, 0x0, 0x0);
        gbc.writeMem(0x9d32, { 0x95 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xd2e1, gbc.sp());
        EXPECT(0x9d33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x9d32));
        // 95 02CC
        gbc.setState(0x10e4, 0x8487, 0x7630, 0x24b0, 0x9d47, 0x1f91, 0x0, 0x0);
        gbc.writeMem(0x10e4, { 0x95 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x8487, gbc.sp());
        EXPECT(0x10e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 02CD
        gbc.setState(0xee8a, 0x4d04, 0x96c0, 0xc400, 0xe2a4, 0x7880, 0x1, 0x0);
        gbc.writeMem(0xee8a, { 0x95 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x4d04, gbc.sp());
        EXPECT(0xee8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xee8a));
        // 95 02CE
        gbc.setState(0x840, 0xa79a, 0x41f0, 0xc4d9, 0x3868, 0xd489, 0x1, 0x1);
        gbc.writeMem(0x840, { 0x95 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xa79a, gbc.sp());
        EXPECT(0x841, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 02CF
        gbc.setState(0x23ce, 0x2da8, 0xd0f0, 0x9889, 0x90d9, 0xcb29, 0x0, 0x1);
        gbc.writeMem(0x23ce, { 0x95 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x2da8, gbc.sp());
        EXPECT(0x23cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 02D0
        gbc.setState(0x6910, 0xdb0e, 0x86d0, 0xd136, 0xf76c, 0xc9a9, 0x0, 0x0);
        gbc.writeMem(0x6910, { 0x95 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xdb0e, gbc.sp());
        EXPECT(0x6911, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 02D1
        gbc.setState(0xda5d, 0xfb0a, 0x860, 0x31c5, 0x8ed4, 0x731a, 0x0, 0x1);
        gbc.writeMem(0xda5d, { 0x95 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xfb0a, gbc.sp());
        EXPECT(0xda5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xda5d));
        // 95 02D2
        gbc.setState(0x82cc, 0x49aa, 0x10f0, 0xc3fa, 0x64a9, 0xa35, 0x1, 0x0);
        gbc.writeMem(0x82cc, { 0x95 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x49aa, gbc.sp());
        EXPECT(0x82cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x82cc));
        // 95 02D3
        gbc.setState(0xdbf0, 0x7d25, 0x2360, 0xcab9, 0x5fcd, 0xe932, 0x1, 0x0);
        gbc.writeMem(0xdbf0, { 0x95 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x7d25, gbc.sp());
        EXPECT(0xdbf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xdbf0));
        // 95 02D4
        gbc.setState(0x3f70, 0x8163, 0x1de0, 0xdcdb, 0x352f, 0xc4ae, 0x0, 0x0);
        gbc.writeMem(0x3f70, { 0x95 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x8163, gbc.sp());
        EXPECT(0x3f71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 02D5
        gbc.setState(0x9ef, 0x6b05, 0x6fd0, 0x4f98, 0x8d47, 0x2593, 0x1, 0x1);
        gbc.writeMem(0x9ef, { 0x95 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x6b05, gbc.sp());
        EXPECT(0x9f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 02D6
        gbc.setState(0x3b7b, 0x706a, 0xd510, 0xa9ae, 0x24da, 0xdce3, 0x0, 0x1);
        gbc.writeMem(0x3b7b, { 0x95 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x706a, gbc.sp());
        EXPECT(0x3b7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 02D7
        gbc.setState(0x68f4, 0x91ec, 0x7d90, 0xf0d3, 0x6bc5, 0xb84d, 0x0, 0x1);
        gbc.writeMem(0x68f4, { 0x95 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x91ec, gbc.sp());
        EXPECT(0x68f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 02D8
        gbc.setState(0x2e63, 0x891e, 0xeb0, 0xe049, 0xd2c6, 0xc41b, 0x1, 0x1);
        gbc.writeMem(0x2e63, { 0x95 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x891e, gbc.sp());
        EXPECT(0x2e64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 02D9
        gbc.setState(0x4178, 0x9aa7, 0x9ef0, 0x227b, 0xb2d7, 0x1cdd, 0x0, 0x1);
        gbc.writeMem(0x4178, { 0x95 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x9aa7, gbc.sp());
        EXPECT(0x4179, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 02DA
        gbc.setState(0x4e27, 0xbdcd, 0xb040, 0xd196, 0x1d46, 0x942e, 0x0, 0x0);
        gbc.writeMem(0x4e27, { 0x95 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xbdcd, gbc.sp());
        EXPECT(0x4e28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 02DB
        gbc.setState(0xabd2, 0x3d32, 0x7880, 0x1144, 0xfb7a, 0x410a, 0x0, 0x0);
        gbc.writeMem(0xabd2, { 0x95 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3d32, gbc.sp());
        EXPECT(0xabd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xabd2));
        // 95 02DC
        gbc.setState(0x3e93, 0x9216, 0xf2f0, 0x6cea, 0x8ef, 0x99f7, 0x1, 0x0);
        gbc.writeMem(0x3e93, { 0x95 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x9216, gbc.sp());
        EXPECT(0x3e94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 02DD
        gbc.setState(0x959c, 0x5a5e, 0x33a0, 0xe6a9, 0x5c3, 0xac6d, 0x1, 0x0);
        gbc.writeMem(0x959c, { 0x95 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x5a5e, gbc.sp());
        EXPECT(0x959d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x959c));
        // 95 02DE
        gbc.setState(0x336c, 0x6d27, 0x450, 0x5b34, 0xbecc, 0x34ae, 0x1, 0x0);
        gbc.writeMem(0x336c, { 0x95 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x6d27, gbc.sp());
        EXPECT(0x336d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 02DF
        gbc.setState(0xd8e6, 0x6bf9, 0x2390, 0xd4d3, 0x2467, 0x111d, 0x0, 0x0);
        gbc.writeMem(0xd8e6, { 0x95 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x6bf9, gbc.sp());
        EXPECT(0xd8e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xd8e6));
        // 95 02E0
        gbc.setState(0xcde6, 0xccb7, 0x6ed0, 0x60f2, 0xac21, 0x249c, 0x0, 0x1);
        gbc.writeMem(0xcde6, { 0x95 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xccb7, gbc.sp());
        EXPECT(0xcde7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xcde6));
        // 95 02E1
        gbc.setState(0xbb78, 0x5116, 0x4560, 0x3ee2, 0x333, 0xbd1d, 0x0, 0x1);
        gbc.writeMem(0xbb78, { 0x95 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x5116, gbc.sp());
        EXPECT(0xbb79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xbb78));
        // 95 02E2
        gbc.setState(0xae5f, 0x2ff5, 0x64c0, 0x66a3, 0x3370, 0x5952, 0x1, 0x1);
        gbc.writeMem(0xae5f, { 0x95 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x2ff5, gbc.sp());
        EXPECT(0xae60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xae5f));
        // 95 02E3
        gbc.setState(0xd4af, 0x413e, 0x6060, 0x5dd4, 0x878e, 0xcf1f, 0x0, 0x0);
        gbc.writeMem(0xd4af, { 0x95 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x413e, gbc.sp());
        EXPECT(0xd4b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xd4af));
        // 95 02E4
        gbc.setState(0x68a, 0x49cd, 0x9850, 0xcfc3, 0xedc, 0xb6f, 0x0, 0x1);
        gbc.writeMem(0x68a, { 0x95 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x49cd, gbc.sp());
        EXPECT(0x68b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 02E5
        gbc.setState(0x8ba6, 0x48a2, 0xee50, 0x5b29, 0xcc70, 0x48f8, 0x1, 0x0);
        gbc.writeMem(0x8ba6, { 0x95 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x48a2, gbc.sp());
        EXPECT(0x8ba7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x8ba6));
        // 95 02E6
        gbc.setState(0x291b, 0x563, 0x31c0, 0xe82a, 0x5cb3, 0x727f, 0x0, 0x1);
        gbc.writeMem(0x291b, { 0x95 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x563, gbc.sp());
        EXPECT(0x291c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 02E7
        gbc.setState(0xabb1, 0xdd49, 0xa9b0, 0xbf6, 0x88e, 0xc4b4, 0x1, 0x0);
        gbc.writeMem(0xabb1, { 0x95 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xdd49, gbc.sp());
        EXPECT(0xabb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xabb1));
        // 95 02E8
        gbc.setState(0xcbda, 0x13fd, 0x98e0, 0xa613, 0xbccd, 0x784b, 0x1, 0x0);
        gbc.writeMem(0xcbda, { 0x95 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x13fd, gbc.sp());
        EXPECT(0xcbdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xcbda));
        // 95 02E9
        gbc.setState(0x512b, 0x85f3, 0x5d0, 0xe137, 0x58f7, 0x5fd8, 0x1, 0x0);
        gbc.writeMem(0x512b, { 0x95 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x85f3, gbc.sp());
        EXPECT(0x512c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 02EA
        gbc.setState(0x5017, 0xb441, 0x9210, 0x7a76, 0x7325, 0x6ae0, 0x0, 0x1);
        gbc.writeMem(0x5017, { 0x95 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xb441, gbc.sp());
        EXPECT(0x5018, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 02EB
        gbc.setState(0x9e85, 0xf8a6, 0x33b0, 0x9f0a, 0x1d04, 0xaff8, 0x0, 0x1);
        gbc.writeMem(0x9e85, { 0x95 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xf8a6, gbc.sp());
        EXPECT(0x9e86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x9e85));
        // 95 02EC
        gbc.setState(0x71c, 0x67e9, 0x10f0, 0xf8a4, 0x4bbb, 0xcd17, 0x1, 0x0);
        gbc.writeMem(0x71c, { 0x95 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x67e9, gbc.sp());
        EXPECT(0x71d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 02EE
        gbc.setState(0x1c14, 0x2255, 0x6b60, 0xcc93, 0x4d0b, 0xbb0b, 0x1, 0x0);
        gbc.writeMem(0x1c14, { 0x95 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x2255, gbc.sp());
        EXPECT(0x1c15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 02EF
        gbc.setState(0x9627, 0xa66, 0xad20, 0x64a5, 0x761f, 0x9c08, 0x0, 0x0);
        gbc.writeMem(0x9627, { 0x95 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xa66, gbc.sp());
        EXPECT(0x9628, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x9627));
        // 95 02F0
        gbc.setState(0x7102, 0x4753, 0xfbf0, 0x591d, 0xf5a4, 0x3f3b, 0x0, 0x0);
        gbc.writeMem(0x7102, { 0x95 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x4753, gbc.sp());
        EXPECT(0x7103, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 02F2
        gbc.setState(0xae74, 0xfaac, 0xc010, 0x1f1, 0x2a3d, 0x4cf6, 0x1, 0x0);
        gbc.writeMem(0xae74, { 0x95 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xfaac, gbc.sp());
        EXPECT(0xae75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xae74));
        // 95 02F3
        gbc.setState(0x435a, 0xe727, 0x12e0, 0x531, 0xb552, 0xfb25, 0x1, 0x0);
        gbc.writeMem(0x435a, { 0x95 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xe727, gbc.sp());
        EXPECT(0x435b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 02F4
        gbc.setState(0xc0dd, 0x9894, 0x8ec0, 0xea00, 0x4df1, 0x70ff, 0x0, 0x0);
        gbc.writeMem(0xc0dd, { 0x95 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x9894, gbc.sp());
        EXPECT(0xc0de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xc0dd));
        // 95 02F5
        gbc.setState(0x51b4, 0x87b0, 0xb1a0, 0xe936, 0xf1ca, 0xc611, 0x1, 0x0);
        gbc.writeMem(0x51b4, { 0x95 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x87b0, gbc.sp());
        EXPECT(0x51b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 02F6
        gbc.setState(0x16c8, 0x4889, 0x4500, 0x493b, 0x678f, 0xdd01, 0x0, 0x1);
        gbc.writeMem(0x16c8, { 0x95 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x4889, gbc.sp());
        EXPECT(0x16c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 02F9
        gbc.setState(0xa01, 0x59e6, 0xc6f0, 0x7ba3, 0x6a7e, 0xcbfb, 0x1, 0x1);
        gbc.writeMem(0xa01, { 0x95 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x59e6, gbc.sp());
        EXPECT(0xa02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 02FA
        gbc.setState(0xd9a5, 0xd59d, 0x3ab0, 0xbbae, 0x3c1d, 0x53f0, 0x1, 0x1);
        gbc.writeMem(0xd9a5, { 0x95 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xd59d, gbc.sp());
        EXPECT(0xd9a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xd9a5));
        // 95 02FC
        gbc.setState(0xce6b, 0x6517, 0x7270, 0xdf9a, 0xd074, 0x1a73, 0x1, 0x0);
        gbc.writeMem(0xce6b, { 0x95 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x6517, gbc.sp());
        EXPECT(0xce6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xce6b));
        // 95 02FD
        gbc.setState(0x8a0d, 0x813, 0xf960, 0xef3d, 0x7693, 0x8ad9, 0x1, 0x0);
        gbc.writeMem(0x8a0d, { 0x95 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x813, gbc.sp());
        EXPECT(0x8a0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x8a0d));
        // 95 02FE
        gbc.setState(0x1ab7, 0x63a7, 0x7e00, 0xe0d8, 0x360b, 0x178b, 0x1, 0x0);
        gbc.writeMem(0x1ab7, { 0x95 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x63a7, gbc.sp());
        EXPECT(0x1ab8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 02FF
        gbc.setState(0x761f, 0xf642, 0x8190, 0x7487, 0xdedd, 0x99e5, 0x1, 0x0);
        gbc.writeMem(0x761f, { 0x95 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xf642, gbc.sp());
        EXPECT(0x7620, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0300
        gbc.setState(0x9391, 0x846e, 0x2d40, 0x8d44, 0xedd3, 0xeaa5, 0x0, 0x0);
        gbc.writeMem(0x9391, { 0x95 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x846e, gbc.sp());
        EXPECT(0x9392, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x9391));
        // 95 0301
        gbc.setState(0xc145, 0x406, 0xe90, 0xf565, 0x6cbb, 0x73a8, 0x1, 0x1);
        gbc.writeMem(0xc145, { 0x95 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x406, gbc.sp());
        EXPECT(0xc146, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xc145));
        // 95 0302
        gbc.setState(0x5f9, 0x701a, 0xd860, 0x5aae, 0xde74, 0x65e1, 0x0, 0x0);
        gbc.writeMem(0x5f9, { 0x95 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x701a, gbc.sp());
        EXPECT(0x5fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0303
        gbc.setState(0x52bb, 0x81f9, 0x9290, 0x343e, 0x6d60, 0xb50d, 0x0, 0x1);
        gbc.writeMem(0x52bb, { 0x95 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x81f9, gbc.sp());
        EXPECT(0x52bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0304
        gbc.setState(0x4c88, 0xd191, 0xae30, 0xafdc, 0x7a33, 0x9702, 0x0, 0x0);
        gbc.writeMem(0x4c88, { 0x95 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xd191, gbc.sp());
        EXPECT(0x4c89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0305
        gbc.setState(0xb87f, 0x625c, 0x6960, 0xbfe7, 0xaf83, 0xea0b, 0x1, 0x0);
        gbc.writeMem(0xb87f, { 0x95 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x625c, gbc.sp());
        EXPECT(0xb880, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xb87f));
        // 95 0306
        gbc.setState(0xda89, 0x3f4f, 0xc8d0, 0x12e7, 0xab90, 0xfcc, 0x1, 0x1);
        gbc.writeMem(0xda89, { 0x95 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x3f4f, gbc.sp());
        EXPECT(0xda8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xda89));
        // 95 0307
        gbc.setState(0xa051, 0x1cab, 0x6140, 0x38bd, 0x391c, 0xb14, 0x0, 0x1);
        gbc.writeMem(0xa051, { 0x95 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x1cab, gbc.sp());
        EXPECT(0xa052, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xa051));
        // 95 0308
        gbc.setState(0x2336, 0x3c3d, 0x8d10, 0xe6a, 0xb982, 0x712e, 0x1, 0x0);
        gbc.writeMem(0x2336, { 0x95 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x3c3d, gbc.sp());
        EXPECT(0x2337, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0309
        gbc.setState(0x6ea7, 0xd41f, 0x8eb0, 0x2be, 0x87c0, 0x2b9a, 0x1, 0x0);
        gbc.writeMem(0x6ea7, { 0x95 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xd41f, gbc.sp());
        EXPECT(0x6ea8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 030A
        gbc.setState(0xb69b, 0x5b4c, 0x3e80, 0xeb02, 0x5a3d, 0x51ba, 0x0, 0x1);
        gbc.writeMem(0xb69b, { 0x95 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x5b4c, gbc.sp());
        EXPECT(0xb69c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xb69b));
        // 95 030B
        gbc.setState(0x2564, 0x3368, 0x6d00, 0x78d4, 0x9a8f, 0xb3c1, 0x0, 0x0);
        gbc.writeMem(0x2564, { 0x95 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x3368, gbc.sp());
        EXPECT(0x2565, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 030C
        gbc.setState(0x6025, 0x9143, 0xc350, 0x7663, 0xfd80, 0xb2da, 0x1, 0x0);
        gbc.writeMem(0x6025, { 0x95 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x9143, gbc.sp());
        EXPECT(0x6026, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 030D
        gbc.setState(0x3cb, 0x7937, 0x7ed0, 0xc6b6, 0x9852, 0x8198, 0x1, 0x0);
        gbc.writeMem(0x3cb, { 0x95 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x7937, gbc.sp());
        EXPECT(0x3cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 030E
        gbc.setState(0x5c50, 0x7c62, 0xa040, 0x468, 0x8932, 0x8bcf, 0x0, 0x1);
        gbc.writeMem(0x5c50, { 0x95 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x7c62, gbc.sp());
        EXPECT(0x5c51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 030F
        gbc.setState(0x2ec7, 0x767f, 0x27d0, 0x3dd, 0x81e4, 0xb5de, 0x1, 0x0);
        gbc.writeMem(0x2ec7, { 0x95 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x767f, gbc.sp());
        EXPECT(0x2ec8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0310
        gbc.setState(0xc681, 0xf44d, 0x7820, 0xce06, 0xc805, 0x3b27, 0x0, 0x0);
        gbc.writeMem(0xc681, { 0x95 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xf44d, gbc.sp());
        EXPECT(0xc682, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xc681));
        // 95 0311
        gbc.setState(0x24f0, 0x6320, 0x4cf0, 0x3db6, 0x90a9, 0x904d, 0x1, 0x0);
        gbc.writeMem(0x24f0, { 0x95 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x6320, gbc.sp());
        EXPECT(0x24f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0312
        gbc.setState(0xa12, 0x2748, 0x56e0, 0x2e92, 0x3c41, 0x6c82, 0x0, 0x1);
        gbc.writeMem(0xa12, { 0x95 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x2748, gbc.sp());
        EXPECT(0xa13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0313
        gbc.setState(0x92a7, 0x874b, 0x9070, 0xc24e, 0x59b9, 0xb5b5, 0x0, 0x0);
        gbc.writeMem(0x92a7, { 0x95 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x874b, gbc.sp());
        EXPECT(0x92a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x92a7));
        // 95 0314
        gbc.setState(0xa100, 0xa68a, 0xa9c0, 0xc0bb, 0xf9e, 0xddb8, 0x1, 0x1);
        gbc.writeMem(0xa100, { 0x95 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xa68a, gbc.sp());
        EXPECT(0xa101, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xa100));
        // 95 0315
        gbc.setState(0x2b7f, 0xa338, 0x8630, 0xf891, 0x9330, 0x5a11, 0x0, 0x1);
        gbc.writeMem(0x2b7f, { 0x95 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xa338, gbc.sp());
        EXPECT(0x2b80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0316
        gbc.setState(0xbaea, 0xd327, 0xfe90, 0xed, 0xc6c1, 0xf2b2, 0x1, 0x1);
        gbc.writeMem(0xbaea, { 0x95 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xd327, gbc.sp());
        EXPECT(0xbaeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xbaea));
        // 95 0317
        gbc.setState(0x5cd7, 0x29ca, 0xe730, 0x94da, 0x4232, 0x5973, 0x0, 0x1);
        gbc.writeMem(0x5cd7, { 0x95 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x29ca, gbc.sp());
        EXPECT(0x5cd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0318
        gbc.setState(0xe9b1, 0xd50b, 0xbf70, 0xd4d0, 0x7208, 0xa5db, 0x1, 0x0);
        gbc.writeMem(0xe9b1, { 0x95 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xd50b, gbc.sp());
        EXPECT(0xe9b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xe9b1));
        // 95 0319
        gbc.setState(0x32a9, 0x3da4, 0x5d20, 0x49da, 0xe2aa, 0x40e4, 0x0, 0x1);
        gbc.writeMem(0x32a9, { 0x95 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x3da4, gbc.sp());
        EXPECT(0x32aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 031A
        gbc.setState(0x4b95, 0x85f, 0x9080, 0x967b, 0x9701, 0x201e, 0x0, 0x1);
        gbc.writeMem(0x4b95, { 0x95 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x85f, gbc.sp());
        EXPECT(0x4b96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 031B
        gbc.setState(0xc6c9, 0xd58e, 0x35a0, 0x723a, 0x265c, 0x372f, 0x0, 0x1);
        gbc.writeMem(0xc6c9, { 0x95 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xd58e, gbc.sp());
        EXPECT(0xc6ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xc6c9));
        // 95 031C
        gbc.setState(0x3e0e, 0xf5d1, 0xd8b0, 0xf71f, 0x15fa, 0xf2aa, 0x1, 0x0);
        gbc.writeMem(0x3e0e, { 0x95 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xf5d1, gbc.sp());
        EXPECT(0x3e0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 031D
        gbc.setState(0x7ef9, 0xf0d9, 0xaeb0, 0x396d, 0x17f1, 0xc942, 0x0, 0x0);
        gbc.writeMem(0x7ef9, { 0x95 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xf0d9, gbc.sp());
        EXPECT(0x7efa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 031F
        gbc.setState(0xe853, 0x9175, 0xe3e0, 0x2645, 0xa16e, 0x975, 0x0, 0x1);
        gbc.writeMem(0xe853, { 0x95 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x9175, gbc.sp());
        EXPECT(0xe854, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xe853));
        // 95 0320
        gbc.setState(0xdd24, 0xd53d, 0x95b0, 0x32a2, 0x1da, 0x36e0, 0x0, 0x0);
        gbc.writeMem(0xdd24, { 0x95 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xd53d, gbc.sp());
        EXPECT(0xdd25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xdd24));
        // 95 0321
        gbc.setState(0xe80b, 0xd4d6, 0xaab0, 0x9793, 0x40a8, 0x150b, 0x0, 0x1);
        gbc.writeMem(0xe80b, { 0x95 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xd4d6, gbc.sp());
        EXPECT(0xe80c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xe80b));
        // 95 0322
        gbc.setState(0xc1d2, 0x5e9b, 0xafe0, 0xcd7e, 0x68e0, 0xc48a, 0x1, 0x0);
        gbc.writeMem(0xc1d2, { 0x95 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x5e9b, gbc.sp());
        EXPECT(0xc1d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xc1d2));
        // 95 0323
        gbc.setState(0xda0c, 0x7605, 0xde60, 0x6a3a, 0x5e2e, 0xe164, 0x1, 0x1);
        gbc.writeMem(0xda0c, { 0x95 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x7605, gbc.sp());
        EXPECT(0xda0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xda0c));
        // 95 0324
        gbc.setState(0x61f0, 0xcdd0, 0x5d70, 0x24c1, 0x75a2, 0x2f0, 0x0, 0x1);
        gbc.writeMem(0x61f0, { 0x95 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xcdd0, gbc.sp());
        EXPECT(0x61f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0325
        gbc.setState(0xab63, 0xccd9, 0x42f0, 0xa429, 0xc929, 0x2170, 0x1, 0x0);
        gbc.writeMem(0xab63, { 0x95 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xccd9, gbc.sp());
        EXPECT(0xab64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xab63));
        // 95 0327
        gbc.setState(0x597c, 0xcb34, 0x5880, 0x4ca6, 0x36f7, 0x9d96, 0x0, 0x1);
        gbc.writeMem(0x597c, { 0x95 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xcb34, gbc.sp());
        EXPECT(0x597d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0328
        gbc.setState(0x223c, 0xb0cc, 0x110, 0x67a5, 0x7b4a, 0xda77, 0x0, 0x1);
        gbc.writeMem(0x223c, { 0x95 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xb0cc, gbc.sp());
        EXPECT(0x223d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0329
        gbc.setState(0x9af6, 0xd185, 0x700, 0xc2d3, 0x11a9, 0x80d9, 0x0, 0x0);
        gbc.writeMem(0x9af6, { 0x95 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xd185, gbc.sp());
        EXPECT(0x9af7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x9af6));
        // 95 032B
        gbc.setState(0x6f00, 0x3d4e, 0x5210, 0x4d12, 0x6e5f, 0xb91, 0x0, 0x1);
        gbc.writeMem(0x6f00, { 0x95 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x3d4e, gbc.sp());
        EXPECT(0x6f01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 032C
        gbc.setState(0x89a1, 0x1cf6, 0x3690, 0xf72a, 0x97e7, 0xfe0d, 0x1, 0x0);
        gbc.writeMem(0x89a1, { 0x95 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x1cf6, gbc.sp());
        EXPECT(0x89a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x89a1));
        // 95 032D
        gbc.setState(0x1a76, 0xaf84, 0xbeb0, 0x69cd, 0xdd2b, 0x423a, 0x0, 0x1);
        gbc.writeMem(0x1a76, { 0x95 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xaf84, gbc.sp());
        EXPECT(0x1a77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 032E
        gbc.setState(0x3433, 0xe9ea, 0x9c80, 0x3211, 0x1174, 0x6f4d, 0x0, 0x0);
        gbc.writeMem(0x3433, { 0x95 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xe9ea, gbc.sp());
        EXPECT(0x3434, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 032F
        gbc.setState(0x2909, 0x1866, 0xc440, 0xfeea, 0x29a2, 0xd0c5, 0x0, 0x1);
        gbc.writeMem(0x2909, { 0x95 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x1866, gbc.sp());
        EXPECT(0x290a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0330
        gbc.setState(0x2034, 0x812, 0x7790, 0xce4b, 0xc9ff, 0xd548, 0x1, 0x0);
        gbc.writeMem(0x2034, { 0x95 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x812, gbc.sp());
        EXPECT(0x2035, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0331
        gbc.setState(0xa0b, 0xfbf, 0x6e0, 0xc0df, 0x5535, 0x60e4, 0x0, 0x1);
        gbc.writeMem(0xa0b, { 0x95 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xfbf, gbc.sp());
        EXPECT(0xa0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0332
        gbc.setState(0x56ba, 0xbc76, 0x58c0, 0xa27f, 0x6595, 0x6fc, 0x1, 0x1);
        gbc.writeMem(0x56ba, { 0x95 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xbc76, gbc.sp());
        EXPECT(0x56bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0333
        gbc.setState(0x8727, 0xa0cc, 0x8a80, 0x49a2, 0x5f10, 0xb969, 0x1, 0x1);
        gbc.writeMem(0x8727, { 0x95 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xa0cc, gbc.sp());
        EXPECT(0x8728, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x8727));
        // 95 0334
        gbc.setState(0x283d, 0xff47, 0xa280, 0xf222, 0x2fd, 0xacfa, 0x1, 0x0);
        gbc.writeMem(0x283d, { 0x95 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xff47, gbc.sp());
        EXPECT(0x283e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0335
        gbc.setState(0x1629, 0x51b0, 0x5710, 0xdad0, 0xa1c1, 0x91ff, 0x1, 0x1);
        gbc.writeMem(0x1629, { 0x95 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x51b0, gbc.sp());
        EXPECT(0x162a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0336
        gbc.setState(0x6256, 0x3d2d, 0xd840, 0x8a7c, 0x616f, 0x7583, 0x1, 0x0);
        gbc.writeMem(0x6256, { 0x95 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x3d2d, gbc.sp());
        EXPECT(0x6257, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0337
        gbc.setState(0xbcd, 0xb8a1, 0x9730, 0xfdbc, 0xb59b, 0x5b0, 0x0, 0x1);
        gbc.writeMem(0xbcd, { 0x95 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xb8a1, gbc.sp());
        EXPECT(0xbce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0339
        gbc.setState(0x3d, 0xa9b3, 0x43c0, 0x64ee, 0x40ee, 0x2632, 0x1, 0x0);
        gbc.writeMem(0x3d, { 0x95 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xa9b3, gbc.sp());
        EXPECT(0x3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 033A
        gbc.setState(0xba2e, 0xae0d, 0xfea0, 0x514, 0x7b34, 0x3d45, 0x0, 0x0);
        gbc.writeMem(0xba2e, { 0x95 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xae0d, gbc.sp());
        EXPECT(0xba2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xba2e));
        // 95 033B
        gbc.setState(0x7f38, 0x57de, 0x9a00, 0x5d73, 0xff94, 0x4bb2, 0x0, 0x0);
        gbc.writeMem(0x7f38, { 0x95 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x57de, gbc.sp());
        EXPECT(0x7f39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 033C
        gbc.setState(0x613c, 0x6151, 0x4080, 0xcf82, 0xba58, 0x243c, 0x1, 0x1);
        gbc.writeMem(0x613c, { 0x95 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x6151, gbc.sp());
        EXPECT(0x613d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 033D
        gbc.setState(0x6fc5, 0x484f, 0x5090, 0xde03, 0x3626, 0xbcf3, 0x0, 0x1);
        gbc.writeMem(0x6fc5, { 0x95 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x484f, gbc.sp());
        EXPECT(0x6fc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 033E
        gbc.setState(0xb552, 0x2248, 0x760, 0xa219, 0x7592, 0x1262, 0x0, 0x0);
        gbc.writeMem(0xb552, { 0x95 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2248, gbc.sp());
        EXPECT(0xb553, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xb552));
        // 95 033F
        gbc.setState(0x6d56, 0x94dc, 0xdfe0, 0x9514, 0xb906, 0x2f57, 0x0, 0x0);
        gbc.writeMem(0x6d56, { 0x95 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x94dc, gbc.sp());
        EXPECT(0x6d57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0340
        gbc.setState(0x4ebe, 0x534d, 0x3de0, 0x9215, 0x7d26, 0x8635, 0x1, 0x1);
        gbc.writeMem(0x4ebe, { 0x95 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x534d, gbc.sp());
        EXPECT(0x4ebf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0341
        gbc.setState(0x5f3d, 0x5070, 0x31c0, 0x207d, 0x7ba3, 0x2640, 0x1, 0x1);
        gbc.writeMem(0x5f3d, { 0x95 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x5070, gbc.sp());
        EXPECT(0x5f3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0342
        gbc.setState(0xad1, 0xf0b, 0xd2d0, 0x21af, 0x60a, 0x9c63, 0x1, 0x0);
        gbc.writeMem(0xad1, { 0x95 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xf0b, gbc.sp());
        EXPECT(0xad2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0343
        gbc.setState(0x4175, 0x4ae6, 0x5550, 0x544b, 0x8acf, 0x638f, 0x0, 0x1);
        gbc.writeMem(0x4175, { 0x95 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x4ae6, gbc.sp());
        EXPECT(0x4176, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0344
        gbc.setState(0xc75d, 0xcc55, 0x9630, 0x74b3, 0xf19, 0x5aa, 0x0, 0x1);
        gbc.writeMem(0xc75d, { 0x95 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xcc55, gbc.sp());
        EXPECT(0xc75e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xc75d));
        // 95 0345
        gbc.setState(0xcdb5, 0x319d, 0xad90, 0xb6a8, 0x2dd8, 0xd3b2, 0x1, 0x0);
        gbc.writeMem(0xcdb5, { 0x95 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x319d, gbc.sp());
        EXPECT(0xcdb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xcdb5));
        // 95 0346
        gbc.setState(0x10b8, 0xee91, 0xb020, 0x949b, 0x8d7, 0x6339, 0x1, 0x0);
        gbc.writeMem(0x10b8, { 0x95 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xee91, gbc.sp());
        EXPECT(0x10b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0347
        gbc.setState(0x413b, 0x8c24, 0xd1f0, 0x105f, 0x8137, 0x2747, 0x1, 0x0);
        gbc.writeMem(0x413b, { 0x95 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x8c24, gbc.sp());
        EXPECT(0x413c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0348
        gbc.setState(0xaa21, 0xadbe, 0xfde0, 0xb7b7, 0x8e36, 0x101, 0x0, 0x0);
        gbc.writeMem(0xaa21, { 0x95 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xadbe, gbc.sp());
        EXPECT(0xaa22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xaa21));
        // 95 0349
        gbc.setState(0x463f, 0x6631, 0x5d70, 0xcd51, 0x4ed1, 0x28e7, 0x0, 0x0);
        gbc.writeMem(0x463f, { 0x95 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x6631, gbc.sp());
        EXPECT(0x4640, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 034A
        gbc.setState(0x3dc8, 0xb126, 0xed20, 0xe81f, 0x8ee4, 0x6af1, 0x0, 0x0);
        gbc.writeMem(0x3dc8, { 0x95 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xb126, gbc.sp());
        EXPECT(0x3dc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 034B
        gbc.setState(0x9367, 0x6e11, 0xa240, 0xb37, 0xd8f6, 0xcd34, 0x1, 0x0);
        gbc.writeMem(0x9367, { 0x95 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x6e11, gbc.sp());
        EXPECT(0x9368, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x9367));
        // 95 034C
        gbc.setState(0x7736, 0xf673, 0x6700, 0xfdc2, 0xbb51, 0x1aa8, 0x0, 0x1);
        gbc.writeMem(0x7736, { 0x95 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xf673, gbc.sp());
        EXPECT(0x7737, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 034D
        gbc.setState(0x3d62, 0xd102, 0x6660, 0xf609, 0x239, 0x7ba7, 0x1, 0x0);
        gbc.writeMem(0x3d62, { 0x95 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xd102, gbc.sp());
        EXPECT(0x3d63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0350
        gbc.setState(0x8f77, 0xf2f8, 0x3e40, 0x57d6, 0x9328, 0x8fa, 0x0, 0x1);
        gbc.writeMem(0x8f77, { 0x95 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xf2f8, gbc.sp());
        EXPECT(0x8f78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x8f77));
        // 95 0351
        gbc.setState(0x25b8, 0xf8e9, 0x7bd0, 0xfbf5, 0x9818, 0xb455, 0x0, 0x0);
        gbc.writeMem(0x25b8, { 0x95 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xf8e9, gbc.sp());
        EXPECT(0x25b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0352
        gbc.setState(0x311a, 0xb17a, 0x5180, 0xf1f3, 0xf383, 0x7734, 0x0, 0x1);
        gbc.writeMem(0x311a, { 0x95 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xb17a, gbc.sp());
        EXPECT(0x311b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0353
        gbc.setState(0x4aa7, 0x4a0d, 0xb040, 0x7f74, 0x90a0, 0x7f90, 0x1, 0x1);
        gbc.writeMem(0x4aa7, { 0x95 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x4a0d, gbc.sp());
        EXPECT(0x4aa8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0354
        gbc.setState(0x5500, 0x5f33, 0xe1f0, 0x552c, 0x6ab6, 0xe54b, 0x1, 0x0);
        gbc.writeMem(0x5500, { 0x95 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x5f33, gbc.sp());
        EXPECT(0x5501, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0355
        gbc.setState(0x74bd, 0x7ca4, 0x1400, 0x268b, 0x4e04, 0x8162, 0x0, 0x0);
        gbc.writeMem(0x74bd, { 0x95 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x7ca4, gbc.sp());
        EXPECT(0x74be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0356
        gbc.setState(0xbebb, 0xc222, 0xc0d0, 0x1cd4, 0xf0f8, 0xfb65, 0x0, 0x1);
        gbc.writeMem(0xbebb, { 0x95 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xc222, gbc.sp());
        EXPECT(0xbebc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xbebb));
        // 95 0357
        gbc.setState(0x2e20, 0xd4da, 0xde40, 0x44b9, 0x3206, 0x8873, 0x0, 0x1);
        gbc.writeMem(0x2e20, { 0x95 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xd4da, gbc.sp());
        EXPECT(0x2e21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0358
        gbc.setState(0xbf6, 0x1fc2, 0xb90, 0x7157, 0xfcfc, 0x7962, 0x0, 0x1);
        gbc.writeMem(0xbf6, { 0x95 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x1fc2, gbc.sp());
        EXPECT(0xbf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0359
        gbc.setState(0x9abc, 0x8043, 0xce50, 0x4e1f, 0x821, 0xaa4, 0x0, 0x1);
        gbc.writeMem(0x9abc, { 0x95 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x8043, gbc.sp());
        EXPECT(0x9abd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x9abc));
        // 95 035B
        gbc.setState(0x9a53, 0xc801, 0xee00, 0x304a, 0x1beb, 0x7ee7, 0x1, 0x0);
        gbc.writeMem(0x9a53, { 0x95 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xc801, gbc.sp());
        EXPECT(0x9a54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x9a53));
        // 95 035C
        gbc.setState(0xc94d, 0xf97a, 0x9ab0, 0x8393, 0xccda, 0x8767, 0x0, 0x0);
        gbc.writeMem(0xc94d, { 0x95 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xf97a, gbc.sp());
        EXPECT(0xc94e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xc94d));
        // 95 035D
        gbc.setState(0x997a, 0x38f7, 0x3c60, 0x63fb, 0x695a, 0xc9c6, 0x0, 0x1);
        gbc.writeMem(0x997a, { 0x95 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x38f7, gbc.sp());
        EXPECT(0x997b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x997a));
        // 95 035E
        gbc.setState(0x4b32, 0x8a00, 0x2520, 0x295e, 0xe765, 0x15d5, 0x0, 0x1);
        gbc.writeMem(0x4b32, { 0x95 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x8a00, gbc.sp());
        EXPECT(0x4b33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 035F
        gbc.setState(0x8a5d, 0xf61e, 0xd020, 0x485, 0xbd66, 0xe73a, 0x1, 0x0);
        gbc.writeMem(0x8a5d, { 0x95 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xf61e, gbc.sp());
        EXPECT(0x8a5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x8a5d));
        // 95 0360
        gbc.setState(0xeaa1, 0xfee3, 0xbf00, 0x6f1a, 0x8910, 0xd41, 0x0, 0x0);
        gbc.writeMem(0xeaa1, { 0x95 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xfee3, gbc.sp());
        EXPECT(0xeaa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xeaa1));
        // 95 0361
        gbc.setState(0x9157, 0xdc7c, 0xe450, 0xb604, 0x687d, 0x3c44, 0x1, 0x1);
        gbc.writeMem(0x9157, { 0x95 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xdc7c, gbc.sp());
        EXPECT(0x9158, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x9157));
        // 95 0362
        gbc.setState(0x2501, 0xf669, 0x7e60, 0xaf29, 0x4ab8, 0x4e6c, 0x0, 0x1);
        gbc.writeMem(0x2501, { 0x95 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xf669, gbc.sp());
        EXPECT(0x2502, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0363
        gbc.setState(0x42a6, 0xe63d, 0xb080, 0x7fce, 0x64cd, 0x11fc, 0x0, 0x0);
        gbc.writeMem(0x42a6, { 0x95 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xe63d, gbc.sp());
        EXPECT(0x42a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0364
        gbc.setState(0x7a77, 0xfbe9, 0xe6f0, 0x7970, 0x3fbd, 0xc925, 0x0, 0x0);
        gbc.writeMem(0x7a77, { 0x95 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xfbe9, gbc.sp());
        EXPECT(0x7a78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0365
        gbc.setState(0x5627, 0xdd42, 0xa0d0, 0xfcc8, 0x55bb, 0x3fd4, 0x1, 0x0);
        gbc.writeMem(0x5627, { 0x95 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xdd42, gbc.sp());
        EXPECT(0x5628, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0366
        gbc.setState(0x6dee, 0xc955, 0x8060, 0x6e12, 0x613e, 0xd321, 0x0, 0x1);
        gbc.writeMem(0x6dee, { 0x95 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xc955, gbc.sp());
        EXPECT(0x6def, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0367
        gbc.setState(0x6393, 0x552c, 0x9c30, 0xa1d7, 0xd472, 0xf823, 0x1, 0x0);
        gbc.writeMem(0x6393, { 0x95 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x552c, gbc.sp());
        EXPECT(0x6394, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0368
        gbc.setState(0x5095, 0xc723, 0x1a50, 0xc51d, 0x4106, 0x7871, 0x1, 0x0);
        gbc.writeMem(0x5095, { 0x95 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xc723, gbc.sp());
        EXPECT(0x5096, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0369
        gbc.setState(0xcc06, 0x462d, 0x2390, 0x2913, 0x43d5, 0x9738, 0x1, 0x0);
        gbc.writeMem(0xcc06, { 0x95 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x462d, gbc.sp());
        EXPECT(0xcc07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xcc06));
        // 95 036A
        gbc.setState(0x6379, 0xb707, 0x4e70, 0x728d, 0x98b2, 0xc5e4, 0x0, 0x0);
        gbc.writeMem(0x6379, { 0x95 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xb707, gbc.sp());
        EXPECT(0x637a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 036B
        gbc.setState(0x53e2, 0xeb, 0x2b20, 0xd20, 0x6ee9, 0xebf7, 0x0, 0x1);
        gbc.writeMem(0x53e2, { 0x95 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xeb, gbc.sp());
        EXPECT(0x53e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 036C
        gbc.setState(0x5a03, 0x8e03, 0xb480, 0xe4eb, 0xe91d, 0xdf7a, 0x1, 0x0);
        gbc.writeMem(0x5a03, { 0x95 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x8e03, gbc.sp());
        EXPECT(0x5a04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 036D
        gbc.setState(0x6b5e, 0x8a74, 0x97f0, 0x76c6, 0xb2, 0x9690, 0x1, 0x0);
        gbc.writeMem(0x6b5e, { 0x95 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x8a74, gbc.sp());
        EXPECT(0x6b5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 036E
        gbc.setState(0xb0fd, 0xaa33, 0xf5a0, 0x781b, 0xd746, 0xc216, 0x1, 0x1);
        gbc.writeMem(0xb0fd, { 0x95 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xaa33, gbc.sp());
        EXPECT(0xb0fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xb0fd));
        // 95 036F
        gbc.setState(0xe6f5, 0x56dd, 0x8fc0, 0x80ba, 0x2131, 0x5943, 0x1, 0x1);
        gbc.writeMem(0xe6f5, { 0x95 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x56dd, gbc.sp());
        EXPECT(0xe6f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xe6f5));
        // 95 0370
        gbc.setState(0x894d, 0xea28, 0x34b0, 0x285a, 0x5da, 0x7463, 0x1, 0x0);
        gbc.writeMem(0x894d, { 0x95 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xea28, gbc.sp());
        EXPECT(0x894e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x894d));
        // 95 0371
        gbc.setState(0x706c, 0xbecc, 0xd1d0, 0x94b7, 0xe834, 0x7339, 0x1, 0x0);
        gbc.writeMem(0x706c, { 0x95 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xbecc, gbc.sp());
        EXPECT(0x706d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0372
        gbc.setState(0x4538, 0x58a, 0x11e0, 0xaa42, 0x856d, 0x9449, 0x1, 0x1);
        gbc.writeMem(0x4538, { 0x95 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x58a, gbc.sp());
        EXPECT(0x4539, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0373
        gbc.setState(0x5cc4, 0x242c, 0xd790, 0x579c, 0xcdd, 0xaf1, 0x1, 0x0);
        gbc.writeMem(0x5cc4, { 0x95 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x242c, gbc.sp());
        EXPECT(0x5cc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0374
        gbc.setState(0x9ea1, 0x85ad, 0x2ab0, 0xb26, 0x41fe, 0xbfcb, 0x0, 0x0);
        gbc.writeMem(0x9ea1, { 0x95 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x85ad, gbc.sp());
        EXPECT(0x9ea2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x9ea1));
        // 95 0375
        gbc.setState(0x4c8f, 0x7212, 0x4ba0, 0xe321, 0x32d8, 0x9c30, 0x0, 0x0);
        gbc.writeMem(0x4c8f, { 0x95 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x7212, gbc.sp());
        EXPECT(0x4c90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0376
        gbc.setState(0x1bb8, 0x2adb, 0x1520, 0xfff4, 0xe196, 0xa6a1, 0x0, 0x0);
        gbc.writeMem(0x1bb8, { 0x95 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x2adb, gbc.sp());
        EXPECT(0x1bb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0377
        gbc.setState(0x515f, 0xc2cd, 0x3670, 0x2bdd, 0x789a, 0x26e9, 0x0, 0x1);
        gbc.writeMem(0x515f, { 0x95 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xc2cd, gbc.sp());
        EXPECT(0x5160, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0378
        gbc.setState(0xc474, 0xb997, 0x9600, 0xe113, 0x8a28, 0xd5c7, 0x0, 0x0);
        gbc.writeMem(0xc474, { 0x95 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xb997, gbc.sp());
        EXPECT(0xc475, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xc474));
        // 95 0379
        gbc.setState(0xc1e3, 0x59d6, 0x9530, 0xd9b3, 0x1e5d, 0xa432, 0x0, 0x1);
        gbc.writeMem(0xc1e3, { 0x95 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x59d6, gbc.sp());
        EXPECT(0xc1e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xc1e3));
        // 95 037A
        gbc.setState(0xdbb9, 0x2305, 0xc400, 0x6d93, 0x1cae, 0x341a, 0x0, 0x1);
        gbc.writeMem(0xdbb9, { 0x95 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x2305, gbc.sp());
        EXPECT(0xdbba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xdbb9));
        // 95 037B
        gbc.setState(0x75cf, 0xe3e7, 0x50a0, 0x7752, 0x48c5, 0x7cdc, 0x1, 0x0);
        gbc.writeMem(0x75cf, { 0x95 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xe3e7, gbc.sp());
        EXPECT(0x75d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 037D
        gbc.setState(0x4fca, 0x4d1d, 0x8010, 0x529e, 0xb7e6, 0x6ab5, 0x0, 0x1);
        gbc.writeMem(0x4fca, { 0x95 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x4d1d, gbc.sp());
        EXPECT(0x4fcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 037E
        gbc.setState(0x4fac, 0xba9f, 0x9df0, 0xb078, 0xb43, 0xd092, 0x1, 0x1);
        gbc.writeMem(0x4fac, { 0x95 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xba9f, gbc.sp());
        EXPECT(0x4fad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 037F
        gbc.setState(0x96a, 0x439f, 0xe670, 0xbb95, 0x25ae, 0x364f, 0x1, 0x0);
        gbc.writeMem(0x96a, { 0x95 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x439f, gbc.sp());
        EXPECT(0x96b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0380
        gbc.setState(0x70d, 0x6786, 0xb8a0, 0x3c74, 0x87d, 0xe22a, 0x1, 0x0);
        gbc.writeMem(0x70d, { 0x95 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x6786, gbc.sp());
        EXPECT(0x70e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0381
        gbc.setState(0x9c96, 0x3c17, 0x7d50, 0xb97a, 0xd83d, 0xfa80, 0x0, 0x0);
        gbc.writeMem(0x9c96, { 0x95 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x3c17, gbc.sp());
        EXPECT(0x9c97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x9c96));
        // 95 0382
        gbc.setState(0x9217, 0x70c2, 0x6410, 0x9094, 0x21cc, 0x929e, 0x1, 0x0);
        gbc.writeMem(0x9217, { 0x95 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x70c2, gbc.sp());
        EXPECT(0x9218, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x9217));
        // 95 0383
        gbc.setState(0xbe31, 0x3c3c, 0xcfc0, 0x544b, 0xb3a9, 0x2951, 0x0, 0x0);
        gbc.writeMem(0xbe31, { 0x95 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x3c3c, gbc.sp());
        EXPECT(0xbe32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xbe31));
        // 95 0384
        gbc.setState(0xed61, 0x406d, 0x75a0, 0x3ea0, 0xc28c, 0x8365, 0x1, 0x0);
        gbc.writeMem(0xed61, { 0x95 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x406d, gbc.sp());
        EXPECT(0xed62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xed61));
        // 95 0386
        gbc.setState(0xca3e, 0x567c, 0xf640, 0x7778, 0x8188, 0xd570, 0x1, 0x1);
        gbc.writeMem(0xca3e, { 0x95 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x567c, gbc.sp());
        EXPECT(0xca3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xca3e));
        // 95 0387
        gbc.setState(0x49d2, 0x95f, 0xc9c0, 0x4b5a, 0xf35e, 0xf5bd, 0x1, 0x1);
        gbc.writeMem(0x49d2, { 0x95 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x95f, gbc.sp());
        EXPECT(0x49d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0388
        gbc.setState(0x5cbf, 0xed65, 0x62a0, 0x84fc, 0x1c47, 0xe90, 0x0, 0x0);
        gbc.writeMem(0x5cbf, { 0x95 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xed65, gbc.sp());
        EXPECT(0x5cc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0389
        gbc.setState(0xb4cb, 0x7091, 0x7b70, 0x44ba, 0x23f2, 0x183, 0x0, 0x0);
        gbc.writeMem(0xb4cb, { 0x95 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x7091, gbc.sp());
        EXPECT(0xb4cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xb4cb));
        // 95 038A
        gbc.setState(0xa8f, 0xabad, 0x2960, 0xbd90, 0xbd74, 0x7b45, 0x0, 0x1);
        gbc.writeMem(0xa8f, { 0x95 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xabad, gbc.sp());
        EXPECT(0xa90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 038B
        gbc.setState(0x48fb, 0xfec3, 0xa7e0, 0x6654, 0xa263, 0xe405, 0x0, 0x0);
        gbc.writeMem(0x48fb, { 0x95 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xfec3, gbc.sp());
        EXPECT(0x48fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 038C
        gbc.setState(0x527e, 0x4747, 0x20a0, 0x9d3c, 0x5380, 0xe153, 0x0, 0x1);
        gbc.writeMem(0x527e, { 0x95 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x4747, gbc.sp());
        EXPECT(0x527f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 038D
        gbc.setState(0xc403, 0xf87d, 0x4340, 0xc348, 0x98c2, 0x1726, 0x1, 0x0);
        gbc.writeMem(0xc403, { 0x95 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf87d, gbc.sp());
        EXPECT(0xc404, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xc403));
        // 95 038E
        gbc.setState(0x6804, 0x63fa, 0x7940, 0x7abe, 0xaaae, 0x5c95, 0x1, 0x1);
        gbc.writeMem(0x6804, { 0x95 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x63fa, gbc.sp());
        EXPECT(0x6805, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 038F
        gbc.setState(0x9a3b, 0x130e, 0x6a30, 0xe806, 0xe761, 0x3f01, 0x1, 0x1);
        gbc.writeMem(0x9a3b, { 0x95 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x130e, gbc.sp());
        EXPECT(0x9a3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x9a3b));
        // 95 0390
        gbc.setState(0x5af9, 0x9e2c, 0x21a0, 0x303d, 0x5f2e, 0x28ae, 0x0, 0x1);
        gbc.writeMem(0x5af9, { 0x95 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x9e2c, gbc.sp());
        EXPECT(0x5afa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0392
        gbc.setState(0xae66, 0x7e71, 0x3140, 0xfaa7, 0x5731, 0x65b6, 0x0, 0x0);
        gbc.writeMem(0xae66, { 0x95 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x7e71, gbc.sp());
        EXPECT(0xae67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xae66));
        // 95 0393
        gbc.setState(0x1b00, 0x6d42, 0x9200, 0x1720, 0xa376, 0xf5fb, 0x0, 0x1);
        gbc.writeMem(0x1b00, { 0x95 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x6d42, gbc.sp());
        EXPECT(0x1b01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0394
        gbc.setState(0xc2b0, 0x23e9, 0x3dc0, 0x7a75, 0x2343, 0x2ea7, 0x0, 0x1);
        gbc.writeMem(0xc2b0, { 0x95 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x23e9, gbc.sp());
        EXPECT(0xc2b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xc2b0));
        // 95 0395
        gbc.setState(0x748b, 0x3b6c, 0x43a0, 0xe305, 0xf0cd, 0x9ebd, 0x0, 0x0);
        gbc.writeMem(0x748b, { 0x95 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x3b6c, gbc.sp());
        EXPECT(0x748c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 0396
        gbc.setState(0xa365, 0x7f8, 0x12d0, 0x91f1, 0x3777, 0xb3be, 0x1, 0x1);
        gbc.writeMem(0xa365, { 0x95 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x7f8, gbc.sp());
        EXPECT(0xa366, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xa365));
        // 95 0397
        gbc.setState(0x7409, 0x59b4, 0x90b0, 0xf7bf, 0xe50c, 0x4d1f, 0x0, 0x1);
        gbc.writeMem(0x7409, { 0x95 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x59b4, gbc.sp());
        EXPECT(0x740a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 0398
        gbc.setState(0xcd4a, 0x2ac8, 0xb9a0, 0xef7b, 0xa9e6, 0x522f, 0x0, 0x0);
        gbc.writeMem(0xcd4a, { 0x95 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x2ac8, gbc.sp());
        EXPECT(0xcd4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xcd4a));
        // 95 0399
        gbc.setState(0x7280, 0x3583, 0xa7a0, 0xd59a, 0x1f43, 0x1f82, 0x0, 0x0);
        gbc.writeMem(0x7280, { 0x95 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x3583, gbc.sp());
        EXPECT(0x7281, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 039A
        gbc.setState(0x21e, 0x8f85, 0x9360, 0xf6ec, 0xf309, 0x8424, 0x1, 0x0);
        gbc.writeMem(0x21e, { 0x95 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x8f85, gbc.sp());
        EXPECT(0x21f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 039B
        gbc.setState(0x8001, 0x521e, 0x67f0, 0xa1e4, 0x67e2, 0x96c6, 0x0, 0x1);
        gbc.writeMem(0x8001, { 0x95 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x521e, gbc.sp());
        EXPECT(0x8002, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x8001));
        // 95 039C
        gbc.setState(0x6b9d, 0x575a, 0x7710, 0x4533, 0xefac, 0x7353, 0x0, 0x0);
        gbc.writeMem(0x6b9d, { 0x95 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x575a, gbc.sp());
        EXPECT(0x6b9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 039D
        gbc.setState(0xab5c, 0xc200, 0xe90, 0x3e54, 0x5e53, 0x76f3, 0x1, 0x1);
        gbc.writeMem(0xab5c, { 0x95 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xc200, gbc.sp());
        EXPECT(0xab5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xab5c));
        // 95 039E
        gbc.setState(0x20a9, 0xc0bc, 0x89b0, 0x3c75, 0xd203, 0x8598, 0x0, 0x1);
        gbc.writeMem(0x20a9, { 0x95 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xc0bc, gbc.sp());
        EXPECT(0x20aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 039F
        gbc.setState(0x78e1, 0x5163, 0x1290, 0xcd98, 0x732b, 0x4046, 0x0, 0x0);
        gbc.writeMem(0x78e1, { 0x95 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x5163, gbc.sp());
        EXPECT(0x78e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 03A0
        gbc.setState(0xaf20, 0xfa0c, 0xbd20, 0x67f, 0x47b3, 0xee6c, 0x0, 0x1);
        gbc.writeMem(0xaf20, { 0x95 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xfa0c, gbc.sp());
        EXPECT(0xaf21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xaf20));
        // 95 03A1
        gbc.setState(0xebe, 0xb72b, 0x89c0, 0x319a, 0xd044, 0xda38, 0x1, 0x0);
        gbc.writeMem(0xebe, { 0x95 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xb72b, gbc.sp());
        EXPECT(0xebf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 03A2
        gbc.setState(0xdb72, 0x2927, 0xaea0, 0x31fd, 0xf893, 0x35db, 0x0, 0x1);
        gbc.writeMem(0xdb72, { 0x95 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x2927, gbc.sp());
        EXPECT(0xdb73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xdb72));
        // 95 03A3
        gbc.setState(0x1127, 0x74f, 0xcb0, 0xa88c, 0x266c, 0x808c, 0x0, 0x1);
        gbc.writeMem(0x1127, { 0x95 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x74f, gbc.sp());
        EXPECT(0x1128, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 03A4
        gbc.setState(0xbfdd, 0xac44, 0x4f70, 0x403e, 0xefda, 0x746, 0x0, 0x1);
        gbc.writeMem(0xbfdd, { 0x95 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xac44, gbc.sp());
        EXPECT(0xbfde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xbfdd));
        // 95 03A5
        gbc.setState(0xbb47, 0xa36, 0xc910, 0xd59b, 0x4ba7, 0x73ec, 0x0, 0x1);
        gbc.writeMem(0xbb47, { 0x95 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xa36, gbc.sp());
        EXPECT(0xbb48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xbb47));
        // 95 03A6
        gbc.setState(0xbad3, 0x9683, 0x43f0, 0xc709, 0x5599, 0xb7d0, 0x1, 0x1);
        gbc.writeMem(0xbad3, { 0x95 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x9683, gbc.sp());
        EXPECT(0xbad4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xbad3));
        // 95 03A7
        gbc.setState(0x2ebe, 0xb26b, 0xa5d0, 0xd61, 0x2932, 0xde2e, 0x0, 0x1);
        gbc.writeMem(0x2ebe, { 0x95 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xb26b, gbc.sp());
        EXPECT(0x2ebf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 03A8
        gbc.setState(0xd068, 0xa807, 0xafa0, 0xbe49, 0x19cd, 0x2e4a, 0x0, 0x0);
        gbc.writeMem(0xd068, { 0x95 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xa807, gbc.sp());
        EXPECT(0xd069, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xd068));
        // 95 03A9
        gbc.setState(0x6b40, 0x4d00, 0x57e0, 0xad60, 0x92dc, 0xfc0e, 0x0, 0x1);
        gbc.writeMem(0x6b40, { 0x95 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x4d00, gbc.sp());
        EXPECT(0x6b41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 03AA
        gbc.setState(0xa0, 0x232c, 0x8d70, 0xf183, 0xb753, 0x1721, 0x1, 0x1);
        gbc.writeMem(0xa0, { 0x95 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x232c, gbc.sp());
        EXPECT(0xa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 03AB
        gbc.setState(0x56ec, 0xe524, 0xee40, 0xe068, 0xe9ac, 0x9490, 0x1, 0x1);
        gbc.writeMem(0x56ec, { 0x95 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xe524, gbc.sp());
        EXPECT(0x56ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 03AC
        gbc.setState(0x6c6c, 0xcb3c, 0x7d30, 0xaab3, 0x28c5, 0xb875, 0x1, 0x1);
        gbc.writeMem(0x6c6c, { 0x95 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xcb3c, gbc.sp());
        EXPECT(0x6c6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 03AD
        gbc.setState(0x72e6, 0x61b9, 0x1680, 0x7ec8, 0x587d, 0xc82a, 0x1, 0x0);
        gbc.writeMem(0x72e6, { 0x95 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x61b9, gbc.sp());
        EXPECT(0x72e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 03AE
        gbc.setState(0x4799, 0x7cc, 0x90f0, 0x36a3, 0xb7db, 0xd14, 0x0, 0x1);
        gbc.writeMem(0x4799, { 0x95 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x7cc, gbc.sp());
        EXPECT(0x479a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 03AF
        gbc.setState(0x96a4, 0x1358, 0x8c50, 0x5c11, 0x172e, 0x3dd8, 0x0, 0x1);
        gbc.writeMem(0x96a4, { 0x95 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x1358, gbc.sp());
        EXPECT(0x96a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x96a4));
        // 95 03B0
        gbc.setState(0x6627, 0xe8ce, 0x2d00, 0x9474, 0x7f6e, 0x7059, 0x0, 0x0);
        gbc.writeMem(0x6627, { 0x95 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xe8ce, gbc.sp());
        EXPECT(0x6628, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 03B1
        gbc.setState(0xb095, 0x518c, 0xe6b0, 0x7353, 0x6f9d, 0xedee, 0x1, 0x0);
        gbc.writeMem(0xb095, { 0x95 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x518c, gbc.sp());
        EXPECT(0xb096, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xb095));
        // 95 03B3
        gbc.setState(0xdd78, 0x2a04, 0x2b30, 0xdc01, 0x8020, 0x4788, 0x1, 0x1);
        gbc.writeMem(0xdd78, { 0x95 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x2a04, gbc.sp());
        EXPECT(0xdd79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xdd78));
        // 95 03B4
        gbc.setState(0x13d4, 0x5468, 0x4bf0, 0x86c7, 0xcc49, 0x5cf, 0x0, 0x1);
        gbc.writeMem(0x13d4, { 0x95 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x5468, gbc.sp());
        EXPECT(0x13d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 03B5
        gbc.setState(0xa9b, 0x232a, 0xfb0, 0x1673, 0xdcdd, 0xe3ac, 0x1, 0x0);
        gbc.writeMem(0xa9b, { 0x95 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x232a, gbc.sp());
        EXPECT(0xa9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 03B6
        gbc.setState(0x6873, 0x609, 0xedf0, 0xaa24, 0x4b2, 0x402a, 0x0, 0x0);
        gbc.writeMem(0x6873, { 0x95 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x609, gbc.sp());
        EXPECT(0x6874, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 03B7
        gbc.setState(0xd763, 0x26a6, 0xafd0, 0x6fec, 0x743b, 0x2c4b, 0x1, 0x0);
        gbc.writeMem(0xd763, { 0x95 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x26a6, gbc.sp());
        EXPECT(0xd764, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xd763));
        // 95 03B8
        gbc.setState(0x929f, 0xea25, 0xce20, 0xd530, 0x53a9, 0x11db, 0x0, 0x0);
        gbc.writeMem(0x929f, { 0x95 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xea25, gbc.sp());
        EXPECT(0x92a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x929f));
        // 95 03B9
        gbc.setState(0xab7d, 0xcc98, 0x8e20, 0x2697, 0x6c4b, 0x5c5e, 0x1, 0x1);
        gbc.writeMem(0xab7d, { 0x95 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xcc98, gbc.sp());
        EXPECT(0xab7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xab7d));
        // 95 03BA
        gbc.setState(0x20cb, 0x2bcf, 0x20, 0x6fac, 0xfc47, 0xb9d2, 0x0, 0x1);
        gbc.writeMem(0x20cb, { 0x95 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x2bcf, gbc.sp());
        EXPECT(0x20cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 03BB
        gbc.setState(0x6850, 0x6a8, 0x7f30, 0x1e01, 0xefc1, 0xcf0a, 0x0, 0x0);
        gbc.writeMem(0x6850, { 0x95 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x6a8, gbc.sp());
        EXPECT(0x6851, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 03BC
        gbc.setState(0x3c5e, 0xc968, 0x6e70, 0x3089, 0x7ab4, 0xe9e0, 0x0, 0x0);
        gbc.writeMem(0x3c5e, { 0x95 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xc968, gbc.sp());
        EXPECT(0x3c5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 03BD
        gbc.setState(0x450b, 0xbf0c, 0x4f60, 0x46c, 0x2010, 0xde2, 0x1, 0x1);
        gbc.writeMem(0x450b, { 0x95 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xbf0c, gbc.sp());
        EXPECT(0x450c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 03BE
        gbc.setState(0x5afd, 0xccf1, 0x6bb0, 0xba4b, 0x5819, 0x47ed, 0x0, 0x1);
        gbc.writeMem(0x5afd, { 0x95 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xccf1, gbc.sp());
        EXPECT(0x5afe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 03BF
        gbc.setState(0x86bd, 0xca75, 0x4110, 0x7b32, 0xa023, 0x38be, 0x1, 0x0);
        gbc.writeMem(0x86bd, { 0x95 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xca75, gbc.sp());
        EXPECT(0x86be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x86bd));
        // 95 03C0
        gbc.setState(0xefba, 0xea9e, 0xc000, 0xcaf, 0x6a64, 0xf47, 0x0, 0x1);
        gbc.writeMem(0xefba, { 0x95 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xea9e, gbc.sp());
        EXPECT(0xefbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xefba));
        // 95 03C1
        gbc.setState(0x43c7, 0x2064, 0x68b0, 0x33d1, 0x262, 0x355f, 0x0, 0x1);
        gbc.writeMem(0x43c7, { 0x95 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x2064, gbc.sp());
        EXPECT(0x43c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 03C2
        gbc.setState(0xdc64, 0x6a53, 0x6bc0, 0x669a, 0xfeea, 0x37ff, 0x1, 0x0);
        gbc.writeMem(0xdc64, { 0x95 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x6a53, gbc.sp());
        EXPECT(0xdc65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xdc64));
        // 95 03C3
        gbc.setState(0x9ae7, 0xacb9, 0xc820, 0xfd12, 0xa49f, 0xf64e, 0x0, 0x1);
        gbc.writeMem(0x9ae7, { 0x95 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xacb9, gbc.sp());
        EXPECT(0x9ae8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x9ae7));
        // 95 03C4
        gbc.setState(0xcf5a, 0x2159, 0x3f60, 0x8014, 0x9121, 0x888, 0x0, 0x0);
        gbc.writeMem(0xcf5a, { 0x95 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x2159, gbc.sp());
        EXPECT(0xcf5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xcf5a));
        // 95 03C5
        gbc.setState(0x17cb, 0x3e82, 0x610, 0x237e, 0x4365, 0x3961, 0x0, 0x0);
        gbc.writeMem(0x17cb, { 0x95 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x3e82, gbc.sp());
        EXPECT(0x17cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 03C7
        gbc.setState(0xda7c, 0x99ec, 0x1130, 0xd737, 0xa951, 0x8f73, 0x0, 0x1);
        gbc.writeMem(0xda7c, { 0x95 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x99ec, gbc.sp());
        EXPECT(0xda7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xda7c));
        // 95 03C8
        gbc.setState(0xee41, 0xb773, 0x8d30, 0x6fa4, 0x7c96, 0xa445, 0x0, 0x1);
        gbc.writeMem(0xee41, { 0x95 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xb773, gbc.sp());
        EXPECT(0xee42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xee41));
        // 95 03C9
        gbc.setState(0xca8e, 0x7e11, 0x1660, 0x5c0d, 0x4afe, 0x79a4, 0x1, 0x1);
        gbc.writeMem(0xca8e, { 0x95 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x7e11, gbc.sp());
        EXPECT(0xca8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xca8e));
        // 95 03CA
        gbc.setState(0x2d0, 0xd49, 0x4370, 0xba26, 0xf43c, 0x36d6, 0x1, 0x1);
        gbc.writeMem(0x2d0, { 0x95 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xd49, gbc.sp());
        EXPECT(0x2d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 03CB
        gbc.setState(0x9ea7, 0x970c, 0x5380, 0x9740, 0x5a20, 0x960c, 0x0, 0x1);
        gbc.writeMem(0x9ea7, { 0x95 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x970c, gbc.sp());
        EXPECT(0x9ea8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x9ea7));
        // 95 03CC
        gbc.setState(0xce05, 0xc6cd, 0x47e0, 0xce8a, 0xc4e1, 0xd7cd, 0x1, 0x1);
        gbc.writeMem(0xce05, { 0x95 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xc6cd, gbc.sp());
        EXPECT(0xce06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xce05));
        // 95 03CD
        gbc.setState(0x9a8d, 0x6cac, 0x9cf0, 0x3fc0, 0x5aa9, 0x62b0, 0x1, 0x0);
        gbc.writeMem(0x9a8d, { 0x95 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x6cac, gbc.sp());
        EXPECT(0x9a8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x9a8d));
        // 95 03CE
        gbc.setState(0x837, 0xa271, 0x1d00, 0xa7ee, 0xa5a9, 0x1226, 0x1, 0x1);
        gbc.writeMem(0x837, { 0x95 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xa271, gbc.sp());
        EXPECT(0x838, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 03CF
        gbc.setState(0x3f57, 0x28af, 0xc450, 0x9e5d, 0x38d2, 0xff78, 0x1, 0x0);
        gbc.writeMem(0x3f57, { 0x95 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x28af, gbc.sp());
        EXPECT(0x3f58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 03D0
        gbc.setState(0x8c89, 0x233c, 0x9c0, 0x9b8e, 0x518a, 0x9d9b, 0x0, 0x1);
        gbc.writeMem(0x8c89, { 0x95 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x233c, gbc.sp());
        EXPECT(0x8c8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x8c89));
        // 95 03D1
        gbc.setState(0x547d, 0x9906, 0x3230, 0x3f14, 0x9f63, 0xa331, 0x1, 0x0);
        gbc.writeMem(0x547d, { 0x95 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x9906, gbc.sp());
        EXPECT(0x547e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 03D2
        gbc.setState(0xdf9e, 0xcccc, 0x3710, 0x8c4a, 0x8739, 0x1a4e, 0x1, 0x1);
        gbc.writeMem(0xdf9e, { 0x95 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xcccc, gbc.sp());
        EXPECT(0xdf9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xdf9e));
        // 95 03D3
        gbc.setState(0x5d36, 0xe4eb, 0xf60, 0x7715, 0x7524, 0xbc2a, 0x1, 0x1);
        gbc.writeMem(0x5d36, { 0x95 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xe4eb, gbc.sp());
        EXPECT(0x5d37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 03D4
        gbc.setState(0x21c, 0x8d24, 0x6cc0, 0x8e07, 0x6f05, 0x4406, 0x1, 0x0);
        gbc.writeMem(0x21c, { 0x95 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x8d24, gbc.sp());
        EXPECT(0x21d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 03D6
        gbc.setState(0xa87a, 0xc1b8, 0xd0d0, 0xba9d, 0xbfcd, 0xb68f, 0x1, 0x1);
        gbc.writeMem(0xa87a, { 0x95 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xc1b8, gbc.sp());
        EXPECT(0xa87b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xa87a));
        // 95 03D7
        gbc.setState(0x2acd, 0xcef0, 0xa3f0, 0x2c08, 0xd38, 0x22a4, 0x0, 0x1);
        gbc.writeMem(0x2acd, { 0x95 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xcef0, gbc.sp());
        EXPECT(0x2ace, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 03D8
        gbc.setState(0x2f5, 0x2bd1, 0xfb60, 0xf966, 0x685e, 0x57e9, 0x0, 0x0);
        gbc.writeMem(0x2f5, { 0x95 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x2bd1, gbc.sp());
        EXPECT(0x2f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 03D9
        gbc.setState(0x288e, 0x9099, 0x1430, 0xba13, 0xc1ad, 0xe3a3, 0x1, 0x0);
        gbc.writeMem(0x288e, { 0x95 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x9099, gbc.sp());
        EXPECT(0x288f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 03DA
        gbc.setState(0x667e, 0x1f39, 0x94e0, 0xf233, 0xa226, 0x3f70, 0x0, 0x1);
        gbc.writeMem(0x667e, { 0x95 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x1f39, gbc.sp());
        EXPECT(0x667f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 03DB
        gbc.setState(0xc4a3, 0x5ec3, 0x1090, 0x515f, 0x3664, 0x788e, 0x1, 0x0);
        gbc.writeMem(0xc4a3, { 0x95 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x5ec3, gbc.sp());
        EXPECT(0xc4a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xc4a3));
        // 95 03DC
        gbc.setState(0xd35, 0x63e5, 0x3630, 0x21c0, 0xf821, 0xca5e, 0x0, 0x0);
        gbc.writeMem(0xd35, { 0x95 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x63e5, gbc.sp());
        EXPECT(0xd36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 03DD
        gbc.setState(0x9a5d, 0xc30a, 0xd7f0, 0x878d, 0xb2c1, 0xae48, 0x0, 0x1);
        gbc.writeMem(0x9a5d, { 0x95 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xc30a, gbc.sp());
        EXPECT(0x9a5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x9a5d));
        // 95 03DE
        gbc.setState(0x7740, 0x7382, 0xb480, 0x7e87, 0xf341, 0x3c63, 0x0, 0x1);
        gbc.writeMem(0x7740, { 0x95 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x7382, gbc.sp());
        EXPECT(0x7741, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 03DF
        gbc.setState(0x49f4, 0x2950, 0xe8f0, 0x11f9, 0xddae, 0xcf36, 0x0, 0x1);
        gbc.writeMem(0x49f4, { 0x95 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x2950, gbc.sp());
        EXPECT(0x49f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 03E0
        gbc.setState(0xdc2d, 0xd36a, 0x4490, 0xdb2d, 0xbe3d, 0x6092, 0x0, 0x0);
        gbc.writeMem(0xdc2d, { 0x95 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xd36a, gbc.sp());
        EXPECT(0xdc2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xdc2d));
        // 95 03E1
        gbc.setState(0x34e2, 0xba0d, 0xb0a0, 0x441d, 0xf2f4, 0x78a, 0x1, 0x0);
        gbc.writeMem(0x34e2, { 0x95 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xba0d, gbc.sp());
        EXPECT(0x34e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 03E2
        gbc.setState(0x365e, 0x571b, 0xe580, 0x6127, 0x7156, 0xff5e, 0x0, 0x0);
        gbc.writeMem(0x365e, { 0x95 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x571b, gbc.sp());
        EXPECT(0x365f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 95 03E3
        gbc.setState(0xaa9d, 0xf85a, 0xeff0, 0xaaf6, 0x1554, 0x4018, 0x0, 0x0);
        gbc.writeMem(0xaa9d, { 0x95 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xf85a, gbc.sp());
        EXPECT(0xaa9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xaa9d));
        // 95 03E4
        gbc.setState(0x59e3, 0x5fea, 0x2030, 0xc592, 0x35c0, 0xa45c, 0x0, 0x1);
        gbc.writeMem(0x59e3, { 0x95 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x5fea, gbc.sp());
        EXPECT(0x59e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 03E5
        gbc.setState(0xdf30, 0xb1e5, 0x6590, 0xeffa, 0x30b0, 0x48ca, 0x1, 0x1);
        gbc.writeMem(0xdf30, { 0x95 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xb1e5, gbc.sp());
        EXPECT(0xdf31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xdf30));
        // 95 03E6
        gbc.setState(0x25f6, 0x6949, 0x7970, 0x4c, 0xf126, 0x9ee7, 0x0, 0x0);
        gbc.writeMem(0x25f6, { 0x95 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x6949, gbc.sp());
        EXPECT(0x25f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 95 03E7
        gbc.setState(0xe3fe, 0x3596, 0x4010, 0xe23c, 0xc3b3, 0xd2f8, 0x0, 0x0);
        gbc.writeMem(0xe3fe, { 0x95 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x3596, gbc.sp());
        EXPECT(0xe3ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xe3fe));
    }
