    TEST(gbcemu, opcode_2f) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 2F 0000
        gbc.setState(0x6611, 0x5929, 0xa110, 0x1ead, 0x1093, 0xeea5, 0x0, 0x0);
        gbc.writeMem(0x6611, { 0x2f });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x5929, gbc.sp());
        EXPECT(0x6612, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0002
        gbc.setState(0x2a0b, 0xb7d3, 0x910, 0x694d, 0xfdef, 0xdb9a, 0x1, 0x1);
        gbc.writeMem(0x2a0b, { 0x2f });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xb7d3, gbc.sp());
        EXPECT(0x2a0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0003
        gbc.setState(0x7b95, 0x30ed, 0x5f10, 0xf6e4, 0xdec5, 0xc057, 0x0, 0x0);
        gbc.writeMem(0x7b95, { 0x2f });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x30ed, gbc.sp());
        EXPECT(0x7b96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0004
        gbc.setState(0x9458, 0xe265, 0xb9b0, 0x6a, 0xec5, 0xa005, 0x0, 0x1);
        gbc.writeMem(0x9458, { 0x2f });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xe265, gbc.sp());
        EXPECT(0x9459, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x9458));
        // 2F 0005
        gbc.setState(0xa705, 0x6b03, 0xa590, 0xcad3, 0xcc3, 0xed45, 0x0, 0x1);
        gbc.writeMem(0xa705, { 0x2f });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x6b03, gbc.sp());
        EXPECT(0xa706, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xa705));
        // 2F 0006
        gbc.setState(0x20f8, 0x5bc8, 0xd4e0, 0x8958, 0x9660, 0xb31b, 0x1, 0x1);
        gbc.writeMem(0x20f8, { 0x2f });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x5bc8, gbc.sp());
        EXPECT(0x20f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0007
        gbc.setState(0xd71f, 0xc02a, 0x4210, 0xffd1, 0xd880, 0xe92c, 0x0, 0x1);
        gbc.writeMem(0xd71f, { 0x2f });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xc02a, gbc.sp());
        EXPECT(0xd720, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xd71f));
        // 2F 0008
        gbc.setState(0x256a, 0x5615, 0xde40, 0xae87, 0x56f6, 0x8f16, 0x1, 0x1);
        gbc.writeMem(0x256a, { 0x2f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x5615, gbc.sp());
        EXPECT(0x256b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0009
        gbc.setState(0x208a, 0xdc3a, 0x4110, 0x637e, 0xa97, 0x1470, 0x0, 0x1);
        gbc.writeMem(0x208a, { 0x2f });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xdc3a, gbc.sp());
        EXPECT(0x208b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 000A
        gbc.setState(0x81b0, 0xc8f2, 0x1aa0, 0x46f9, 0x4b97, 0x71b8, 0x1, 0x1);
        gbc.writeMem(0x81b0, { 0x2f });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xc8f2, gbc.sp());
        EXPECT(0x81b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x81b0));
        // 2F 000B
        gbc.setState(0xce7f, 0xf77d, 0x8490, 0x6519, 0x9f1a, 0xf83e, 0x1, 0x1);
        gbc.writeMem(0xce7f, { 0x2f });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xf77d, gbc.sp());
        EXPECT(0xce80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xce7f));
        // 2F 000C
        gbc.setState(0xc323, 0xbb82, 0xddb0, 0x6921, 0x2679, 0xb15b, 0x0, 0x1);
        gbc.writeMem(0xc323, { 0x2f });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xbb82, gbc.sp());
        EXPECT(0xc324, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xc323));
        // 2F 000E
        gbc.setState(0x6c11, 0x5604, 0x1f70, 0xf59d, 0x604b, 0x3fd2, 0x0, 0x1);
        gbc.writeMem(0x6c11, { 0x2f });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x5604, gbc.sp());
        EXPECT(0x6c12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 000F
        gbc.setState(0xad57, 0xf47d, 0x5c10, 0x4cd2, 0x9ef9, 0xfa34, 0x1, 0x1);
        gbc.writeMem(0xad57, { 0x2f });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xf47d, gbc.sp());
        EXPECT(0xad58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xad57));
        // 2F 0010
        gbc.setState(0x3486, 0xae8e, 0xdb00, 0x988d, 0xa9b9, 0xa78d, 0x1, 0x0);
        gbc.writeMem(0x3486, { 0x2f });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xae8e, gbc.sp());
        EXPECT(0x3487, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0011
        gbc.setState(0xc466, 0x356e, 0xf370, 0x740c, 0xd774, 0x56b4, 0x0, 0x1);
        gbc.writeMem(0xc466, { 0x2f });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x356e, gbc.sp());
        EXPECT(0xc467, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xc466));
        // 2F 0012
        gbc.setState(0x2d9a, 0x1552, 0x7100, 0x7c83, 0x5fe5, 0xeed5, 0x0, 0x0);
        gbc.writeMem(0x2d9a, { 0x2f });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x1552, gbc.sp());
        EXPECT(0x2d9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0013
        gbc.setState(0xd78d, 0x259e, 0x9c10, 0x821e, 0x94ee, 0x9b2d, 0x1, 0x0);
        gbc.writeMem(0xd78d, { 0x2f });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x259e, gbc.sp());
        EXPECT(0xd78e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xd78d));
        // 2F 0014
        gbc.setState(0x8c76, 0x7e20, 0xa600, 0xc29a, 0xcf61, 0xfd08, 0x0, 0x0);
        gbc.writeMem(0x8c76, { 0x2f });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x7e20, gbc.sp());
        EXPECT(0x8c77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8c76));
        // 2F 0015
        gbc.setState(0x804a, 0xb94e, 0x1ef0, 0xe511, 0x9974, 0x67, 0x1, 0x1);
        gbc.writeMem(0x804a, { 0x2f });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xb94e, gbc.sp());
        EXPECT(0x804b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x804a));
        // 2F 0016
        gbc.setState(0x5222, 0xcdc8, 0x5900, 0x392e, 0x1c44, 0x628c, 0x1, 0x0);
        gbc.writeMem(0x5222, { 0x2f });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xcdc8, gbc.sp());
        EXPECT(0x5223, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0017
        gbc.setState(0x6943, 0xf70e, 0xabb0, 0xfe81, 0x99af, 0x9d48, 0x1, 0x1);
        gbc.writeMem(0x6943, { 0x2f });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xf70e, gbc.sp());
        EXPECT(0x6944, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0019
        gbc.setState(0x5df7, 0x408b, 0x6cf0, 0xd3c8, 0x5fbb, 0xa1dc, 0x1, 0x1);
        gbc.writeMem(0x5df7, { 0x2f });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x408b, gbc.sp());
        EXPECT(0x5df8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 001A
        gbc.setState(0xa41c, 0x2373, 0x4cc0, 0x5d98, 0x49c, 0xd95c, 0x0, 0x0);
        gbc.writeMem(0xa41c, { 0x2f });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x2373, gbc.sp());
        EXPECT(0xa41d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xa41c));
        // 2F 001B
        gbc.setState(0xdb85, 0x577c, 0xf770, 0xa5fa, 0xe719, 0xe5ac, 0x1, 0x0);
        gbc.writeMem(0xdb85, { 0x2f });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x577c, gbc.sp());
        EXPECT(0xdb86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xdb85));
        // 2F 001C
        gbc.setState(0x5c78, 0x3e19, 0xecc0, 0x3046, 0x784, 0x8c44, 0x0, 0x0);
        gbc.writeMem(0x5c78, { 0x2f });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x3e19, gbc.sp());
        EXPECT(0x5c79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 001D
        gbc.setState(0xe739, 0x8880, 0x29c0, 0x1787, 0xdfa3, 0xc3d4, 0x1, 0x1);
        gbc.writeMem(0xe739, { 0x2f });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x8880, gbc.sp());
        EXPECT(0xe73a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xe739));
        // 2F 001E
        gbc.setState(0xa73e, 0xe2cb, 0xee60, 0x6352, 0x1d6a, 0x225c, 0x0, 0x0);
        gbc.writeMem(0xa73e, { 0x2f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xe2cb, gbc.sp());
        EXPECT(0xa73f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xa73e));
        // 2F 001F
        gbc.setState(0xbbb3, 0xafd4, 0x75f0, 0x63e9, 0x172b, 0x612b, 0x0, 0x0);
        gbc.writeMem(0xbbb3, { 0x2f });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xafd4, gbc.sp());
        EXPECT(0xbbb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xbbb3));
        // 2F 0020
        gbc.setState(0x5ed4, 0x67f6, 0xc9c0, 0xb852, 0x55ec, 0x9c87, 0x1, 0x0);
        gbc.writeMem(0x5ed4, { 0x2f });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x67f6, gbc.sp());
        EXPECT(0x5ed5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0021
        gbc.setState(0xef14, 0x50b7, 0x5a70, 0x4df8, 0xd89c, 0xb456, 0x1, 0x1);
        gbc.writeMem(0xef14, { 0x2f });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x50b7, gbc.sp());
        EXPECT(0xef15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xef14));
        // 2F 0022
        gbc.setState(0xa97e, 0x1e82, 0x13d0, 0xd049, 0x7188, 0x6b9c, 0x1, 0x1);
        gbc.writeMem(0xa97e, { 0x2f });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x1e82, gbc.sp());
        EXPECT(0xa97f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xa97e));
        // 2F 0023
        gbc.setState(0xbcb6, 0x60e6, 0x8ab0, 0x5399, 0x3bd1, 0xabc7, 0x0, 0x1);
        gbc.writeMem(0xbcb6, { 0x2f });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x60e6, gbc.sp());
        EXPECT(0xbcb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xbcb6));
        // 2F 0024
        gbc.setState(0x4a23, 0xbf14, 0xfdd0, 0x6950, 0x86a, 0x64ec, 0x0, 0x1);
        gbc.writeMem(0x4a23, { 0x2f });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xbf14, gbc.sp());
        EXPECT(0x4a24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0025
        gbc.setState(0xaa90, 0x69e8, 0x6d30, 0x99e1, 0xfe48, 0x5767, 0x1, 0x1);
        gbc.writeMem(0xaa90, { 0x2f });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x69e8, gbc.sp());
        EXPECT(0xaa91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xaa90));
        // 2F 0026
        gbc.setState(0x8d44, 0x1d31, 0x6a10, 0x6140, 0xb7d0, 0x5c28, 0x0, 0x1);
        gbc.writeMem(0x8d44, { 0x2f });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x1d31, gbc.sp());
        EXPECT(0x8d45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8d44));
        // 2F 0027
        gbc.setState(0x4228, 0x631, 0x67a0, 0x6b32, 0x8939, 0x4355, 0x0, 0x0);
        gbc.writeMem(0x4228, { 0x2f });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x631, gbc.sp());
        EXPECT(0x4229, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0028
        gbc.setState(0xa20b, 0xb529, 0xb3b0, 0x83f7, 0x1c56, 0xe7e5, 0x0, 0x0);
        gbc.writeMem(0xa20b, { 0x2f });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xb529, gbc.sp());
        EXPECT(0xa20c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xa20b));
        // 2F 002A
        gbc.setState(0x8afa, 0xf71e, 0x5380, 0xbab1, 0xcf77, 0x15eb, 0x1, 0x0);
        gbc.writeMem(0x8afa, { 0x2f });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xf71e, gbc.sp());
        EXPECT(0x8afb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8afa));
        // 2F 002B
        gbc.setState(0xd5cd, 0xc33f, 0xb950, 0xf15f, 0x3980, 0xf4fd, 0x1, 0x1);
        gbc.writeMem(0xd5cd, { 0x2f });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xc33f, gbc.sp());
        EXPECT(0xd5ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xd5cd));
        // 2F 002C
        gbc.setState(0x8f2c, 0x19b1, 0x4e50, 0xbd7f, 0x4a62, 0x2273, 0x0, 0x0);
        gbc.writeMem(0x8f2c, { 0x2f });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x19b1, gbc.sp());
        EXPECT(0x8f2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8f2c));
        // 2F 002D
        gbc.setState(0x276d, 0x445f, 0x2f40, 0xb09a, 0xf1bf, 0x2074, 0x0, 0x0);
        gbc.writeMem(0x276d, { 0x2f });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x445f, gbc.sp());
        EXPECT(0x276e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 002E
        gbc.setState(0x74b, 0x698c, 0x18a0, 0xc4eb, 0xdc05, 0x662, 0x1, 0x1);
        gbc.writeMem(0x74b, { 0x2f });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x698c, gbc.sp());
        EXPECT(0x74c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 002F
        gbc.setState(0x9d85, 0x46a2, 0xbbe0, 0xbe42, 0x754b, 0xb9d5, 0x1, 0x1);
        gbc.writeMem(0x9d85, { 0x2f });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x46a2, gbc.sp());
        EXPECT(0x9d86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x9d85));
        // 2F 0030
        gbc.setState(0xc7a5, 0xb6c2, 0xc670, 0x7b8f, 0xbc78, 0x20c9, 0x0, 0x1);
        gbc.writeMem(0xc7a5, { 0x2f });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xb6c2, gbc.sp());
        EXPECT(0xc7a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xc7a5));
        // 2F 0031
        gbc.setState(0x1a7e, 0x69b7, 0xe370, 0xbb1c, 0x4fc3, 0xfbb9, 0x0, 0x1);
        gbc.writeMem(0x1a7e, { 0x2f });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x69b7, gbc.sp());
        EXPECT(0x1a7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0032
        gbc.setState(0xe120, 0xf262, 0xa410, 0xa9df, 0xf755, 0x18b1, 0x1, 0x1);
        gbc.writeMem(0xe120, { 0x2f });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xf262, gbc.sp());
        EXPECT(0xe121, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xe120));
        // 2F 0033
        gbc.setState(0xa63, 0x5923, 0xcd60, 0x1fc3, 0x32e4, 0xacd8, 0x1, 0x1);
        gbc.writeMem(0xa63, { 0x2f });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5923, gbc.sp());
        EXPECT(0xa64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0034
        gbc.setState(0xe595, 0x18d, 0x8ba0, 0x419a, 0xfcf9, 0x708a, 0x0, 0x1);
        gbc.writeMem(0xe595, { 0x2f });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x18d, gbc.sp());
        EXPECT(0xe596, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xe595));
        // 2F 0036
        gbc.setState(0x41f4, 0x7072, 0xca90, 0x8332, 0xda2f, 0xab43, 0x0, 0x1);
        gbc.writeMem(0x41f4, { 0x2f });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x7072, gbc.sp());
        EXPECT(0x41f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0037
        gbc.setState(0x4a1f, 0x32ee, 0x7080, 0x438a, 0x198c, 0xd5ad, 0x1, 0x0);
        gbc.writeMem(0x4a1f, { 0x2f });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x32ee, gbc.sp());
        EXPECT(0x4a20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0038
        gbc.setState(0xbb6a, 0xde4d, 0xddd0, 0xeb20, 0xc998, 0x4cf4, 0x0, 0x0);
        gbc.writeMem(0xbb6a, { 0x2f });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xde4d, gbc.sp());
        EXPECT(0xbb6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xbb6a));
        // 2F 0039
        gbc.setState(0x2913, 0x728f, 0x57a0, 0xc870, 0xf41e, 0xd825, 0x0, 0x0);
        gbc.writeMem(0x2913, { 0x2f });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x728f, gbc.sp());
        EXPECT(0x2914, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 003A
        gbc.setState(0xa1a8, 0xcab7, 0xcea0, 0x4797, 0x3a2f, 0x5483, 0x1, 0x0);
        gbc.writeMem(0xa1a8, { 0x2f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xcab7, gbc.sp());
        EXPECT(0xa1a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xa1a8));
        // 2F 003B
        gbc.setState(0x7d9e, 0xc8a8, 0x1e70, 0x62e5, 0xea78, 0xfa71, 0x0, 0x1);
        gbc.writeMem(0x7d9e, { 0x2f });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xc8a8, gbc.sp());
        EXPECT(0x7d9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 003C
        gbc.setState(0x7143, 0xa5f2, 0x3cd0, 0x3695, 0x30b6, 0x1565, 0x0, 0x1);
        gbc.writeMem(0x7143, { 0x2f });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xa5f2, gbc.sp());
        EXPECT(0x7144, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 003D
        gbc.setState(0xd799, 0x63f4, 0x20f0, 0xe927, 0x7546, 0x40cd, 0x0, 0x0);
        gbc.writeMem(0xd799, { 0x2f });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x63f4, gbc.sp());
        EXPECT(0xd79a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xd799));
        // 2F 003E
        gbc.setState(0xaa29, 0xe481, 0x2e70, 0x6534, 0xe571, 0xfd6b, 0x1, 0x0);
        gbc.writeMem(0xaa29, { 0x2f });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xe481, gbc.sp());
        EXPECT(0xaa2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xaa29));
        // 2F 003F
        gbc.setState(0x3a96, 0xeaae, 0x9100, 0x812a, 0xeb14, 0xed60, 0x0, 0x0);
        gbc.writeMem(0x3a96, { 0x2f });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xeaae, gbc.sp());
        EXPECT(0x3a97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0040
        gbc.setState(0x3101, 0xe6c6, 0x2c50, 0x497a, 0x64c4, 0x96dc, 0x0, 0x1);
        gbc.writeMem(0x3101, { 0x2f });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xe6c6, gbc.sp());
        EXPECT(0x3102, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0041
        gbc.setState(0x294c, 0x3591, 0xa360, 0x2b2c, 0x845a, 0xa3fc, 0x1, 0x0);
        gbc.writeMem(0x294c, { 0x2f });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x3591, gbc.sp());
        EXPECT(0x294d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0042
        gbc.setState(0x7233, 0xb5df, 0x3000, 0x5247, 0x53da, 0x2ede, 0x1, 0x1);
        gbc.writeMem(0x7233, { 0x2f });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xb5df, gbc.sp());
        EXPECT(0x7234, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0044
        gbc.setState(0xd352, 0x5906, 0xb1f0, 0xaae9, 0xdc49, 0xddae, 0x0, 0x1);
        gbc.writeMem(0xd352, { 0x2f });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x5906, gbc.sp());
        EXPECT(0xd353, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xd352));
        // 2F 0045
        gbc.setState(0xb267, 0x6f87, 0x1b00, 0xd3f7, 0xccbb, 0xd877, 0x0, 0x0);
        gbc.writeMem(0xb267, { 0x2f });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x6f87, gbc.sp());
        EXPECT(0xb268, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xb267));
        // 2F 0046
        gbc.setState(0x531d, 0x48f0, 0x45b0, 0x3aa6, 0x362e, 0x611d, 0x1, 0x1);
        gbc.writeMem(0x531d, { 0x2f });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x48f0, gbc.sp());
        EXPECT(0x531e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0047
        gbc.setState(0xad2, 0x77b3, 0x4eb0, 0x3c4d, 0xba5d, 0x41ee, 0x1, 0x0);
        gbc.writeMem(0xad2, { 0x2f });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x77b3, gbc.sp());
        EXPECT(0xad3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0048
        gbc.setState(0x3f1, 0x5a4a, 0x1e60, 0xd2cf, 0xd4a3, 0xcc45, 0x0, 0x0);
        gbc.writeMem(0x3f1, { 0x2f });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x5a4a, gbc.sp());
        EXPECT(0x3f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0049
        gbc.setState(0x8441, 0xa76c, 0xc560, 0x666, 0x1c2d, 0x1a62, 0x0, 0x0);
        gbc.writeMem(0x8441, { 0x2f });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xa76c, gbc.sp());
        EXPECT(0x8442, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8441));
        // 2F 004B
        gbc.setState(0x86fd, 0x1df0, 0x4530, 0x6c64, 0x4ee2, 0xe56e, 0x0, 0x0);
        gbc.writeMem(0x86fd, { 0x2f });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x1df0, gbc.sp());
        EXPECT(0x86fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x86fd));
        // 2F 004C
        gbc.setState(0x1825, 0x8715, 0x47d0, 0x864a, 0x7511, 0xcc88, 0x1, 0x1);
        gbc.writeMem(0x1825, { 0x2f });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x8715, gbc.sp());
        EXPECT(0x1826, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 004D
        gbc.setState(0x9e06, 0xd67, 0x6b60, 0x66f6, 0x1c93, 0x1c9d, 0x0, 0x0);
        gbc.writeMem(0x9e06, { 0x2f });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xd67, gbc.sp());
        EXPECT(0x9e07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x9e06));
        // 2F 004E
        gbc.setState(0xacd3, 0xcd6a, 0x1720, 0x4894, 0x6d6, 0x4f96, 0x0, 0x0);
        gbc.writeMem(0xacd3, { 0x2f });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xcd6a, gbc.sp());
        EXPECT(0xacd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xacd3));
        // 2F 004F
        gbc.setState(0x54a4, 0xb7ff, 0x20, 0xb095, 0x47f, 0xba8, 0x1, 0x1);
        gbc.writeMem(0x54a4, { 0x2f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xb7ff, gbc.sp());
        EXPECT(0x54a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0050
        gbc.setState(0xbe22, 0x5c2, 0x7e30, 0xb037, 0xd4e4, 0x1128, 0x0, 0x0);
        gbc.writeMem(0xbe22, { 0x2f });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x5c2, gbc.sp());
        EXPECT(0xbe23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xbe22));
        // 2F 0051
        gbc.setState(0xeb6e, 0x9563, 0xa5c0, 0x2ffc, 0x100c, 0x41c, 0x0, 0x0);
        gbc.writeMem(0xeb6e, { 0x2f });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x9563, gbc.sp());
        EXPECT(0xeb6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xeb6e));
        // 2F 0052
        gbc.setState(0xea71, 0x93c, 0x1c20, 0x28db, 0x8e09, 0xd6b0, 0x0, 0x0);
        gbc.writeMem(0xea71, { 0x2f });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x93c, gbc.sp());
        EXPECT(0xea72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xea71));
        // 2F 0053
        gbc.setState(0x86c, 0xea3a, 0x6270, 0xfc26, 0x178d, 0xae2c, 0x1, 0x0);
        gbc.writeMem(0x86c, { 0x2f });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xea3a, gbc.sp());
        EXPECT(0x86d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0054
        gbc.setState(0xba10, 0x4184, 0x5930, 0xd11a, 0x46fb, 0xc495, 0x1, 0x0);
        gbc.writeMem(0xba10, { 0x2f });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x4184, gbc.sp());
        EXPECT(0xba11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xba10));
        // 2F 0055
        gbc.setState(0x7f3d, 0xce09, 0xdb80, 0x13c2, 0x562a, 0xd9ea, 0x1, 0x1);
        gbc.writeMem(0x7f3d, { 0x2f });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xce09, gbc.sp());
        EXPECT(0x7f3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0056
        gbc.setState(0x8425, 0x374, 0x55f0, 0x58e0, 0xc5d1, 0x8208, 0x1, 0x0);
        gbc.writeMem(0x8425, { 0x2f });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x374, gbc.sp());
        EXPECT(0x8426, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8425));
        // 2F 0057
        gbc.setState(0xa4c4, 0x3f4e, 0xcc70, 0xb0d2, 0xdcd5, 0x93d8, 0x1, 0x1);
        gbc.writeMem(0xa4c4, { 0x2f });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x3f4e, gbc.sp());
        EXPECT(0xa4c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xa4c4));
        // 2F 0058
        gbc.setState(0x18e9, 0x8c23, 0x7230, 0x21cf, 0xe68f, 0xb57c, 0x1, 0x1);
        gbc.writeMem(0x18e9, { 0x2f });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x8c23, gbc.sp());
        EXPECT(0x18ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0059
        gbc.setState(0xc194, 0x7dcd, 0xcf00, 0xf2f3, 0xb6c6, 0x5b16, 0x0, 0x1);
        gbc.writeMem(0xc194, { 0x2f });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x7dcd, gbc.sp());
        EXPECT(0xc195, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xc194));
        // 2F 005A
        gbc.setState(0x4ba2, 0x3ee7, 0xbae0, 0x6a9d, 0xf880, 0xab61, 0x0, 0x1);
        gbc.writeMem(0x4ba2, { 0x2f });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x3ee7, gbc.sp());
        EXPECT(0x4ba3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 005C
        gbc.setState(0xd78b, 0xcd3c, 0x9a90, 0xf07b, 0xc294, 0xccac, 0x0, 0x0);
        gbc.writeMem(0xd78b, { 0x2f });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xcd3c, gbc.sp());
        EXPECT(0xd78c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xd78b));
        // 2F 005D
        gbc.setState(0x7809, 0xe8aa, 0x3d80, 0xa987, 0xdd27, 0x70c2, 0x0, 0x0);
        gbc.writeMem(0x7809, { 0x2f });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xe8aa, gbc.sp());
        EXPECT(0x780a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 005E
        gbc.setState(0x8239, 0xfec2, 0x9250, 0xb65d, 0xf52b, 0x3a2c, 0x1, 0x0);
        gbc.writeMem(0x8239, { 0x2f });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xfec2, gbc.sp());
        EXPECT(0x823a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8239));
        // 2F 005F
        gbc.setState(0xe72e, 0x6f74, 0xc9d0, 0xae32, 0x847, 0x969b, 0x0, 0x0);
        gbc.writeMem(0xe72e, { 0x2f });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x6f74, gbc.sp());
        EXPECT(0xe72f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xe72e));
        // 2F 0060
        gbc.setState(0x1c, 0x56a7, 0x5150, 0xb2e4, 0x4f17, 0x868b, 0x0, 0x1);
        gbc.writeMem(0x1c, { 0x2f });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x56a7, gbc.sp());
        EXPECT(0x1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0061
        gbc.setState(0xadad, 0x4a10, 0xb380, 0x6ac3, 0x3311, 0xbdb9, 0x1, 0x1);
        gbc.writeMem(0xadad, { 0x2f });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x4a10, gbc.sp());
        EXPECT(0xadae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xadad));
        // 2F 0062
        gbc.setState(0x426f, 0xb2b8, 0xb860, 0xe060, 0xd5f0, 0x9a2c, 0x1, 0x0);
        gbc.writeMem(0x426f, { 0x2f });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xb2b8, gbc.sp());
        EXPECT(0x4270, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0063
        gbc.setState(0x5ea6, 0x622, 0x19b0, 0xb8e6, 0xfd3f, 0x9084, 0x1, 0x1);
        gbc.writeMem(0x5ea6, { 0x2f });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x622, gbc.sp());
        EXPECT(0x5ea7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0064
        gbc.setState(0x7198, 0xa6e1, 0x2e50, 0x5bad, 0xe257, 0xebe7, 0x0, 0x1);
        gbc.writeMem(0x7198, { 0x2f });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xa6e1, gbc.sp());
        EXPECT(0x7199, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0065
        gbc.setState(0x7b57, 0xea4c, 0x2ed0, 0x30b8, 0xe0c0, 0xb142, 0x1, 0x0);
        gbc.writeMem(0x7b57, { 0x2f });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xea4c, gbc.sp());
        EXPECT(0x7b58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0066
        gbc.setState(0x93d1, 0x9fdb, 0x7330, 0xc673, 0xc53a, 0xe2e8, 0x0, 0x1);
        gbc.writeMem(0x93d1, { 0x2f });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x9fdb, gbc.sp());
        EXPECT(0x93d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x93d1));
        // 2F 0067
        gbc.setState(0x1161, 0x1f5b, 0xe470, 0xd475, 0x8e93, 0xc0c5, 0x0, 0x1);
        gbc.writeMem(0x1161, { 0x2f });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x1f5b, gbc.sp());
        EXPECT(0x1162, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0069
        gbc.setState(0xbaeb, 0x7adb, 0x5e30, 0xbe5a, 0x5980, 0xb9ef, 0x1, 0x0);
        gbc.writeMem(0xbaeb, { 0x2f });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x7adb, gbc.sp());
        EXPECT(0xbaec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xbaeb));
        // 2F 006A
        gbc.setState(0x73b8, 0x533e, 0x3ea0, 0xddd2, 0xfa93, 0xf78e, 0x1, 0x1);
        gbc.writeMem(0x73b8, { 0x2f });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x533e, gbc.sp());
        EXPECT(0x73b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 006B
        gbc.setState(0x79b1, 0x8da4, 0x4630, 0x513a, 0x12a5, 0x718a, 0x1, 0x0);
        gbc.writeMem(0x79b1, { 0x2f });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x8da4, gbc.sp());
        EXPECT(0x79b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 006C
        gbc.setState(0xde5e, 0x44ad, 0xaff0, 0xa81b, 0xbdf7, 0x27b0, 0x0, 0x0);
        gbc.writeMem(0xde5e, { 0x2f });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x44ad, gbc.sp());
        EXPECT(0xde5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xde5e));
        // 2F 006D
        gbc.setState(0xd3ff, 0xd5b5, 0x94a0, 0x5350, 0x71fc, 0x7d7f, 0x1, 0x1);
        gbc.writeMem(0xd3ff, { 0x2f });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xd5b5, gbc.sp());
        EXPECT(0xd400, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xd3ff));
        // 2F 006E
        gbc.setState(0xa324, 0x4484, 0x2dd0, 0x7287, 0x8970, 0xbe72, 0x0, 0x1);
        gbc.writeMem(0xa324, { 0x2f });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x4484, gbc.sp());
        EXPECT(0xa325, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xa324));
        // 2F 006F
        gbc.setState(0x85f, 0x65d4, 0xcdc0, 0xb1f7, 0xb04a, 0xc50b, 0x0, 0x0);
        gbc.writeMem(0x85f, { 0x2f });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x65d4, gbc.sp());
        EXPECT(0x860, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0070
        gbc.setState(0x5ea5, 0x4b1e, 0x3a0, 0x7269, 0x7d63, 0xc07e, 0x1, 0x0);
        gbc.writeMem(0x5ea5, { 0x2f });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x4b1e, gbc.sp());
        EXPECT(0x5ea6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0071
        gbc.setState(0x687, 0xe1dd, 0xc7d0, 0xd2e6, 0xd0e0, 0x5cb6, 0x0, 0x0);
        gbc.writeMem(0x687, { 0x2f });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xe1dd, gbc.sp());
        EXPECT(0x688, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0072
        gbc.setState(0x1839, 0xfabc, 0x4550, 0x15f6, 0xea88, 0x8da8, 0x1, 0x0);
        gbc.writeMem(0x1839, { 0x2f });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xfabc, gbc.sp());
        EXPECT(0x183a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0073
        gbc.setState(0x8e3e, 0x3f1b, 0x99b0, 0x4874, 0xed9c, 0xbe3a, 0x0, 0x1);
        gbc.writeMem(0x8e3e, { 0x2f });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x3f1b, gbc.sp());
        EXPECT(0x8e3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8e3e));
        // 2F 0074
        gbc.setState(0x4fe1, 0xe8e5, 0x7a40, 0xf1d7, 0x92ac, 0x30bd, 0x0, 0x0);
        gbc.writeMem(0x4fe1, { 0x2f });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xe8e5, gbc.sp());
        EXPECT(0x4fe2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0075
        gbc.setState(0x8995, 0xb9c9, 0xa2c0, 0x5788, 0x2c80, 0x4e8b, 0x0, 0x1);
        gbc.writeMem(0x8995, { 0x2f });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xb9c9, gbc.sp());
        EXPECT(0x8996, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8995));
        // 2F 0076
        gbc.setState(0x472b, 0xf7f1, 0x3590, 0x2c80, 0x8cba, 0xcc2e, 0x0, 0x1);
        gbc.writeMem(0x472b, { 0x2f });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xf7f1, gbc.sp());
        EXPECT(0x472c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0077
        gbc.setState(0x2142, 0x92f7, 0xd060, 0xcace, 0xd3e5, 0x2ed2, 0x1, 0x1);
        gbc.writeMem(0x2142, { 0x2f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x92f7, gbc.sp());
        EXPECT(0x2143, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0078
        gbc.setState(0x3a5f, 0xcbfe, 0x64e0, 0xd749, 0xf2c, 0xcab7, 0x0, 0x1);
        gbc.writeMem(0x3a5f, { 0x2f });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xcbfe, gbc.sp());
        EXPECT(0x3a60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0079
        gbc.setState(0xb3db, 0xc212, 0xb7d0, 0x9485, 0xca49, 0x46f2, 0x0, 0x0);
        gbc.writeMem(0xb3db, { 0x2f });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xc212, gbc.sp());
        EXPECT(0xb3dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xb3db));
        // 2F 007A
        gbc.setState(0x8f3c, 0x231, 0x40a0, 0xfdb4, 0x62ff, 0x8313, 0x0, 0x1);
        gbc.writeMem(0x8f3c, { 0x2f });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x231, gbc.sp());
        EXPECT(0x8f3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8f3c));
        // 2F 007C
        gbc.setState(0x8bcd, 0x3957, 0xf30, 0x47ef, 0xdaee, 0x15c4, 0x0, 0x0);
        gbc.writeMem(0x8bcd, { 0x2f });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x3957, gbc.sp());
        EXPECT(0x8bce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8bcd));
        // 2F 007D
        gbc.setState(0x1eb4, 0xfad0, 0xe7b0, 0x87cf, 0x11ac, 0xd0f1, 0x0, 0x1);
        gbc.writeMem(0x1eb4, { 0x2f });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xfad0, gbc.sp());
        EXPECT(0x1eb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 007E
        gbc.setState(0x1c9, 0xbb40, 0xc010, 0x66a9, 0xeb60, 0xf819, 0x0, 0x0);
        gbc.writeMem(0x1c9, { 0x2f });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xbb40, gbc.sp());
        EXPECT(0x1ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 007F
        gbc.setState(0x8e72, 0x4d75, 0x72d0, 0xfac5, 0x50aa, 0x1870, 0x0, 0x0);
        gbc.writeMem(0x8e72, { 0x2f });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x4d75, gbc.sp());
        EXPECT(0x8e73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8e72));
        // 2F 0080
        gbc.setState(0xd439, 0xc48c, 0x1ba0, 0x5d6f, 0xe33c, 0xd531, 0x1, 0x1);
        gbc.writeMem(0xd439, { 0x2f });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xc48c, gbc.sp());
        EXPECT(0xd43a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xd439));
        // 2F 0081
        gbc.setState(0xe6f8, 0xfe99, 0xc970, 0xa1c6, 0x3e1, 0x5b23, 0x1, 0x1);
        gbc.writeMem(0xe6f8, { 0x2f });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xfe99, gbc.sp());
        EXPECT(0xe6f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xe6f8));
        // 2F 0083
        gbc.setState(0x71d8, 0x61a6, 0x3f40, 0xc1b2, 0x7e1f, 0xc8f, 0x0, 0x0);
        gbc.writeMem(0x71d8, { 0x2f });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x61a6, gbc.sp());
        EXPECT(0x71d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0084
        gbc.setState(0xc271, 0xaef9, 0x8af0, 0x75d8, 0xab20, 0x276a, 0x1, 0x1);
        gbc.writeMem(0xc271, { 0x2f });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xaef9, gbc.sp());
        EXPECT(0xc272, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xc271));
        // 2F 0086
        gbc.setState(0x6184, 0xabc2, 0x5e20, 0x2a3, 0xf1a, 0xaaee, 0x0, 0x0);
        gbc.writeMem(0x6184, { 0x2f });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xabc2, gbc.sp());
        EXPECT(0x6185, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0088
        gbc.setState(0x7c8a, 0xdaa9, 0x8af0, 0xebc4, 0xf50d, 0xa445, 0x0, 0x0);
        gbc.writeMem(0x7c8a, { 0x2f });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xdaa9, gbc.sp());
        EXPECT(0x7c8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0089
        gbc.setState(0x8f0d, 0x646d, 0xee80, 0x1300, 0x72e3, 0x69f5, 0x1, 0x1);
        gbc.writeMem(0x8f0d, { 0x2f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x646d, gbc.sp());
        EXPECT(0x8f0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8f0d));
        // 2F 008A
        gbc.setState(0x67ba, 0x412f, 0x8870, 0xa9dd, 0x965f, 0x7c28, 0x1, 0x1);
        gbc.writeMem(0x67ba, { 0x2f });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x412f, gbc.sp());
        EXPECT(0x67bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 008B
        gbc.setState(0xcf55, 0xe93a, 0x2da0, 0xf66, 0xfa47, 0x3ae0, 0x0, 0x1);
        gbc.writeMem(0xcf55, { 0x2f });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xe93a, gbc.sp());
        EXPECT(0xcf56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xcf55));
        // 2F 008C
        gbc.setState(0xd8f2, 0x5e3d, 0xe1c0, 0x27ed, 0xc21d, 0x50b2, 0x0, 0x1);
        gbc.writeMem(0xd8f2, { 0x2f });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x5e3d, gbc.sp());
        EXPECT(0xd8f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xd8f2));
        // 2F 008D
        gbc.setState(0x4959, 0xddb1, 0xdc20, 0x72ca, 0x98d2, 0x74e2, 0x1, 0x1);
        gbc.writeMem(0x4959, { 0x2f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xddb1, gbc.sp());
        EXPECT(0x495a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 008E
        gbc.setState(0x848d, 0x46f1, 0x1190, 0x7113, 0xb49e, 0xc190, 0x1, 0x0);
        gbc.writeMem(0x848d, { 0x2f });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x46f1, gbc.sp());
        EXPECT(0x848e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x848d));
        // 2F 008F
        gbc.setState(0x747f, 0x3c1e, 0xdc00, 0xf394, 0x4697, 0x6e74, 0x1, 0x0);
        gbc.writeMem(0x747f, { 0x2f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x3c1e, gbc.sp());
        EXPECT(0x7480, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0090
        gbc.setState(0x998c, 0xe42c, 0x32b0, 0x1ec3, 0xb539, 0xfe9c, 0x1, 0x1);
        gbc.writeMem(0x998c, { 0x2f });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xe42c, gbc.sp());
        EXPECT(0x998d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x998c));
        // 2F 0091
        gbc.setState(0xabf4, 0xe607, 0x5c20, 0xfb1f, 0xf1d3, 0x48e6, 0x1, 0x0);
        gbc.writeMem(0xabf4, { 0x2f });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xe607, gbc.sp());
        EXPECT(0xabf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xabf4));
        // 2F 0092
        gbc.setState(0x876f, 0x8ac, 0x9fa0, 0x91ef, 0x64e6, 0x8aef, 0x1, 0x0);
        gbc.writeMem(0x876f, { 0x2f });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x8ac, gbc.sp());
        EXPECT(0x8770, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x876f));
        // 2F 0093
        gbc.setState(0x653, 0x51c2, 0x6970, 0x401a, 0xaed0, 0x3704, 0x0, 0x0);
        gbc.writeMem(0x653, { 0x2f });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x51c2, gbc.sp());
        EXPECT(0x654, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0094
        gbc.setState(0x1100, 0x7919, 0x3820, 0xe9a4, 0xbc92, 0x35d2, 0x1, 0x1);
        gbc.writeMem(0x1100, { 0x2f });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x7919, gbc.sp());
        EXPECT(0x1101, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0095
        gbc.setState(0x46b2, 0x79f1, 0x5150, 0xf3c7, 0x839b, 0x5a52, 0x1, 0x0);
        gbc.writeMem(0x46b2, { 0x2f });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x79f1, gbc.sp());
        EXPECT(0x46b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0096
        gbc.setState(0x7f3b, 0x96a3, 0x7fe0, 0xad15, 0x9b5b, 0x9463, 0x1, 0x0);
        gbc.writeMem(0x7f3b, { 0x2f });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x96a3, gbc.sp());
        EXPECT(0x7f3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0097
        gbc.setState(0x7442, 0xe3f3, 0xf10, 0x57be, 0x11d6, 0x9c8b, 0x0, 0x0);
        gbc.writeMem(0x7442, { 0x2f });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xe3f3, gbc.sp());
        EXPECT(0x7443, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0098
        gbc.setState(0xcc38, 0xed86, 0xa810, 0xf612, 0x195a, 0x64b2, 0x0, 0x1);
        gbc.writeMem(0xcc38, { 0x2f });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xed86, gbc.sp());
        EXPECT(0xcc39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xcc38));
        // 2F 0099
        gbc.setState(0x65d9, 0x5059, 0x6a20, 0xb2da, 0x7a5d, 0x8a94, 0x1, 0x0);
        gbc.writeMem(0x65d9, { 0x2f });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x5059, gbc.sp());
        EXPECT(0x65da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 009A
        gbc.setState(0x5717, 0xc793, 0x9e40, 0x6062, 0xe360, 0x6a83, 0x1, 0x0);
        gbc.writeMem(0x5717, { 0x2f });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xc793, gbc.sp());
        EXPECT(0x5718, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 009B
        gbc.setState(0xaa45, 0xc5f2, 0xf480, 0x4272, 0x19fd, 0xbed9, 0x1, 0x0);
        gbc.writeMem(0xaa45, { 0x2f });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xc5f2, gbc.sp());
        EXPECT(0xaa46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xaa45));
        // 2F 009C
        gbc.setState(0x12f, 0x8920, 0xfed0, 0x8430, 0xa3cb, 0x4f84, 0x1, 0x0);
        gbc.writeMem(0x12f, { 0x2f });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x8920, gbc.sp());
        EXPECT(0x130, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 009D
        gbc.setState(0x5bcc, 0x22a4, 0x8e80, 0x5dc1, 0x4821, 0x8566, 0x1, 0x1);
        gbc.writeMem(0x5bcc, { 0x2f });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x22a4, gbc.sp());
        EXPECT(0x5bcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 009E
        gbc.setState(0x5098, 0xb80f, 0xdb20, 0x9519, 0x4f1b, 0x926c, 0x0, 0x0);
        gbc.writeMem(0x5098, { 0x2f });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xb80f, gbc.sp());
        EXPECT(0x5099, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 009F
        gbc.setState(0xc6fa, 0x43d1, 0x8550, 0xcff5, 0x2b13, 0xcf4e, 0x1, 0x1);
        gbc.writeMem(0xc6fa, { 0x2f });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x43d1, gbc.sp());
        EXPECT(0xc6fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xc6fa));
        // 2F 00A0
        gbc.setState(0xa603, 0x627e, 0x4c0, 0xe921, 0xc4e9, 0xc259, 0x1, 0x0);
        gbc.writeMem(0xa603, { 0x2f });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x627e, gbc.sp());
        EXPECT(0xa604, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xa603));
        // 2F 00A1
        gbc.setState(0x6559, 0x5db9, 0x80, 0xed65, 0xa0f6, 0xedd7, 0x0, 0x1);
        gbc.writeMem(0x6559, { 0x2f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x5db9, gbc.sp());
        EXPECT(0x655a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 00A3
        gbc.setState(0x8c32, 0xb359, 0xb4a0, 0x58b2, 0xf484, 0x6b65, 0x0, 0x0);
        gbc.writeMem(0x8c32, { 0x2f });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xb359, gbc.sp());
        EXPECT(0x8c33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8c32));
        // 2F 00A4
        gbc.setState(0x136a, 0x5e00, 0xf6d0, 0xd6a6, 0xee85, 0x3377, 0x1, 0x0);
        gbc.writeMem(0x136a, { 0x2f });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x5e00, gbc.sp());
        EXPECT(0x136b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 00A5
        gbc.setState(0x6c0c, 0xfe7f, 0xb210, 0xd3ef, 0x11c5, 0xe130, 0x0, 0x0);
        gbc.writeMem(0x6c0c, { 0x2f });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xfe7f, gbc.sp());
        EXPECT(0x6c0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 00A6
        gbc.setState(0x4fe8, 0x3c23, 0xb3a0, 0x494c, 0xe846, 0xf5ee, 0x0, 0x1);
        gbc.writeMem(0x4fe8, { 0x2f });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x3c23, gbc.sp());
        EXPECT(0x4fe9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 00A7
        gbc.setState(0x4734, 0xa9a7, 0x1550, 0xa6d8, 0x245e, 0x3a41, 0x1, 0x1);
        gbc.writeMem(0x4734, { 0x2f });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xa9a7, gbc.sp());
        EXPECT(0x4735, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 00A8
        gbc.setState(0xb761, 0x7e83, 0xc6b0, 0x45a, 0xa5f5, 0xe624, 0x1, 0x1);
        gbc.writeMem(0xb761, { 0x2f });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x7e83, gbc.sp());
        EXPECT(0xb762, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xb761));
        // 2F 00A9
        gbc.setState(0xea88, 0x6203, 0x4970, 0xddb4, 0xb83e, 0x9155, 0x0, 0x1);
        gbc.writeMem(0xea88, { 0x2f });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x6203, gbc.sp());
        EXPECT(0xea89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xea88));
        // 2F 00AA
        gbc.setState(0xb1ce, 0x1cdb, 0x2a00, 0x4a88, 0x1d99, 0xfb6b, 0x0, 0x0);
        gbc.writeMem(0xb1ce, { 0x2f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x1cdb, gbc.sp());
        EXPECT(0xb1cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xb1ce));
        // 2F 00AB
        gbc.setState(0x4b7, 0x16a8, 0x11f0, 0x3281, 0x6d77, 0xcbc9, 0x1, 0x0);
        gbc.writeMem(0x4b7, { 0x2f });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x16a8, gbc.sp());
        EXPECT(0x4b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 00AC
        gbc.setState(0x6ecf, 0xb8c, 0xbe60, 0x1fa3, 0xee9d, 0x6bea, 0x0, 0x0);
        gbc.writeMem(0x6ecf, { 0x2f });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xb8c, gbc.sp());
        EXPECT(0x6ed0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 00AE
        gbc.setState(0x8d62, 0x5e80, 0x1be0, 0xc7a4, 0x6acf, 0x7ca, 0x1, 0x0);
        gbc.writeMem(0x8d62, { 0x2f });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x5e80, gbc.sp());
        EXPECT(0x8d63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8d62));
        // 2F 00AF
        gbc.setState(0xd09a, 0xb2cd, 0x3750, 0xf7ff, 0x28b, 0x4dcb, 0x1, 0x0);
        gbc.writeMem(0xd09a, { 0x2f });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xb2cd, gbc.sp());
        EXPECT(0xd09b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xd09a));
        // 2F 00B0
        gbc.setState(0xa34c, 0xd08e, 0x7b30, 0x1be0, 0xc207, 0xd50e, 0x0, 0x0);
        gbc.writeMem(0xa34c, { 0x2f });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xd08e, gbc.sp());
        EXPECT(0xa34d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xa34c));
        // 2F 00B1
        gbc.setState(0x7c63, 0x8f07, 0x27e0, 0xf37e, 0x2680, 0x3f68, 0x0, 0x0);
        gbc.writeMem(0x7c63, { 0x2f });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x8f07, gbc.sp());
        EXPECT(0x7c64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 00B3
        gbc.setState(0xd871, 0xe15d, 0x5840, 0x478f, 0x2e59, 0xf489, 0x1, 0x0);
        gbc.writeMem(0xd871, { 0x2f });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xe15d, gbc.sp());
        EXPECT(0xd872, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xd871));
        // 2F 00B4
        gbc.setState(0x810a, 0x1855, 0xa2f0, 0x5883, 0x3a15, 0x8898, 0x1, 0x1);
        gbc.writeMem(0x810a, { 0x2f });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x1855, gbc.sp());
        EXPECT(0x810b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x810a));
        // 2F 00B5
        gbc.setState(0x5ab3, 0xfa02, 0x4ba0, 0xec97, 0x6b19, 0x9387, 0x0, 0x0);
        gbc.writeMem(0x5ab3, { 0x2f });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xfa02, gbc.sp());
        EXPECT(0x5ab4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 00B6
        gbc.setState(0x67f, 0x829a, 0xb7d0, 0xf657, 0x14d0, 0xd45a, 0x1, 0x0);
        gbc.writeMem(0x67f, { 0x2f });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x829a, gbc.sp());
        EXPECT(0x680, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 00B7
        gbc.setState(0x8ce5, 0x9862, 0x5680, 0x9f99, 0x420b, 0x30f, 0x1, 0x0);
        gbc.writeMem(0x8ce5, { 0x2f });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x9862, gbc.sp());
        EXPECT(0x8ce6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8ce5));
        // 2F 00B8
        gbc.setState(0x34af, 0xf6a1, 0x7f20, 0x58cd, 0x1cf2, 0x740, 0x0, 0x1);
        gbc.writeMem(0x34af, { 0x2f });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xf6a1, gbc.sp());
        EXPECT(0x34b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 00B9
        gbc.setState(0x8424, 0x9c8, 0x76e0, 0x955a, 0x437, 0x6cd6, 0x1, 0x0);
        gbc.writeMem(0x8424, { 0x2f });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x9c8, gbc.sp());
        EXPECT(0x8425, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8424));
        // 2F 00BA
        gbc.setState(0x254e, 0x1036, 0x7d70, 0xf94d, 0x1d53, 0x896f, 0x0, 0x0);
        gbc.writeMem(0x254e, { 0x2f });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x1036, gbc.sp());
        EXPECT(0x254f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 00BB
        gbc.setState(0x92a3, 0x6b19, 0x8720, 0xcbe3, 0xf819, 0x17d4, 0x1, 0x0);
        gbc.writeMem(0x92a3, { 0x2f });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x6b19, gbc.sp());
        EXPECT(0x92a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x92a3));
        // 2F 00BC
        gbc.setState(0xd314, 0x61bc, 0x9390, 0x33ce, 0x4afe, 0x32f, 0x0, 0x1);
        gbc.writeMem(0xd314, { 0x2f });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x61bc, gbc.sp());
        EXPECT(0xd315, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xd314));
        // 2F 00BD
        gbc.setState(0xeee2, 0xcb8c, 0x9ec0, 0x5e72, 0xf609, 0xb90e, 0x0, 0x0);
        gbc.writeMem(0xeee2, { 0x2f });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xcb8c, gbc.sp());
        EXPECT(0xeee3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xeee2));
        // 2F 00BF
        gbc.setState(0xc537, 0x9649, 0x8de0, 0x9870, 0x5bf0, 0x97d4, 0x1, 0x0);
        gbc.writeMem(0xc537, { 0x2f });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x9649, gbc.sp());
        EXPECT(0xc538, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xc537));
        // 2F 00C0
        gbc.setState(0xd520, 0x1263, 0x4e60, 0xa26f, 0x9901, 0xbbf8, 0x0, 0x1);
        gbc.writeMem(0xd520, { 0x2f });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x1263, gbc.sp());
        EXPECT(0xd521, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xd520));
        // 2F 00C1
        gbc.setState(0x7a95, 0xc5b1, 0x8400, 0xd5e2, 0xdf50, 0x4cc9, 0x0, 0x1);
        gbc.writeMem(0x7a95, { 0x2f });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xc5b1, gbc.sp());
        EXPECT(0x7a96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 00C2
        gbc.setState(0x5eca, 0x331, 0x6df0, 0x86fc, 0x9178, 0xd4e4, 0x0, 0x0);
        gbc.writeMem(0x5eca, { 0x2f });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x331, gbc.sp());
        EXPECT(0x5ecb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 00C3
        gbc.setState(0xab71, 0x5678, 0x95e0, 0x43cf, 0x8609, 0x6aa2, 0x0, 0x0);
        gbc.writeMem(0xab71, { 0x2f });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x5678, gbc.sp());
        EXPECT(0xab72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xab71));
        // 2F 00C5
        gbc.setState(0x2f28, 0x8cf6, 0xb4c0, 0x43ea, 0x5d4a, 0x1652, 0x1, 0x1);
        gbc.writeMem(0x2f28, { 0x2f });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x8cf6, gbc.sp());
        EXPECT(0x2f29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 00C6
        gbc.setState(0x9063, 0x56b1, 0xf6c0, 0x321c, 0x3f12, 0xfad1, 0x0, 0x0);
        gbc.writeMem(0x9063, { 0x2f });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x56b1, gbc.sp());
        EXPECT(0x9064, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x9063));
        // 2F 00C7
        gbc.setState(0xdc56, 0x83de, 0x9e40, 0xac90, 0x479, 0x149b, 0x0, 0x0);
        gbc.writeMem(0xdc56, { 0x2f });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x83de, gbc.sp());
        EXPECT(0xdc57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xdc56));
        // 2F 00C8
        gbc.setState(0x97dc, 0xeeb8, 0x9c90, 0x5772, 0x1fb6, 0xdfc7, 0x1, 0x0);
        gbc.writeMem(0x97dc, { 0x2f });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xeeb8, gbc.sp());
        EXPECT(0x97dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x97dc));
        // 2F 00C9
        gbc.setState(0x8bab, 0x9dc0, 0x9dd0, 0x34ae, 0xc140, 0x265f, 0x0, 0x0);
        gbc.writeMem(0x8bab, { 0x2f });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x9dc0, gbc.sp());
        EXPECT(0x8bac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8bab));
        // 2F 00CA
        gbc.setState(0xdd98, 0xb81, 0x94b0, 0x745a, 0xcedc, 0x7f51, 0x1, 0x1);
        gbc.writeMem(0xdd98, { 0x2f });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xb81, gbc.sp());
        EXPECT(0xdd99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xdd98));
        // 2F 00CB
        gbc.setState(0xdcdd, 0x768e, 0xe090, 0x683b, 0x2edc, 0xaf62, 0x0, 0x0);
        gbc.writeMem(0xdcdd, { 0x2f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x768e, gbc.sp());
        EXPECT(0xdcde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xdcdd));
        // 2F 00CC
        gbc.setState(0x9eba, 0xfed7, 0xfe00, 0xf3f6, 0xa99d, 0x4761, 0x1, 0x0);
        gbc.writeMem(0x9eba, { 0x2f });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xfed7, gbc.sp());
        EXPECT(0x9ebb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x9eba));
        // 2F 00CD
        gbc.setState(0xea5a, 0xafcb, 0xdfc0, 0x4684, 0x3d89, 0x3e30, 0x1, 0x1);
        gbc.writeMem(0xea5a, { 0x2f });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xafcb, gbc.sp());
        EXPECT(0xea5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xea5a));
        // 2F 00CE
        gbc.setState(0x5ca4, 0x926f, 0xfc10, 0x4add, 0xdbfd, 0xe288, 0x0, 0x0);
        gbc.writeMem(0x5ca4, { 0x2f });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x926f, gbc.sp());
        EXPECT(0x5ca5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 00CF
        gbc.setState(0x4778, 0x97c5, 0xac80, 0x1336, 0xac56, 0xc015, 0x1, 0x1);
        gbc.writeMem(0x4778, { 0x2f });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x97c5, gbc.sp());
        EXPECT(0x4779, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 00D0
        gbc.setState(0xa980, 0xb6dd, 0x1d40, 0x9796, 0xc1e4, 0xfb01, 0x0, 0x0);
        gbc.writeMem(0xa980, { 0x2f });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xb6dd, gbc.sp());
        EXPECT(0xa981, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xa980));
        // 2F 00D1
        gbc.setState(0x89ef, 0x1ac2, 0x90a0, 0x8775, 0xde8d, 0x4e44, 0x0, 0x0);
        gbc.writeMem(0x89ef, { 0x2f });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x1ac2, gbc.sp());
        EXPECT(0x89f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x89ef));
        // 2F 00D2
        gbc.setState(0xd055, 0x4b7d, 0x89d0, 0x8741, 0xe5ef, 0xd687, 0x0, 0x1);
        gbc.writeMem(0xd055, { 0x2f });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x4b7d, gbc.sp());
        EXPECT(0xd056, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xd055));
        // 2F 00D3
        gbc.setState(0x18cc, 0xa461, 0xfb0, 0x85bf, 0xd68b, 0xde8, 0x1, 0x1);
        gbc.writeMem(0x18cc, { 0x2f });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xa461, gbc.sp());
        EXPECT(0x18cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 00D4
        gbc.setState(0x70e6, 0x9584, 0xe00, 0xb8f, 0x3d0, 0x7089, 0x0, 0x0);
        gbc.writeMem(0x70e6, { 0x2f });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x9584, gbc.sp());
        EXPECT(0x70e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 00D5
        gbc.setState(0x8e1e, 0x7740, 0xc670, 0x2cb5, 0xf520, 0x702a, 0x1, 0x0);
        gbc.writeMem(0x8e1e, { 0x2f });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x7740, gbc.sp());
        EXPECT(0x8e1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8e1e));
        // 2F 00D6
        gbc.setState(0xc6b8, 0x19ea, 0x2be0, 0x5575, 0x32c6, 0xa7a2, 0x1, 0x0);
        gbc.writeMem(0xc6b8, { 0x2f });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x19ea, gbc.sp());
        EXPECT(0xc6b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xc6b8));
        // 2F 00D7
        gbc.setState(0x1ed1, 0xb598, 0xf740, 0xf19, 0x20df, 0x4245, 0x0, 0x0);
        gbc.writeMem(0x1ed1, { 0x2f });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xb598, gbc.sp());
        EXPECT(0x1ed2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 00D8
        gbc.setState(0x352e, 0xd1a4, 0x70f0, 0xa569, 0x4578, 0x150f, 0x1, 0x0);
        gbc.writeMem(0x352e, { 0x2f });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xd1a4, gbc.sp());
        EXPECT(0x352f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 00DA
        gbc.setState(0x19fe, 0x604b, 0x6550, 0x6be7, 0x491a, 0x1b89, 0x1, 0x0);
        gbc.writeMem(0x19fe, { 0x2f });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x604b, gbc.sp());
        EXPECT(0x19ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 00DB
        gbc.setState(0xca12, 0x7218, 0xeb20, 0xaaef, 0x4301, 0x81c7, 0x1, 0x0);
        gbc.writeMem(0xca12, { 0x2f });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x7218, gbc.sp());
        EXPECT(0xca13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xca12));
        // 2F 00DC
        gbc.setState(0x45e2, 0xb20b, 0x21b0, 0x8551, 0x1675, 0x2336, 0x1, 0x1);
        gbc.writeMem(0x45e2, { 0x2f });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xb20b, gbc.sp());
        EXPECT(0x45e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 00DD
        gbc.setState(0x74b4, 0xe225, 0xa910, 0x1fee, 0xc442, 0xe156, 0x0, 0x0);
        gbc.writeMem(0x74b4, { 0x2f });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xe225, gbc.sp());
        EXPECT(0x74b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 00DE
        gbc.setState(0x5048, 0x8eb8, 0x850, 0xee15, 0x51d4, 0xc1d7, 0x1, 0x0);
        gbc.writeMem(0x5048, { 0x2f });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x8eb8, gbc.sp());
        EXPECT(0x5049, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 00E0
        gbc.setState(0x7a43, 0xa9ed, 0x20e0, 0xa56f, 0x3940, 0x465b, 0x1, 0x0);
        gbc.writeMem(0x7a43, { 0x2f });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xa9ed, gbc.sp());
        EXPECT(0x7a44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 00E1
        gbc.setState(0x99df, 0xb46, 0xd060, 0x254b, 0x8a00, 0x2708, 0x0, 0x0);
        gbc.writeMem(0x99df, { 0x2f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb46, gbc.sp());
        EXPECT(0x99e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x99df));
        // 2F 00E2
        gbc.setState(0xa09, 0xb707, 0x5e50, 0x46e3, 0x10d6, 0x4cc5, 0x0, 0x0);
        gbc.writeMem(0xa09, { 0x2f });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xb707, gbc.sp());
        EXPECT(0xa0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 00E3
        gbc.setState(0x3c5e, 0xf37a, 0x5be0, 0x2158, 0x9b0a, 0x4913, 0x0, 0x1);
        gbc.writeMem(0x3c5e, { 0x2f });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xf37a, gbc.sp());
        EXPECT(0x3c5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 00E4
        gbc.setState(0xd77b, 0x19db, 0x2490, 0x463b, 0xa38, 0xd93e, 0x0, 0x0);
        gbc.writeMem(0xd77b, { 0x2f });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x19db, gbc.sp());
        EXPECT(0xd77c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xd77b));
        // 2F 00E5
        gbc.setState(0x45cd, 0xf0c8, 0x4cb0, 0xf6ea, 0x8473, 0x7b2a, 0x1, 0x1);
        gbc.writeMem(0x45cd, { 0x2f });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xf0c8, gbc.sp());
        EXPECT(0x45ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 00E6
        gbc.setState(0x22e8, 0xe311, 0xd730, 0xa8d7, 0xc7de, 0xb9f, 0x1, 0x1);
        gbc.writeMem(0x22e8, { 0x2f });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xe311, gbc.sp());
        EXPECT(0x22e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 00E7
        gbc.setState(0x5368, 0x4ae9, 0x5090, 0x4cd8, 0x1d23, 0x3af1, 0x1, 0x1);
        gbc.writeMem(0x5368, { 0x2f });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x4ae9, gbc.sp());
        EXPECT(0x5369, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 00E8
        gbc.setState(0x9bb4, 0xc25a, 0x3a90, 0x27d0, 0xfeab, 0xbfcb, 0x0, 0x0);
        gbc.writeMem(0x9bb4, { 0x2f });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xc25a, gbc.sp());
        EXPECT(0x9bb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x9bb4));
        // 2F 00E9
        gbc.setState(0xbdcf, 0xdc9a, 0xc010, 0x78e, 0xdc73, 0x176f, 0x1, 0x1);
        gbc.writeMem(0xbdcf, { 0x2f });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xdc9a, gbc.sp());
        EXPECT(0xbdd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xbdcf));
        // 2F 00EA
        gbc.setState(0xaf2e, 0x68cf, 0x8bf0, 0xcf74, 0x145, 0x3084, 0x0, 0x1);
        gbc.writeMem(0xaf2e, { 0x2f });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x68cf, gbc.sp());
        EXPECT(0xaf2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xaf2e));
        // 2F 00EB
        gbc.setState(0x3c1b, 0xcd8b, 0x9380, 0xc75e, 0xbb51, 0x2d5a, 0x0, 0x0);
        gbc.writeMem(0x3c1b, { 0x2f });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xcd8b, gbc.sp());
        EXPECT(0x3c1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 00EC
        gbc.setState(0x8e33, 0x572c, 0xdc30, 0xa819, 0x21c5, 0x37ae, 0x1, 0x1);
        gbc.writeMem(0x8e33, { 0x2f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x572c, gbc.sp());
        EXPECT(0x8e34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8e33));
        // 2F 00ED
        gbc.setState(0x598b, 0x6c2f, 0x6780, 0x714a, 0x858, 0x43ff, 0x0, 0x0);
        gbc.writeMem(0x598b, { 0x2f });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x6c2f, gbc.sp());
        EXPECT(0x598c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 00EE
        gbc.setState(0x4d91, 0x7f46, 0x5fd0, 0x2ca5, 0xa9a9, 0x7c9d, 0x0, 0x1);
        gbc.writeMem(0x4d91, { 0x2f });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x7f46, gbc.sp());
        EXPECT(0x4d92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 00EF
        gbc.setState(0xecfb, 0x3477, 0x6ab0, 0x4f86, 0x7819, 0xe288, 0x1, 0x0);
        gbc.writeMem(0xecfb, { 0x2f });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x3477, gbc.sp());
        EXPECT(0xecfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xecfb));
        // 2F 00F0
        gbc.setState(0x2c9e, 0x45f8, 0xf900, 0xcd6f, 0xfb96, 0x2a37, 0x1, 0x0);
        gbc.writeMem(0x2c9e, { 0x2f });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x45f8, gbc.sp());
        EXPECT(0x2c9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 00F1
        gbc.setState(0x7043, 0x66ac, 0x52c0, 0xf60a, 0x2e8c, 0x9002, 0x1, 0x0);
        gbc.writeMem(0x7043, { 0x2f });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x66ac, gbc.sp());
        EXPECT(0x7044, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 00F2
        gbc.setState(0xf7b, 0xa646, 0x9430, 0x3fa, 0x9476, 0x629f, 0x1, 0x0);
        gbc.writeMem(0xf7b, { 0x2f });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xa646, gbc.sp());
        EXPECT(0xf7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 00F3
        gbc.setState(0xa70e, 0x275b, 0xf060, 0xf5c0, 0x751b, 0x45a1, 0x1, 0x1);
        gbc.writeMem(0xa70e, { 0x2f });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x275b, gbc.sp());
        EXPECT(0xa70f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xa70e));
        // 2F 00F4
        gbc.setState(0xaf53, 0xa5ef, 0xcba0, 0xc1f0, 0xc88e, 0x96e3, 0x1, 0x0);
        gbc.writeMem(0xaf53, { 0x2f });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xa5ef, gbc.sp());
        EXPECT(0xaf54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xaf53));
        // 2F 00F5
        gbc.setState(0x8811, 0xbe2f, 0x7a10, 0x36f6, 0xc22c, 0x6c9c, 0x1, 0x1);
        gbc.writeMem(0x8811, { 0x2f });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xbe2f, gbc.sp());
        EXPECT(0x8812, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8811));
        // 2F 00F6
        gbc.setState(0x9137, 0x8846, 0xbe00, 0xfeb3, 0xb47c, 0x7536, 0x1, 0x1);
        gbc.writeMem(0x9137, { 0x2f });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x8846, gbc.sp());
        EXPECT(0x9138, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x9137));
        // 2F 00F7
        gbc.setState(0x5882, 0xe051, 0x6b60, 0x847c, 0xb57c, 0x1ee4, 0x0, 0x0);
        gbc.writeMem(0x5882, { 0x2f });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xe051, gbc.sp());
        EXPECT(0x5883, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 00F8
        gbc.setState(0x6a6a, 0x18d, 0xefe0, 0x113c, 0x4e1f, 0xc7f0, 0x0, 0x1);
        gbc.writeMem(0x6a6a, { 0x2f });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x18d, gbc.sp());
        EXPECT(0x6a6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 00F9
        gbc.setState(0x3023, 0xecee, 0xd770, 0xc25, 0x5971, 0x8d5e, 0x0, 0x0);
        gbc.writeMem(0x3023, { 0x2f });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xecee, gbc.sp());
        EXPECT(0x3024, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 00FA
        gbc.setState(0x3b63, 0x5f42, 0x4cf0, 0xf6ca, 0x5169, 0xab31, 0x1, 0x1);
        gbc.writeMem(0x3b63, { 0x2f });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x5f42, gbc.sp());
        EXPECT(0x3b64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 00FC
        gbc.setState(0xc5bf, 0x88ff, 0xb570, 0xb482, 0xf7b1, 0xb7fe, 0x0, 0x1);
        gbc.writeMem(0xc5bf, { 0x2f });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x88ff, gbc.sp());
        EXPECT(0xc5c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xc5bf));
        // 2F 00FD
        gbc.setState(0x4ce0, 0x9757, 0x4f0, 0xdc5b, 0xbb8c, 0xb03, 0x1, 0x0);
        gbc.writeMem(0x4ce0, { 0x2f });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x9757, gbc.sp());
        EXPECT(0x4ce1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 00FE
        gbc.setState(0xbf08, 0x62ed, 0x4030, 0x2efb, 0x72e6, 0x55a, 0x1, 0x0);
        gbc.writeMem(0xbf08, { 0x2f });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x62ed, gbc.sp());
        EXPECT(0xbf09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xbf08));
        // 2F 00FF
        gbc.setState(0x4fd2, 0x715c, 0xd320, 0x9bae, 0xedef, 0xd6b1, 0x0, 0x0);
        gbc.writeMem(0x4fd2, { 0x2f });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x715c, gbc.sp());
        EXPECT(0x4fd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0100
        gbc.setState(0x4aae, 0xe5ea, 0x1250, 0xd01b, 0x8989, 0xbdfd, 0x1, 0x1);
        gbc.writeMem(0x4aae, { 0x2f });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xe5ea, gbc.sp());
        EXPECT(0x4aaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0101
        gbc.setState(0xe8c2, 0x9494, 0x9c20, 0xaab7, 0xc804, 0x78ae, 0x0, 0x0);
        gbc.writeMem(0xe8c2, { 0x2f });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x9494, gbc.sp());
        EXPECT(0xe8c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xe8c2));
        // 2F 0102
        gbc.setState(0xb715, 0xc75a, 0x3900, 0xaf24, 0x1273, 0xd960, 0x0, 0x0);
        gbc.writeMem(0xb715, { 0x2f });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xc75a, gbc.sp());
        EXPECT(0xb716, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xb715));
        // 2F 0103
        gbc.setState(0xd311, 0x55e3, 0xb4a0, 0x294a, 0xd0bf, 0xf7da, 0x0, 0x0);
        gbc.writeMem(0xd311, { 0x2f });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x55e3, gbc.sp());
        EXPECT(0xd312, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xd311));
        // 2F 0104
        gbc.setState(0x683e, 0x7975, 0x4100, 0x3879, 0xc9e5, 0x885d, 0x0, 0x1);
        gbc.writeMem(0x683e, { 0x2f });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x7975, gbc.sp());
        EXPECT(0x683f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0105
        gbc.setState(0x103c, 0xa797, 0x60d0, 0x1236, 0x24e7, 0x6684, 0x0, 0x0);
        gbc.writeMem(0x103c, { 0x2f });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xa797, gbc.sp());
        EXPECT(0x103d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0106
        gbc.setState(0xca5b, 0xbc69, 0x3050, 0x133b, 0x4f59, 0xe8a, 0x1, 0x0);
        gbc.writeMem(0xca5b, { 0x2f });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xbc69, gbc.sp());
        EXPECT(0xca5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xca5b));
        // 2F 0107
        gbc.setState(0x5515, 0x1681, 0x8000, 0xb16, 0x50e0, 0x309f, 0x1, 0x0);
        gbc.writeMem(0x5515, { 0x2f });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x1681, gbc.sp());
        EXPECT(0x5516, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0108
        gbc.setState(0xcd2a, 0x7e0b, 0xb800, 0xd5be, 0x70ae, 0xa2d8, 0x1, 0x0);
        gbc.writeMem(0xcd2a, { 0x2f });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x7e0b, gbc.sp());
        EXPECT(0xcd2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xcd2a));
        // 2F 0109
        gbc.setState(0x1c2f, 0x7ed8, 0x4130, 0x26f0, 0xb87e, 0xdd57, 0x1, 0x0);
        gbc.writeMem(0x1c2f, { 0x2f });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x7ed8, gbc.sp());
        EXPECT(0x1c30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 010A
        gbc.setState(0x994c, 0xe618, 0x2510, 0xb419, 0x4553, 0x700b, 0x1, 0x1);
        gbc.writeMem(0x994c, { 0x2f });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xe618, gbc.sp());
        EXPECT(0x994d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x994c));
        // 2F 010B
        gbc.setState(0xa174, 0x734c, 0x6fd0, 0xad96, 0x6c9d, 0x7fbd, 0x1, 0x0);
        gbc.writeMem(0xa174, { 0x2f });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x734c, gbc.sp());
        EXPECT(0xa175, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xa174));
        // 2F 010C
        gbc.setState(0xa7e7, 0x51a0, 0xd050, 0x1de7, 0x4580, 0xf9ea, 0x0, 0x1);
        gbc.writeMem(0xa7e7, { 0x2f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x51a0, gbc.sp());
        EXPECT(0xa7e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xa7e7));
        // 2F 010D
        gbc.setState(0xd557, 0xc9f1, 0x82a0, 0xe220, 0xfca1, 0xd1be, 0x0, 0x0);
        gbc.writeMem(0xd557, { 0x2f });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xc9f1, gbc.sp());
        EXPECT(0xd558, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xd557));
        // 2F 010E
        gbc.setState(0x2e9b, 0xa60e, 0xcc90, 0x3609, 0x36d0, 0x9608, 0x1, 0x0);
        gbc.writeMem(0x2e9b, { 0x2f });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xa60e, gbc.sp());
        EXPECT(0x2e9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 010F
        gbc.setState(0xabdd, 0xc92a, 0xfb60, 0x6b68, 0xcefc, 0xbe79, 0x1, 0x1);
        gbc.writeMem(0xabdd, { 0x2f });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xc92a, gbc.sp());
        EXPECT(0xabde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xabdd));
        // 2F 0110
        gbc.setState(0x7f42, 0x1d61, 0x3450, 0xc709, 0x7373, 0x8e34, 0x0, 0x1);
        gbc.writeMem(0x7f42, { 0x2f });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1d61, gbc.sp());
        EXPECT(0x7f43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0111
        gbc.setState(0x99a4, 0xccd8, 0xc600, 0x62ca, 0x53e9, 0xe087, 0x0, 0x0);
        gbc.writeMem(0x99a4, { 0x2f });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xccd8, gbc.sp());
        EXPECT(0x99a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x99a4));
        // 2F 0112
        gbc.setState(0x22f1, 0xd8b1, 0xba20, 0x3eaf, 0xa35e, 0x17a4, 0x0, 0x0);
        gbc.writeMem(0x22f1, { 0x2f });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xd8b1, gbc.sp());
        EXPECT(0x22f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0113
        gbc.setState(0xbb90, 0x3484, 0xfce0, 0x246e, 0x167d, 0x3916, 0x0, 0x0);
        gbc.writeMem(0xbb90, { 0x2f });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x3484, gbc.sp());
        EXPECT(0xbb91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xbb90));
        // 2F 0114
        gbc.setState(0x498, 0xfa52, 0x7730, 0xdee4, 0xc5c, 0x6f3, 0x1, 0x1);
        gbc.writeMem(0x498, { 0x2f });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xfa52, gbc.sp());
        EXPECT(0x499, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0115
        gbc.setState(0x7945, 0x4911, 0xe390, 0xcab3, 0xd2a9, 0x1ebc, 0x0, 0x0);
        gbc.writeMem(0x7945, { 0x2f });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x4911, gbc.sp());
        EXPECT(0x7946, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0116
        gbc.setState(0x3bdf, 0x3ae6, 0x4510, 0xa80, 0x8c25, 0xc9b, 0x0, 0x0);
        gbc.writeMem(0x3bdf, { 0x2f });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x3ae6, gbc.sp());
        EXPECT(0x3be0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0117
        gbc.setState(0xd5f2, 0xedc, 0x6950, 0x3992, 0x9937, 0xea86, 0x0, 0x1);
        gbc.writeMem(0xd5f2, { 0x2f });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xedc, gbc.sp());
        EXPECT(0xd5f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xd5f2));
        // 2F 0118
        gbc.setState(0x2bea, 0xe58a, 0x9060, 0x9ca5, 0x1ff7, 0x5e2d, 0x0, 0x0);
        gbc.writeMem(0x2bea, { 0x2f });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xe58a, gbc.sp());
        EXPECT(0x2beb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0119
        gbc.setState(0x292b, 0x495f, 0x4bc0, 0x77, 0xb6f1, 0x7fe5, 0x0, 0x1);
        gbc.writeMem(0x292b, { 0x2f });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x495f, gbc.sp());
        EXPECT(0x292c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 011A
        gbc.setState(0x5fb1, 0x8d56, 0x5040, 0x9f4a, 0x8fd6, 0xcc72, 0x0, 0x0);
        gbc.writeMem(0x5fb1, { 0x2f });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x8d56, gbc.sp());
        EXPECT(0x5fb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 011B
        gbc.setState(0x15a8, 0x778a, 0x8120, 0x3d51, 0xe370, 0xb2dc, 0x1, 0x0);
        gbc.writeMem(0x15a8, { 0x2f });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x778a, gbc.sp());
        EXPECT(0x15a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 011C
        gbc.setState(0xe832, 0x3345, 0x33c0, 0x2f03, 0x99de, 0xe655, 0x0, 0x0);
        gbc.writeMem(0xe832, { 0x2f });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x3345, gbc.sp());
        EXPECT(0xe833, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xe832));
        // 2F 011D
        gbc.setState(0x650, 0x796a, 0x5040, 0xc8fb, 0x76fa, 0x4ca3, 0x1, 0x1);
        gbc.writeMem(0x650, { 0x2f });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x796a, gbc.sp());
        EXPECT(0x651, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 011E
        gbc.setState(0x129b, 0xeae9, 0xf320, 0x3f99, 0x54e8, 0x7d21, 0x0, 0x1);
        gbc.writeMem(0x129b, { 0x2f });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xeae9, gbc.sp());
        EXPECT(0x129c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 011F
        gbc.setState(0x45a0, 0x8aac, 0x4840, 0x18b4, 0xc5e0, 0xcc32, 0x1, 0x0);
        gbc.writeMem(0x45a0, { 0x2f });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x8aac, gbc.sp());
        EXPECT(0x45a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0120
        gbc.setState(0xa031, 0xcec6, 0x84a0, 0x6f78, 0x228e, 0x593, 0x1, 0x1);
        gbc.writeMem(0xa031, { 0x2f });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xcec6, gbc.sp());
        EXPECT(0xa032, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xa031));
        // 2F 0121
        gbc.setState(0xdc2e, 0xfd7a, 0x34c0, 0xcd8e, 0xafb2, 0x12d4, 0x0, 0x0);
        gbc.writeMem(0xdc2e, { 0x2f });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xfd7a, gbc.sp());
        EXPECT(0xdc2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xdc2e));
        // 2F 0122
        gbc.setState(0x7433, 0xacd4, 0x2770, 0xd345, 0x7a38, 0xaa51, 0x1, 0x1);
        gbc.writeMem(0x7433, { 0x2f });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xacd4, gbc.sp());
        EXPECT(0x7434, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0123
        gbc.setState(0x4f2a, 0x50b5, 0x8b10, 0x43fb, 0x3843, 0xecce, 0x0, 0x0);
        gbc.writeMem(0x4f2a, { 0x2f });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x50b5, gbc.sp());
        EXPECT(0x4f2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0124
        gbc.setState(0xee86, 0xde16, 0x8f20, 0x2587, 0x6b0d, 0x28b3, 0x0, 0x1);
        gbc.writeMem(0xee86, { 0x2f });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xde16, gbc.sp());
        EXPECT(0xee87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xee86));
        // 2F 0125
        gbc.setState(0x73a1, 0x1f9c, 0x3c60, 0xb669, 0x7763, 0xb901, 0x0, 0x0);
        gbc.writeMem(0x73a1, { 0x2f });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x1f9c, gbc.sp());
        EXPECT(0x73a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0126
        gbc.setState(0xc24a, 0xee8a, 0x7880, 0xb26e, 0xe48b, 0xb1a9, 0x0, 0x1);
        gbc.writeMem(0xc24a, { 0x2f });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xee8a, gbc.sp());
        EXPECT(0xc24b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xc24a));
        // 2F 0128
        gbc.setState(0x1ad4, 0x6eba, 0x53f0, 0x4905, 0x1aa3, 0xc50b, 0x0, 0x1);
        gbc.writeMem(0x1ad4, { 0x2f });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x6eba, gbc.sp());
        EXPECT(0x1ad5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0129
        gbc.setState(0x1c8d, 0x7839, 0xc8b0, 0x76fd, 0x78b3, 0xbf9b, 0x0, 0x0);
        gbc.writeMem(0x1c8d, { 0x2f });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x7839, gbc.sp());
        EXPECT(0x1c8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 012A
        gbc.setState(0x4ff3, 0xc861, 0x520, 0xc659, 0x3066, 0xd8e3, 0x0, 0x1);
        gbc.writeMem(0x4ff3, { 0x2f });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xc861, gbc.sp());
        EXPECT(0x4ff4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 012B
        gbc.setState(0xec92, 0x8588, 0x9c90, 0x8bb7, 0x1b58, 0x5b99, 0x1, 0x1);
        gbc.writeMem(0xec92, { 0x2f });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x8588, gbc.sp());
        EXPECT(0xec93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xec92));
        // 2F 012C
        gbc.setState(0xd8d3, 0x8799, 0x98b0, 0xded8, 0x8b9d, 0x39f1, 0x1, 0x0);
        gbc.writeMem(0xd8d3, { 0x2f });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x8799, gbc.sp());
        EXPECT(0xd8d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xd8d3));
        // 2F 012D
        gbc.setState(0x25d0, 0x4d63, 0x7cd0, 0x39f5, 0x18bd, 0x7d9c, 0x0, 0x1);
        gbc.writeMem(0x25d0, { 0x2f });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x4d63, gbc.sp());
        EXPECT(0x25d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 012E
        gbc.setState(0x97e, 0x8ae5, 0xa1b0, 0x4465, 0x29cc, 0x6a49, 0x1, 0x1);
        gbc.writeMem(0x97e, { 0x2f });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x8ae5, gbc.sp());
        EXPECT(0x97f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 012F
        gbc.setState(0x64c3, 0x75ed, 0x7c90, 0xeee8, 0xeb54, 0x5211, 0x0, 0x1);
        gbc.writeMem(0x64c3, { 0x2f });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x75ed, gbc.sp());
        EXPECT(0x64c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0130
        gbc.setState(0xc026, 0x812, 0xbe60, 0xbe31, 0xac97, 0x8a0a, 0x0, 0x1);
        gbc.writeMem(0xc026, { 0x2f });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x812, gbc.sp());
        EXPECT(0xc027, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xc026));
        // 2F 0131
        gbc.setState(0x7750, 0x8aa8, 0x8a10, 0x1e1f, 0xbdc, 0xc31a, 0x1, 0x1);
        gbc.writeMem(0x7750, { 0x2f });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x8aa8, gbc.sp());
        EXPECT(0x7751, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0132
        gbc.setState(0xde6, 0xdfac, 0x8400, 0x690f, 0x8e09, 0x8035, 0x1, 0x0);
        gbc.writeMem(0xde6, { 0x2f });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xdfac, gbc.sp());
        EXPECT(0xde7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0133
        gbc.setState(0x54b0, 0xdf3a, 0x9960, 0x8fe9, 0x3aa0, 0x2a76, 0x1, 0x1);
        gbc.writeMem(0x54b0, { 0x2f });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xdf3a, gbc.sp());
        EXPECT(0x54b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0134
        gbc.setState(0xb47a, 0x1d78, 0xb650, 0xf390, 0x5123, 0x832b, 0x0, 0x1);
        gbc.writeMem(0xb47a, { 0x2f });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x1d78, gbc.sp());
        EXPECT(0xb47b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xb47a));
        // 2F 0136
        gbc.setState(0x7e2e, 0xe5de, 0x9f20, 0x37f6, 0x73d1, 0x24f8, 0x1, 0x0);
        gbc.writeMem(0x7e2e, { 0x2f });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe5de, gbc.sp());
        EXPECT(0x7e2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0137
        gbc.setState(0x6b89, 0x91b6, 0x2fe0, 0x4173, 0x5084, 0x954, 0x1, 0x0);
        gbc.writeMem(0x6b89, { 0x2f });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x91b6, gbc.sp());
        EXPECT(0x6b8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0138
        gbc.setState(0x2ed1, 0xf0a1, 0xb8e0, 0x9f2d, 0x1cd3, 0x1fc9, 0x0, 0x1);
        gbc.writeMem(0x2ed1, { 0x2f });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xf0a1, gbc.sp());
        EXPECT(0x2ed2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0139
        gbc.setState(0x5d7c, 0x23a6, 0x50c0, 0xba91, 0xf610, 0xac5c, 0x0, 0x1);
        gbc.writeMem(0x5d7c, { 0x2f });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x23a6, gbc.sp());
        EXPECT(0x5d7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 013A
        gbc.setState(0x62d1, 0x504d, 0xae0, 0x6b00, 0xc812, 0x278c, 0x1, 0x0);
        gbc.writeMem(0x62d1, { 0x2f });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x504d, gbc.sp());
        EXPECT(0x62d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 013B
        gbc.setState(0x96b4, 0xe861, 0x14b0, 0x4503, 0xaad, 0xcd66, 0x1, 0x0);
        gbc.writeMem(0x96b4, { 0x2f });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xe861, gbc.sp());
        EXPECT(0x96b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x96b4));
        // 2F 013C
        gbc.setState(0xd2e1, 0xaee, 0x8160, 0xe4df, 0x4266, 0x160f, 0x1, 0x0);
        gbc.writeMem(0xd2e1, { 0x2f });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xaee, gbc.sp());
        EXPECT(0xd2e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xd2e1));
        // 2F 013D
        gbc.setState(0xefc5, 0xa6d1, 0x30, 0x50cc, 0x28d2, 0xa980, 0x1, 0x1);
        gbc.writeMem(0xefc5, { 0x2f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xa6d1, gbc.sp());
        EXPECT(0xefc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xefc5));
        // 2F 013E
        gbc.setState(0x7498, 0xe05a, 0x1710, 0xe9e8, 0x2102, 0x3d85, 0x1, 0x1);
        gbc.writeMem(0x7498, { 0x2f });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xe05a, gbc.sp());
        EXPECT(0x7499, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 013F
        gbc.setState(0x723c, 0x2ebf, 0x5da0, 0x3002, 0xac06, 0x5fe0, 0x1, 0x1);
        gbc.writeMem(0x723c, { 0x2f });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x2ebf, gbc.sp());
        EXPECT(0x723d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0140
        gbc.setState(0x1d46, 0xf954, 0xf90, 0x873c, 0xb643, 0x16f4, 0x1, 0x0);
        gbc.writeMem(0x1d46, { 0x2f });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xf954, gbc.sp());
        EXPECT(0x1d47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0141
        gbc.setState(0xa2c4, 0x36d9, 0xf770, 0x8081, 0xd7bb, 0xd029, 0x1, 0x1);
        gbc.writeMem(0xa2c4, { 0x2f });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x36d9, gbc.sp());
        EXPECT(0xa2c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xa2c4));
        // 2F 0142
        gbc.setState(0xe8f2, 0x5ee4, 0x2b60, 0xec95, 0xcd64, 0xfa2c, 0x1, 0x1);
        gbc.writeMem(0xe8f2, { 0x2f });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x5ee4, gbc.sp());
        EXPECT(0xe8f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xe8f2));
        // 2F 0143
        gbc.setState(0xba31, 0x9041, 0x7e00, 0x62c6, 0xba18, 0x87ef, 0x0, 0x1);
        gbc.writeMem(0xba31, { 0x2f });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x9041, gbc.sp());
        EXPECT(0xba32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xba31));
        // 2F 0144
        gbc.setState(0xb7f, 0x67c8, 0xd700, 0x5153, 0xc8db, 0xb92d, 0x1, 0x1);
        gbc.writeMem(0xb7f, { 0x2f });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x67c8, gbc.sp());
        EXPECT(0xb80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0145
        gbc.setState(0xc08b, 0x923, 0x1250, 0x9edd, 0x7691, 0xd0fc, 0x0, 0x0);
        gbc.writeMem(0xc08b, { 0x2f });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x923, gbc.sp());
        EXPECT(0xc08c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xc08b));
        // 2F 0146
        gbc.setState(0x7689, 0xf069, 0xac70, 0xaa7b, 0xe52b, 0xbb8e, 0x0, 0x0);
        gbc.writeMem(0x7689, { 0x2f });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xf069, gbc.sp());
        EXPECT(0x768a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0147
        gbc.setState(0x44f0, 0x2ab, 0x5640, 0x6ddd, 0x54d5, 0x7fc1, 0x1, 0x0);
        gbc.writeMem(0x44f0, { 0x2f });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x2ab, gbc.sp());
        EXPECT(0x44f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0148
        gbc.setState(0x38cd, 0xbad4, 0x6cf0, 0xb72d, 0xe811, 0x37da, 0x0, 0x1);
        gbc.writeMem(0x38cd, { 0x2f });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xbad4, gbc.sp());
        EXPECT(0x38ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0149
        gbc.setState(0x1954, 0x6310, 0x1470, 0x41f, 0x6cba, 0xf11d, 0x0, 0x1);
        gbc.writeMem(0x1954, { 0x2f });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x6310, gbc.sp());
        EXPECT(0x1955, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 014B
        gbc.setState(0x9288, 0x826b, 0xd390, 0x74f8, 0x527a, 0xf043, 0x0, 0x1);
        gbc.writeMem(0x9288, { 0x2f });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x826b, gbc.sp());
        EXPECT(0x9289, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x9288));
        // 2F 014C
        gbc.setState(0x885f, 0x159e, 0xc930, 0x4520, 0x7ec3, 0x1e5, 0x1, 0x0);
        gbc.writeMem(0x885f, { 0x2f });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x159e, gbc.sp());
        EXPECT(0x8860, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x885f));
        // 2F 014D
        gbc.setState(0x1462, 0x1681, 0x1490, 0xc857, 0x87db, 0x9c2, 0x1, 0x0);
        gbc.writeMem(0x1462, { 0x2f });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x1681, gbc.sp());
        EXPECT(0x1463, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 014E
        gbc.setState(0x7dd, 0x933d, 0x7b20, 0x2df6, 0x79a1, 0x466f, 0x0, 0x1);
        gbc.writeMem(0x7dd, { 0x2f });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x933d, gbc.sp());
        EXPECT(0x7de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 014F
        gbc.setState(0x96b2, 0x6577, 0xec30, 0x45a6, 0xcfd6, 0xa84f, 0x0, 0x0);
        gbc.writeMem(0x96b2, { 0x2f });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x6577, gbc.sp());
        EXPECT(0x96b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x96b2));
        // 2F 0151
        gbc.setState(0xd96b, 0x387e, 0x5d00, 0x706b, 0xf417, 0x92a9, 0x1, 0x0);
        gbc.writeMem(0xd96b, { 0x2f });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x387e, gbc.sp());
        EXPECT(0xd96c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xd96b));
        // 2F 0152
        gbc.setState(0x94c0, 0xa4ac, 0x4e40, 0x6fc1, 0x1bf2, 0xacb3, 0x1, 0x0);
        gbc.writeMem(0x94c0, { 0x2f });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xa4ac, gbc.sp());
        EXPECT(0x94c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x94c0));
        // 2F 0153
        gbc.setState(0xd25, 0x21dc, 0x2c80, 0x45c0, 0x7bb2, 0xdce1, 0x1, 0x1);
        gbc.writeMem(0xd25, { 0x2f });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x21dc, gbc.sp());
        EXPECT(0xd26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0154
        gbc.setState(0xebdd, 0xa9ff, 0x3a60, 0xf329, 0xc336, 0x1cbf, 0x1, 0x0);
        gbc.writeMem(0xebdd, { 0x2f });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xa9ff, gbc.sp());
        EXPECT(0xebde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xebdd));
        // 2F 0155
        gbc.setState(0xe7c8, 0x6ae2, 0x37e0, 0x9bf, 0x427e, 0x4f1f, 0x1, 0x1);
        gbc.writeMem(0xe7c8, { 0x2f });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x6ae2, gbc.sp());
        EXPECT(0xe7c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xe7c8));
        // 2F 0156
        gbc.setState(0x174b, 0x3477, 0xeeb0, 0x89b4, 0x1937, 0x7fea, 0x1, 0x1);
        gbc.writeMem(0x174b, { 0x2f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x3477, gbc.sp());
        EXPECT(0x174c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0157
        gbc.setState(0x65ca, 0xfb16, 0xe6e0, 0x6687, 0xc755, 0xc730, 0x0, 0x1);
        gbc.writeMem(0x65ca, { 0x2f });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xfb16, gbc.sp());
        EXPECT(0x65cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0158
        gbc.setState(0x3730, 0x5c63, 0x3fe0, 0xe508, 0x75a1, 0x3c3a, 0x1, 0x1);
        gbc.writeMem(0x3730, { 0x2f });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x5c63, gbc.sp());
        EXPECT(0x3731, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0159
        gbc.setState(0xeebe, 0xefa4, 0xd0, 0x4239, 0xee1c, 0x31bc, 0x1, 0x0);
        gbc.writeMem(0xeebe, { 0x2f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xefa4, gbc.sp());
        EXPECT(0xeebf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xeebe));
        // 2F 015A
        gbc.setState(0x8c5f, 0x2e85, 0xd2a0, 0xc877, 0x968b, 0xe4b8, 0x1, 0x0);
        gbc.writeMem(0x8c5f, { 0x2f });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x2e85, gbc.sp());
        EXPECT(0x8c60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8c5f));
        // 2F 015B
        gbc.setState(0xb2c6, 0xeebf, 0x4a50, 0xe294, 0x3139, 0xc8a2, 0x1, 0x1);
        gbc.writeMem(0xb2c6, { 0x2f });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xeebf, gbc.sp());
        EXPECT(0xb2c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xb2c6));
        // 2F 015C
        gbc.setState(0xcf0, 0x2c69, 0xcdb0, 0xc309, 0x1824, 0xe4f1, 0x1, 0x1);
        gbc.writeMem(0xcf0, { 0x2f });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x2c69, gbc.sp());
        EXPECT(0xcf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 015D
        gbc.setState(0xebb2, 0xaf4c, 0xe910, 0x8a29, 0x3564, 0xc0c0, 0x0, 0x1);
        gbc.writeMem(0xebb2, { 0x2f });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xaf4c, gbc.sp());
        EXPECT(0xebb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xebb2));
        // 2F 015E
        gbc.setState(0x4067, 0xdf53, 0x2c10, 0x2f77, 0xbd37, 0x21da, 0x0, 0x1);
        gbc.writeMem(0x4067, { 0x2f });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xdf53, gbc.sp());
        EXPECT(0x4068, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 015F
        gbc.setState(0xe204, 0x2198, 0xcfd0, 0x8357, 0xd0e2, 0xca2f, 0x1, 0x1);
        gbc.writeMem(0xe204, { 0x2f });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x2198, gbc.sp());
        EXPECT(0xe205, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xe204));
        // 2F 0160
        gbc.setState(0xbf01, 0x6f45, 0x7aa0, 0x9d78, 0xa156, 0x6cf9, 0x1, 0x0);
        gbc.writeMem(0xbf01, { 0x2f });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x6f45, gbc.sp());
        EXPECT(0xbf02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xbf01));
        // 2F 0161
        gbc.setState(0xcf1e, 0x1f04, 0x9f40, 0xe3f, 0x481e, 0xf2b2, 0x0, 0x1);
        gbc.writeMem(0xcf1e, { 0x2f });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x1f04, gbc.sp());
        EXPECT(0xcf1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xcf1e));
        // 2F 0162
        gbc.setState(0x1542, 0xccef, 0xd570, 0xff83, 0xfe53, 0xbfab, 0x1, 0x0);
        gbc.writeMem(0x1542, { 0x2f });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xccef, gbc.sp());
        EXPECT(0x1543, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0163
        gbc.setState(0x3cb5, 0xe8f8, 0x6630, 0xed09, 0x491a, 0xa313, 0x1, 0x1);
        gbc.writeMem(0x3cb5, { 0x2f });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xe8f8, gbc.sp());
        EXPECT(0x3cb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0164
        gbc.setState(0xaf5, 0xa5ee, 0x54c0, 0x35b8, 0xbd78, 0x29b2, 0x0, 0x1);
        gbc.writeMem(0xaf5, { 0x2f });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xa5ee, gbc.sp());
        EXPECT(0xaf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0165
        gbc.setState(0x2d1a, 0x11e0, 0x63b0, 0x6143, 0xca7a, 0x6cfa, 0x1, 0x0);
        gbc.writeMem(0x2d1a, { 0x2f });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x11e0, gbc.sp());
        EXPECT(0x2d1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0166
        gbc.setState(0xbae8, 0xa8f8, 0x4eb0, 0x50bf, 0xc5c, 0x96ae, 0x1, 0x1);
        gbc.writeMem(0xbae8, { 0x2f });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xa8f8, gbc.sp());
        EXPECT(0xbae9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xbae8));
        // 2F 0167
        gbc.setState(0x8f6f, 0x43c4, 0x6530, 0x5b31, 0x72c9, 0xf73d, 0x0, 0x0);
        gbc.writeMem(0x8f6f, { 0x2f });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x43c4, gbc.sp());
        EXPECT(0x8f70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8f6f));
        // 2F 0168
        gbc.setState(0x462, 0x26e5, 0x6e00, 0x3c3b, 0x3e93, 0x95b5, 0x0, 0x1);
        gbc.writeMem(0x462, { 0x2f });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x26e5, gbc.sp());
        EXPECT(0x463, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0169
        gbc.setState(0x1df5, 0xfc0d, 0x5dc0, 0x1f59, 0x6b68, 0xa5c3, 0x0, 0x1);
        gbc.writeMem(0x1df5, { 0x2f });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xfc0d, gbc.sp());
        EXPECT(0x1df6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 016A
        gbc.setState(0x7468, 0xdb53, 0x5a80, 0xb8ec, 0x3017, 0xbf42, 0x1, 0x0);
        gbc.writeMem(0x7468, { 0x2f });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xdb53, gbc.sp());
        EXPECT(0x7469, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 016B
        gbc.setState(0x37fd, 0x3e1f, 0x1510, 0x9e3f, 0xa9, 0x8a3a, 0x0, 0x0);
        gbc.writeMem(0x37fd, { 0x2f });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x3e1f, gbc.sp());
        EXPECT(0x37fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 016D
        gbc.setState(0x2da7, 0xcb81, 0x8650, 0x710c, 0x5172, 0xf930, 0x1, 0x1);
        gbc.writeMem(0x2da7, { 0x2f });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xcb81, gbc.sp());
        EXPECT(0x2da8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 016E
        gbc.setState(0xe95f, 0xd85, 0x7b10, 0x3915, 0x260e, 0xcaef, 0x1, 0x0);
        gbc.writeMem(0xe95f, { 0x2f });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xd85, gbc.sp());
        EXPECT(0xe960, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xe95f));
        // 2F 0170
        gbc.setState(0xde07, 0xbedf, 0x7a90, 0x5cea, 0x43e4, 0x3a04, 0x1, 0x0);
        gbc.writeMem(0xde07, { 0x2f });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xbedf, gbc.sp());
        EXPECT(0xde08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xde07));
        // 2F 0171
        gbc.setState(0x441f, 0x8ab, 0x94f0, 0xeb95, 0x96d1, 0xdb0, 0x1, 0x1);
        gbc.writeMem(0x441f, { 0x2f });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x8ab, gbc.sp());
        EXPECT(0x4420, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0172
        gbc.setState(0x593, 0x27f5, 0x1b60, 0x3a5e, 0x4235, 0x55c7, 0x1, 0x0);
        gbc.writeMem(0x593, { 0x2f });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x27f5, gbc.sp());
        EXPECT(0x594, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0173
        gbc.setState(0x6e6, 0x168c, 0xe250, 0x9af8, 0xbe9c, 0x14f1, 0x0, 0x1);
        gbc.writeMem(0x6e6, { 0x2f });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x168c, gbc.sp());
        EXPECT(0x6e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0174
        gbc.setState(0x1853, 0x66e, 0x47b0, 0xe34e, 0xf2e3, 0x6efc, 0x1, 0x0);
        gbc.writeMem(0x1853, { 0x2f });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x66e, gbc.sp());
        EXPECT(0x1854, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0175
        gbc.setState(0xe9ef, 0xb933, 0x2a0, 0x6cfe, 0x1cc6, 0x7aa3, 0x0, 0x1);
        gbc.writeMem(0xe9ef, { 0x2f });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xb933, gbc.sp());
        EXPECT(0xe9f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xe9ef));
        // 2F 0177
        gbc.setState(0x42ad, 0x31ca, 0x7280, 0xa7dd, 0xb10b, 0x13ba, 0x0, 0x1);
        gbc.writeMem(0x42ad, { 0x2f });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x31ca, gbc.sp());
        EXPECT(0x42ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0178
        gbc.setState(0x3ed6, 0x47d4, 0xac60, 0xe58e, 0x8822, 0x3078, 0x1, 0x1);
        gbc.writeMem(0x3ed6, { 0x2f });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x47d4, gbc.sp());
        EXPECT(0x3ed7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0179
        gbc.setState(0x6747, 0x6102, 0x5e10, 0xfe02, 0x5b51, 0x2270, 0x0, 0x1);
        gbc.writeMem(0x6747, { 0x2f });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x6102, gbc.sp());
        EXPECT(0x6748, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 017A
        gbc.setState(0xadd9, 0x4f6b, 0x5d0, 0x536a, 0x5c4, 0xde30, 0x1, 0x0);
        gbc.writeMem(0xadd9, { 0x2f });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x4f6b, gbc.sp());
        EXPECT(0xadda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xadd9));
        // 2F 017B
        gbc.setState(0x42dd, 0x97bc, 0x9590, 0x1713, 0xc7a9, 0xf81b, 0x0, 0x1);
        gbc.writeMem(0x42dd, { 0x2f });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x97bc, gbc.sp());
        EXPECT(0x42de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 017C
        gbc.setState(0x1785, 0x4dbc, 0x2c90, 0xdc02, 0x9372, 0x2205, 0x0, 0x1);
        gbc.writeMem(0x1785, { 0x2f });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x4dbc, gbc.sp());
        EXPECT(0x1786, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 017D
        gbc.setState(0x6484, 0x3790, 0xa6b0, 0x14db, 0x4e82, 0xefdd, 0x1, 0x1);
        gbc.writeMem(0x6484, { 0x2f });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x3790, gbc.sp());
        EXPECT(0x6485, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 017E
        gbc.setState(0x907a, 0x34e7, 0xd390, 0x71d1, 0xba95, 0xfbc5, 0x0, 0x1);
        gbc.writeMem(0x907a, { 0x2f });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x34e7, gbc.sp());
        EXPECT(0x907b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x907a));
        // 2F 017F
        gbc.setState(0x8f6a, 0xbcd3, 0x5330, 0xbca9, 0x1dfc, 0xd6ab, 0x1, 0x0);
        gbc.writeMem(0x8f6a, { 0x2f });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xbcd3, gbc.sp());
        EXPECT(0x8f6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8f6a));
        // 2F 0180
        gbc.setState(0xb55b, 0xfcba, 0x3a0, 0xad54, 0xfd05, 0x66d6, 0x0, 0x0);
        gbc.writeMem(0xb55b, { 0x2f });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xfcba, gbc.sp());
        EXPECT(0xb55c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xb55b));
        // 2F 0181
        gbc.setState(0x49b4, 0xc677, 0x5a30, 0x49de, 0x4db8, 0x969b, 0x0, 0x1);
        gbc.writeMem(0x49b4, { 0x2f });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xc677, gbc.sp());
        EXPECT(0x49b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0182
        gbc.setState(0xa6e4, 0x938f, 0x95c0, 0x12b5, 0xf0d6, 0x8909, 0x0, 0x0);
        gbc.writeMem(0xa6e4, { 0x2f });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x938f, gbc.sp());
        EXPECT(0xa6e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xa6e4));
        // 2F 0183
        gbc.setState(0xd591, 0xd9e8, 0x9420, 0x4ea8, 0x15be, 0x3114, 0x1, 0x1);
        gbc.writeMem(0xd591, { 0x2f });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xd9e8, gbc.sp());
        EXPECT(0xd592, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xd591));
        // 2F 0184
        gbc.setState(0x45eb, 0xeaf1, 0xcfc0, 0x7e8c, 0x8d29, 0x171c, 0x0, 0x1);
        gbc.writeMem(0x45eb, { 0x2f });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xeaf1, gbc.sp());
        EXPECT(0x45ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0185
        gbc.setState(0x83, 0x66ae, 0xd780, 0x401c, 0x46a9, 0x3fec, 0x0, 0x1);
        gbc.writeMem(0x83, { 0x2f });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x66ae, gbc.sp());
        EXPECT(0x84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0186
        gbc.setState(0xbe3, 0xd048, 0x6f90, 0xa8ad, 0x536e, 0x6feb, 0x0, 0x0);
        gbc.writeMem(0xbe3, { 0x2f });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xd048, gbc.sp());
        EXPECT(0xbe4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0187
        gbc.setState(0x34c5, 0x78b0, 0x93d0, 0xea62, 0x3941, 0x245e, 0x1, 0x0);
        gbc.writeMem(0x34c5, { 0x2f });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x78b0, gbc.sp());
        EXPECT(0x34c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0188
        gbc.setState(0x18f4, 0x8654, 0x4cb0, 0x2a3, 0xf03a, 0x557a, 0x1, 0x1);
        gbc.writeMem(0x18f4, { 0x2f });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x8654, gbc.sp());
        EXPECT(0x18f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0189
        gbc.setState(0xc3b8, 0xd8be, 0x1070, 0x9516, 0x1a30, 0x6259, 0x1, 0x0);
        gbc.writeMem(0xc3b8, { 0x2f });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xd8be, gbc.sp());
        EXPECT(0xc3b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xc3b8));
        // 2F 018A
        gbc.setState(0x5d6f, 0x5cb3, 0x4640, 0xe72a, 0x5125, 0x46c, 0x0, 0x0);
        gbc.writeMem(0x5d6f, { 0x2f });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x5cb3, gbc.sp());
        EXPECT(0x5d70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 018B
        gbc.setState(0xe7f2, 0x8d33, 0x5970, 0x28aa, 0x51bd, 0xec22, 0x0, 0x1);
        gbc.writeMem(0xe7f2, { 0x2f });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x8d33, gbc.sp());
        EXPECT(0xe7f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xe7f2));
        // 2F 018C
        gbc.setState(0xdbc8, 0x145c, 0x7d40, 0x4316, 0xa001, 0x2b0, 0x0, 0x0);
        gbc.writeMem(0xdbc8, { 0x2f });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x145c, gbc.sp());
        EXPECT(0xdbc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xdbc8));
        // 2F 018D
        gbc.setState(0x9f2c, 0xc08f, 0x4600, 0x870d, 0xc42f, 0x301e, 0x0, 0x1);
        gbc.writeMem(0x9f2c, { 0x2f });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xc08f, gbc.sp());
        EXPECT(0x9f2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x9f2c));
        // 2F 018E
        gbc.setState(0xa41d, 0x3057, 0x6f0, 0x95f7, 0x4812, 0xe809, 0x0, 0x1);
        gbc.writeMem(0xa41d, { 0x2f });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x3057, gbc.sp());
        EXPECT(0xa41e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xa41d));
        // 2F 018F
        gbc.setState(0x72c0, 0xb8c4, 0xb100, 0xf263, 0x3dc3, 0x9be1, 0x1, 0x1);
        gbc.writeMem(0x72c0, { 0x2f });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xb8c4, gbc.sp());
        EXPECT(0x72c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0190
        gbc.setState(0xc9ac, 0x5f30, 0x3ae0, 0x7ca0, 0xee49, 0x8e26, 0x0, 0x1);
        gbc.writeMem(0xc9ac, { 0x2f });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x5f30, gbc.sp());
        EXPECT(0xc9ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xc9ac));
        // 2F 0191
        gbc.setState(0x460c, 0x1a70, 0x4970, 0xa33c, 0xf9b3, 0x8cfb, 0x1, 0x1);
        gbc.writeMem(0x460c, { 0x2f });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x1a70, gbc.sp());
        EXPECT(0x460d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0192
        gbc.setState(0xd98e, 0xa2e1, 0x2e70, 0xdbe4, 0x2dd0, 0xd67b, 0x1, 0x0);
        gbc.writeMem(0xd98e, { 0x2f });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xa2e1, gbc.sp());
        EXPECT(0xd98f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xd98e));
        // 2F 0194
        gbc.setState(0x2ed7, 0x7ca6, 0x5510, 0x18ce, 0xeaf3, 0x2e40, 0x1, 0x1);
        gbc.writeMem(0x2ed7, { 0x2f });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x7ca6, gbc.sp());
        EXPECT(0x2ed8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0195
        gbc.setState(0x177b, 0xcd68, 0xda0, 0x6490, 0xdffa, 0xdae1, 0x0, 0x1);
        gbc.writeMem(0x177b, { 0x2f });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xcd68, gbc.sp());
        EXPECT(0x177c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0196
        gbc.setState(0x8010, 0xddd4, 0xa980, 0x8ede, 0x1f4c, 0x8f42, 0x0, 0x0);
        gbc.writeMem(0x8010, { 0x2f });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xddd4, gbc.sp());
        EXPECT(0x8011, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8010));
        // 2F 0197
        gbc.setState(0x581a, 0x3268, 0x7d60, 0x801e, 0x152d, 0xc56a, 0x1, 0x0);
        gbc.writeMem(0x581a, { 0x2f });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x3268, gbc.sp());
        EXPECT(0x581b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0198
        gbc.setState(0x52b4, 0x883d, 0xdeb0, 0x496c, 0x8cb5, 0x883b, 0x0, 0x1);
        gbc.writeMem(0x52b4, { 0x2f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x883d, gbc.sp());
        EXPECT(0x52b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0199
        gbc.setState(0x361b, 0x53d7, 0xeaf0, 0x29b, 0x88fe, 0xd815, 0x0, 0x0);
        gbc.writeMem(0x361b, { 0x2f });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x53d7, gbc.sp());
        EXPECT(0x361c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 019A
        gbc.setState(0xcc2d, 0x87e, 0x60c0, 0x9851, 0xd1de, 0x1270, 0x0, 0x0);
        gbc.writeMem(0xcc2d, { 0x2f });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x87e, gbc.sp());
        EXPECT(0xcc2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xcc2d));
        // 2F 019B
        gbc.setState(0x2616, 0x94e, 0xc6d0, 0x2f6a, 0xe0af, 0x2034, 0x0, 0x1);
        gbc.writeMem(0x2616, { 0x2f });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x94e, gbc.sp());
        EXPECT(0x2617, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 019C
        gbc.setState(0x68df, 0xee6f, 0x650, 0x2f40, 0xba8a, 0xd97a, 0x0, 0x1);
        gbc.writeMem(0x68df, { 0x2f });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xee6f, gbc.sp());
        EXPECT(0x68e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 019D
        gbc.setState(0x2763, 0x4bb5, 0xa030, 0x568, 0xe30f, 0x5553, 0x1, 0x1);
        gbc.writeMem(0x2763, { 0x2f });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x4bb5, gbc.sp());
        EXPECT(0x2764, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 019E
        gbc.setState(0x934, 0xbe38, 0x6b70, 0x7e59, 0x32f3, 0x1dbc, 0x0, 0x0);
        gbc.writeMem(0x934, { 0x2f });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xbe38, gbc.sp());
        EXPECT(0x935, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 019F
        gbc.setState(0xe23b, 0x5c15, 0xfac0, 0xfe67, 0xee, 0x4b40, 0x0, 0x0);
        gbc.writeMem(0xe23b, { 0x2f });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x5c15, gbc.sp());
        EXPECT(0xe23c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xe23b));
        // 2F 01A0
        gbc.setState(0x4a36, 0xcdca, 0x12e0, 0xaa80, 0x7d53, 0x923f, 0x1, 0x0);
        gbc.writeMem(0x4a36, { 0x2f });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xcdca, gbc.sp());
        EXPECT(0x4a37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 01A1
        gbc.setState(0xb7e3, 0x4f27, 0xa9d0, 0x17cd, 0x2827, 0xd870, 0x1, 0x0);
        gbc.writeMem(0xb7e3, { 0x2f });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x4f27, gbc.sp());
        EXPECT(0xb7e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xb7e3));
        // 2F 01A2
        gbc.setState(0xc075, 0x9dce, 0x1bd0, 0xc308, 0xfef6, 0x8de4, 0x0, 0x1);
        gbc.writeMem(0xc075, { 0x2f });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x9dce, gbc.sp());
        EXPECT(0xc076, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xc075));
        // 2F 01A3
        gbc.setState(0x220d, 0xd749, 0x1f70, 0xe43f, 0x74b6, 0x8ee6, 0x0, 0x0);
        gbc.writeMem(0x220d, { 0x2f });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xd749, gbc.sp());
        EXPECT(0x220e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 01A4
        gbc.setState(0x47e7, 0x1d6, 0xcad0, 0x70f4, 0x419b, 0x82a1, 0x0, 0x0);
        gbc.writeMem(0x47e7, { 0x2f });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x1d6, gbc.sp());
        EXPECT(0x47e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 01A5
        gbc.setState(0xdd21, 0x2032, 0x81d0, 0xc1c8, 0x3606, 0x503c, 0x0, 0x1);
        gbc.writeMem(0xdd21, { 0x2f });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2032, gbc.sp());
        EXPECT(0xdd22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xdd21));
        // 2F 01A6
        gbc.setState(0x3d66, 0x7933, 0x2af0, 0x7200, 0x82a0, 0xf929, 0x1, 0x0);
        gbc.writeMem(0x3d66, { 0x2f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x7933, gbc.sp());
        EXPECT(0x3d67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 01A7
        gbc.setState(0x4c18, 0x3c90, 0xd160, 0xc64e, 0x2dbc, 0x5bf, 0x0, 0x1);
        gbc.writeMem(0x4c18, { 0x2f });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x3c90, gbc.sp());
        EXPECT(0x4c19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 01A8
        gbc.setState(0x1182, 0x689e, 0xd950, 0xe61c, 0x33ae, 0xa36a, 0x0, 0x1);
        gbc.writeMem(0x1182, { 0x2f });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x689e, gbc.sp());
        EXPECT(0x1183, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 01A9
        gbc.setState(0xcd33, 0xb0bf, 0x4d10, 0xf53e, 0xcafe, 0x2024, 0x0, 0x1);
        gbc.writeMem(0xcd33, { 0x2f });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xb0bf, gbc.sp());
        EXPECT(0xcd34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xcd33));
        // 2F 01AA
        gbc.setState(0xdf4a, 0x535a, 0x4730, 0x2cb9, 0x8261, 0x246e, 0x0, 0x1);
        gbc.writeMem(0xdf4a, { 0x2f });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x535a, gbc.sp());
        EXPECT(0xdf4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xdf4a));
        // 2F 01AB
        gbc.setState(0x8e28, 0xdfe8, 0xbe0, 0xeaf7, 0xf858, 0xd5a2, 0x0, 0x1);
        gbc.writeMem(0x8e28, { 0x2f });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xdfe8, gbc.sp());
        EXPECT(0x8e29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8e28));
        // 2F 01AC
        gbc.setState(0xb9d3, 0x7e12, 0xb8b0, 0xf83e, 0x36a1, 0xdb3f, 0x1, 0x0);
        gbc.writeMem(0xb9d3, { 0x2f });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x7e12, gbc.sp());
        EXPECT(0xb9d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xb9d3));
        // 2F 01AD
        gbc.setState(0x7975, 0xee2, 0xb830, 0x9c30, 0x37d5, 0xbd6f, 0x1, 0x1);
        gbc.writeMem(0x7975, { 0x2f });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xee2, gbc.sp());
        EXPECT(0x7976, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 01AE
        gbc.setState(0xddaa, 0x6683, 0x4b30, 0xa356, 0x4d98, 0xbb97, 0x1, 0x0);
        gbc.writeMem(0xddaa, { 0x2f });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x6683, gbc.sp());
        EXPECT(0xddab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xddaa));
        // 2F 01AF
        gbc.setState(0xe464, 0xeab5, 0x8fc0, 0xa404, 0xce77, 0x7856, 0x0, 0x0);
        gbc.writeMem(0xe464, { 0x2f });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xeab5, gbc.sp());
        EXPECT(0xe465, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xe464));
        // 2F 01B0
        gbc.setState(0xdbbe, 0x1fb8, 0xc5a0, 0x2933, 0x67c7, 0xf1c2, 0x1, 0x1);
        gbc.writeMem(0xdbbe, { 0x2f });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x1fb8, gbc.sp());
        EXPECT(0xdbbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xdbbe));
        // 2F 01B1
        gbc.setState(0x5a0d, 0x66f7, 0x13d0, 0xf2c4, 0x6c77, 0x1e84, 0x1, 0x1);
        gbc.writeMem(0x5a0d, { 0x2f });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x66f7, gbc.sp());
        EXPECT(0x5a0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 01B2
        gbc.setState(0xab6c, 0x89f9, 0x1d30, 0x25a, 0xc00d, 0x1cb8, 0x1, 0x1);
        gbc.writeMem(0xab6c, { 0x2f });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x89f9, gbc.sp());
        EXPECT(0xab6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xab6c));
        // 2F 01B3
        gbc.setState(0x8eb, 0x4deb, 0xbd0, 0xc659, 0x9979, 0xf13f, 0x1, 0x0);
        gbc.writeMem(0x8eb, { 0x2f });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x4deb, gbc.sp());
        EXPECT(0x8ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 01B4
        gbc.setState(0x8549, 0xea8a, 0xb0c0, 0xf1ee, 0x6237, 0x4846, 0x0, 0x0);
        gbc.writeMem(0x8549, { 0x2f });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xea8a, gbc.sp());
        EXPECT(0x854a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8549));
        // 2F 01B5
        gbc.setState(0x52dd, 0xef24, 0x170, 0x8e5a, 0xa4e3, 0x9285, 0x0, 0x0);
        gbc.writeMem(0x52dd, { 0x2f });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xef24, gbc.sp());
        EXPECT(0x52de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 01B6
        gbc.setState(0x8c5f, 0xe6d1, 0x4080, 0x197c, 0x1068, 0xa381, 0x0, 0x1);
        gbc.writeMem(0x8c5f, { 0x2f });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xe6d1, gbc.sp());
        EXPECT(0x8c60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8c5f));
        // 2F 01B7
        gbc.setState(0x5cca, 0x521, 0x1560, 0x8db0, 0xeedd, 0xd9e2, 0x0, 0x1);
        gbc.writeMem(0x5cca, { 0x2f });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x521, gbc.sp());
        EXPECT(0x5ccb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 01B8
        gbc.setState(0x8131, 0x4f21, 0xd6a0, 0xc1c6, 0x398a, 0x7e99, 0x1, 0x0);
        gbc.writeMem(0x8131, { 0x2f });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x4f21, gbc.sp());
        EXPECT(0x8132, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8131));
        // 2F 01B9
        gbc.setState(0x1e38, 0xd17e, 0x46b0, 0x723f, 0x5a9b, 0x158, 0x1, 0x0);
        gbc.writeMem(0x1e38, { 0x2f });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xd17e, gbc.sp());
        EXPECT(0x1e39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 01BA
        gbc.setState(0x9e26, 0x2141, 0xf460, 0xe4a9, 0x889a, 0x71f4, 0x0, 0x1);
        gbc.writeMem(0x9e26, { 0x2f });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x2141, gbc.sp());
        EXPECT(0x9e27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x9e26));
        // 2F 01BB
        gbc.setState(0x48ed, 0x8a10, 0x29e0, 0x49da, 0xe8ab, 0xf5c, 0x0, 0x0);
        gbc.writeMem(0x48ed, { 0x2f });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x8a10, gbc.sp());
        EXPECT(0x48ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 01BC
        gbc.setState(0x4ac7, 0x920b, 0xaca0, 0xe690, 0x5316, 0xb260, 0x1, 0x0);
        gbc.writeMem(0x4ac7, { 0x2f });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x920b, gbc.sp());
        EXPECT(0x4ac8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 01BD
        gbc.setState(0xaeb, 0x73e4, 0xd80, 0xeecb, 0xae7c, 0x53b5, 0x1, 0x1);
        gbc.writeMem(0xaeb, { 0x2f });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x73e4, gbc.sp());
        EXPECT(0xaec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 01BE
        gbc.setState(0xad2e, 0xdf5c, 0x1ec0, 0x5c98, 0x163f, 0x4430, 0x1, 0x1);
        gbc.writeMem(0xad2e, { 0x2f });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xdf5c, gbc.sp());
        EXPECT(0xad2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xad2e));
        // 2F 01BF
        gbc.setState(0x93f, 0xa945, 0xbd20, 0xc4f5, 0xc25e, 0x791b, 0x0, 0x1);
        gbc.writeMem(0x93f, { 0x2f });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xa945, gbc.sp());
        EXPECT(0x940, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 01C0
        gbc.setState(0x75f3, 0x1464, 0xde50, 0x34fd, 0x7eff, 0xa126, 0x1, 0x0);
        gbc.writeMem(0x75f3, { 0x2f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x1464, gbc.sp());
        EXPECT(0x75f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 01C1
        gbc.setState(0x343d, 0x203b, 0xc660, 0x1afd, 0x47b4, 0xb216, 0x1, 0x0);
        gbc.writeMem(0x343d, { 0x2f });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x203b, gbc.sp());
        EXPECT(0x343e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 01C2
        gbc.setState(0x870c, 0x7001, 0xf810, 0xc350, 0x8c9c, 0x578e, 0x1, 0x0);
        gbc.writeMem(0x870c, { 0x2f });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x7001, gbc.sp());
        EXPECT(0x870d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x870c));
        // 2F 01C3
        gbc.setState(0xa02e, 0xdd7f, 0x7c70, 0x566a, 0xec58, 0xdf02, 0x0, 0x1);
        gbc.writeMem(0xa02e, { 0x2f });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xdd7f, gbc.sp());
        EXPECT(0xa02f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xa02e));
        // 2F 01C5
        gbc.setState(0xdbe6, 0x90e, 0x26e0, 0x6127, 0xa9b9, 0x4577, 0x1, 0x1);
        gbc.writeMem(0xdbe6, { 0x2f });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x90e, gbc.sp());
        EXPECT(0xdbe7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xdbe6));
        // 2F 01C7
        gbc.setState(0x4eb9, 0x6928, 0x4ec0, 0x8143, 0xf5a3, 0x61d, 0x0, 0x1);
        gbc.writeMem(0x4eb9, { 0x2f });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x6928, gbc.sp());
        EXPECT(0x4eba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 01C9
        gbc.setState(0x26c6, 0x1498, 0xbcd0, 0xa4a1, 0xb1d, 0xa513, 0x0, 0x0);
        gbc.writeMem(0x26c6, { 0x2f });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x1498, gbc.sp());
        EXPECT(0x26c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 01CA
        gbc.setState(0x2c65, 0xbdbd, 0xc130, 0x7a78, 0xef5d, 0xc009, 0x0, 0x1);
        gbc.writeMem(0x2c65, { 0x2f });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xbdbd, gbc.sp());
        EXPECT(0x2c66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 01CB
        gbc.setState(0x1b63, 0xd92d, 0x8100, 0xe222, 0x9006, 0x7852, 0x0, 0x1);
        gbc.writeMem(0x1b63, { 0x2f });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xd92d, gbc.sp());
        EXPECT(0x1b64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 01CC
        gbc.setState(0x334, 0xb4b9, 0x8680, 0xf058, 0x338d, 0x2174, 0x0, 0x0);
        gbc.writeMem(0x334, { 0x2f });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xb4b9, gbc.sp());
        EXPECT(0x335, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 01CD
        gbc.setState(0xa248, 0xc4be, 0x9450, 0x4716, 0x2e06, 0xc38d, 0x1, 0x0);
        gbc.writeMem(0xa248, { 0x2f });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xc4be, gbc.sp());
        EXPECT(0xa249, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xa248));
        // 2F 01CE
        gbc.setState(0xdbff, 0x95bb, 0xce90, 0x9a8d, 0xca8b, 0x7f2d, 0x1, 0x0);
        gbc.writeMem(0xdbff, { 0x2f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x95bb, gbc.sp());
        EXPECT(0xdc00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xdbff));
        // 2F 01CF
        gbc.setState(0xb6ee, 0x4039, 0x1b30, 0xa945, 0x7feb, 0x4422, 0x1, 0x0);
        gbc.writeMem(0xb6ee, { 0x2f });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x4039, gbc.sp());
        EXPECT(0xb6ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xb6ee));
        // 2F 01D0
        gbc.setState(0x1143, 0xe55, 0x2200, 0x4a50, 0x1e22, 0xc631, 0x0, 0x1);
        gbc.writeMem(0x1143, { 0x2f });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xe55, gbc.sp());
        EXPECT(0x1144, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 01D1
        gbc.setState(0xc35e, 0x253e, 0x5780, 0x7a40, 0x3946, 0x58a2, 0x1, 0x1);
        gbc.writeMem(0xc35e, { 0x2f });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x253e, gbc.sp());
        EXPECT(0xc35f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xc35e));
        // 2F 01D2
        gbc.setState(0x2437, 0xe14e, 0x80a0, 0xe4f4, 0x2363, 0x59df, 0x1, 0x0);
        gbc.writeMem(0x2437, { 0x2f });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xe14e, gbc.sp());
        EXPECT(0x2438, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 01D3
        gbc.setState(0xb306, 0xfcc, 0x5d60, 0x855e, 0xc0d, 0x6cce, 0x0, 0x1);
        gbc.writeMem(0xb306, { 0x2f });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xfcc, gbc.sp());
        EXPECT(0xb307, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xb306));
        // 2F 01D5
        gbc.setState(0x313, 0xaced, 0xeae0, 0xae0b, 0xe9ee, 0xffd0, 0x1, 0x0);
        gbc.writeMem(0x313, { 0x2f });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xaced, gbc.sp());
        EXPECT(0x314, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 01D6
        gbc.setState(0xaf0d, 0xf68a, 0x1e90, 0x83df, 0xded6, 0x568b, 0x1, 0x0);
        gbc.writeMem(0xaf0d, { 0x2f });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xf68a, gbc.sp());
        EXPECT(0xaf0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xaf0d));
        // 2F 01D7
        gbc.setState(0xeea7, 0xb04c, 0xf970, 0x2d87, 0x9c6c, 0x3182, 0x0, 0x1);
        gbc.writeMem(0xeea7, { 0x2f });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xb04c, gbc.sp());
        EXPECT(0xeea8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xeea7));
        // 2F 01D8
        gbc.setState(0x10d5, 0xdd7d, 0xf5f0, 0x4c7b, 0xb6af, 0x9d41, 0x1, 0x0);
        gbc.writeMem(0x10d5, { 0x2f });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xdd7d, gbc.sp());
        EXPECT(0x10d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 01D9
        gbc.setState(0x16c4, 0x7ba6, 0x9350, 0xdb4e, 0xcb3, 0x1586, 0x0, 0x0);
        gbc.writeMem(0x16c4, { 0x2f });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x7ba6, gbc.sp());
        EXPECT(0x16c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 01DA
        gbc.setState(0x1b16, 0x5399, 0xf1f0, 0x1302, 0xb60b, 0xa685, 0x1, 0x0);
        gbc.writeMem(0x1b16, { 0x2f });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x5399, gbc.sp());
        EXPECT(0x1b17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 01DB
        gbc.setState(0x25f7, 0x9194, 0xb640, 0x50dc, 0x8dbe, 0x809c, 0x0, 0x0);
        gbc.writeMem(0x25f7, { 0x2f });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x9194, gbc.sp());
        EXPECT(0x25f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 01DC
        gbc.setState(0x7ad3, 0xbf7b, 0xa160, 0xa948, 0x3201, 0x6490, 0x0, 0x0);
        gbc.writeMem(0x7ad3, { 0x2f });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xbf7b, gbc.sp());
        EXPECT(0x7ad4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 01DD
        gbc.setState(0x42b0, 0xde35, 0x2e90, 0x1279, 0xc01a, 0x197e, 0x0, 0x1);
        gbc.writeMem(0x42b0, { 0x2f });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xde35, gbc.sp());
        EXPECT(0x42b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 01DE
        gbc.setState(0x8ab6, 0x3c4a, 0xd070, 0x7479, 0x48d6, 0xd957, 0x0, 0x0);
        gbc.writeMem(0x8ab6, { 0x2f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x3c4a, gbc.sp());
        EXPECT(0x8ab7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8ab6));
        // 2F 01DF
        gbc.setState(0xbbe4, 0xbd6a, 0xc200, 0xc8df, 0x886b, 0x19f6, 0x0, 0x0);
        gbc.writeMem(0xbbe4, { 0x2f });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xbd6a, gbc.sp());
        EXPECT(0xbbe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xbbe4));
        // 2F 01E0
        gbc.setState(0x1f18, 0xd7b0, 0x6360, 0x6df0, 0xa974, 0x4935, 0x0, 0x1);
        gbc.writeMem(0x1f18, { 0x2f });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xd7b0, gbc.sp());
        EXPECT(0x1f19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 01E1
        gbc.setState(0x6a33, 0xa4e0, 0x3280, 0xf248, 0x9d9f, 0x2add, 0x1, 0x1);
        gbc.writeMem(0x6a33, { 0x2f });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xa4e0, gbc.sp());
        EXPECT(0x6a34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 01E2
        gbc.setState(0x45e5, 0x921f, 0x5bd0, 0x13c5, 0xca54, 0xd946, 0x1, 0x0);
        gbc.writeMem(0x45e5, { 0x2f });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x921f, gbc.sp());
        EXPECT(0x45e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 01E3
        gbc.setState(0x4055, 0x4d07, 0x57d0, 0xcd2b, 0x292e, 0x9db4, 0x1, 0x0);
        gbc.writeMem(0x4055, { 0x2f });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x4d07, gbc.sp());
        EXPECT(0x4056, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 01E4
        gbc.setState(0xb7ff, 0x5b11, 0xc110, 0xb922, 0x18e5, 0xe28e, 0x0, 0x0);
        gbc.writeMem(0xb7ff, { 0x2f });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x5b11, gbc.sp());
        EXPECT(0xb800, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xb7ff));
        // 2F 01E5
        gbc.setState(0x5684, 0x52b8, 0x7470, 0xaa5c, 0x52de, 0xe8f4, 0x0, 0x1);
        gbc.writeMem(0x5684, { 0x2f });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x52b8, gbc.sp());
        EXPECT(0x5685, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 01E6
        gbc.setState(0xaebd, 0xf704, 0x2140, 0x885d, 0xe1b9, 0x3094, 0x1, 0x0);
        gbc.writeMem(0xaebd, { 0x2f });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xf704, gbc.sp());
        EXPECT(0xaebe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xaebd));
        // 2F 01E7
        gbc.setState(0x810, 0x6d75, 0x4290, 0x3c18, 0x11d7, 0xd2d8, 0x1, 0x0);
        gbc.writeMem(0x810, { 0x2f });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x6d75, gbc.sp());
        EXPECT(0x811, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 01E8
        gbc.setState(0x92d3, 0x12bb, 0x1c30, 0x1886, 0x7d6d, 0xe520, 0x1, 0x1);
        gbc.writeMem(0x92d3, { 0x2f });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x12bb, gbc.sp());
        EXPECT(0x92d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x92d3));
        // 2F 01E9
        gbc.setState(0xe81a, 0xc109, 0x1a70, 0x7dee, 0x20ec, 0x5f76, 0x0, 0x1);
        gbc.writeMem(0xe81a, { 0x2f });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xc109, gbc.sp());
        EXPECT(0xe81b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xe81a));
        // 2F 01EA
        gbc.setState(0x3b1f, 0xfd99, 0x7890, 0xa982, 0xa8c3, 0xd1e0, 0x0, 0x0);
        gbc.writeMem(0x3b1f, { 0x2f });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xfd99, gbc.sp());
        EXPECT(0x3b20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 01EB
        gbc.setState(0xdd8a, 0x5241, 0x96d0, 0xb561, 0xeaa2, 0x891e, 0x0, 0x0);
        gbc.writeMem(0xdd8a, { 0x2f });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x5241, gbc.sp());
        EXPECT(0xdd8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xdd8a));
        // 2F 01EC
        gbc.setState(0x4605, 0x2815, 0xa420, 0xab43, 0x9ca9, 0x7850, 0x1, 0x1);
        gbc.writeMem(0x4605, { 0x2f });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x2815, gbc.sp());
        EXPECT(0x4606, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 01ED
        gbc.setState(0xd344, 0x4e52, 0xd8a0, 0x51f6, 0x2a93, 0x47d1, 0x0, 0x0);
        gbc.writeMem(0xd344, { 0x2f });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x4e52, gbc.sp());
        EXPECT(0xd345, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xd344));
        // 2F 01EE
        gbc.setState(0x79e6, 0x16de, 0x4720, 0xbf40, 0x2114, 0x88ec, 0x0, 0x0);
        gbc.writeMem(0x79e6, { 0x2f });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x16de, gbc.sp());
        EXPECT(0x79e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 01EF
        gbc.setState(0xecd4, 0x7561, 0xa250, 0x6964, 0x1065, 0x7662, 0x0, 0x0);
        gbc.writeMem(0xecd4, { 0x2f });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x7561, gbc.sp());
        EXPECT(0xecd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xecd4));
        // 2F 01F0
        gbc.setState(0x8bda, 0x5b40, 0x5c00, 0x3b6f, 0xc76f, 0x1dd1, 0x0, 0x0);
        gbc.writeMem(0x8bda, { 0x2f });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x5b40, gbc.sp());
        EXPECT(0x8bdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8bda));
        // 2F 01F1
        gbc.setState(0xbd19, 0xa61b, 0x91e0, 0x400d, 0x5fe8, 0x26c6, 0x1, 0x0);
        gbc.writeMem(0xbd19, { 0x2f });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xa61b, gbc.sp());
        EXPECT(0xbd1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xbd19));
        // 2F 01F2
        gbc.setState(0xb4de, 0xbe7e, 0x4730, 0x6a83, 0xf1c5, 0xb5e0, 0x1, 0x1);
        gbc.writeMem(0xb4de, { 0x2f });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xbe7e, gbc.sp());
        EXPECT(0xb4df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xb4de));
        // 2F 01F3
        gbc.setState(0xd68e, 0x60f8, 0x1b0, 0x3157, 0x6225, 0x81ce, 0x1, 0x0);
        gbc.writeMem(0xd68e, { 0x2f });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x60f8, gbc.sp());
        EXPECT(0xd68f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xd68e));
        // 2F 01F4
        gbc.setState(0x451c, 0x64ba, 0xe2f0, 0x80fb, 0xa8cf, 0x6004, 0x1, 0x1);
        gbc.writeMem(0x451c, { 0x2f });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x64ba, gbc.sp());
        EXPECT(0x451d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 01F5
        gbc.setState(0x1b9c, 0xf207, 0x6cf0, 0x5bf5, 0x6160, 0x9f7, 0x0, 0x0);
        gbc.writeMem(0x1b9c, { 0x2f });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xf207, gbc.sp());
        EXPECT(0x1b9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 01F6
        gbc.setState(0x7e4c, 0x92f1, 0x91a0, 0xfff7, 0x14e7, 0xac78, 0x1, 0x1);
        gbc.writeMem(0x7e4c, { 0x2f });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x92f1, gbc.sp());
        EXPECT(0x7e4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 01F8
        gbc.setState(0x5212, 0xa3f6, 0xe250, 0xf913, 0x9e21, 0x514e, 0x0, 0x0);
        gbc.writeMem(0x5212, { 0x2f });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xa3f6, gbc.sp());
        EXPECT(0x5213, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 01F9
        gbc.setState(0x6404, 0x8b91, 0x53a0, 0x4069, 0x6f99, 0x4d72, 0x1, 0x1);
        gbc.writeMem(0x6404, { 0x2f });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x8b91, gbc.sp());
        EXPECT(0x6405, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 01FA
        gbc.setState(0x5567, 0x87cd, 0x5210, 0x2d57, 0x3336, 0xc118, 0x0, 0x1);
        gbc.writeMem(0x5567, { 0x2f });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x87cd, gbc.sp());
        EXPECT(0x5568, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 01FB
        gbc.setState(0xab15, 0x6ff9, 0x5cc0, 0xa86, 0xfdbd, 0x7797, 0x1, 0x1);
        gbc.writeMem(0xab15, { 0x2f });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x6ff9, gbc.sp());
        EXPECT(0xab16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xab15));
        // 2F 01FC
        gbc.setState(0xde42, 0x9d8e, 0x8110, 0x5eb5, 0xc7d6, 0x9a10, 0x0, 0x0);
        gbc.writeMem(0xde42, { 0x2f });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x9d8e, gbc.sp());
        EXPECT(0xde43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xde42));
        // 2F 01FD
        gbc.setState(0x6fb9, 0x34aa, 0x36f0, 0xbae4, 0xefdf, 0x3c52, 0x1, 0x1);
        gbc.writeMem(0x6fb9, { 0x2f });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x34aa, gbc.sp());
        EXPECT(0x6fba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 01FE
        gbc.setState(0xd3ed, 0x40f8, 0x8cd0, 0x4d65, 0x41c9, 0xd3d0, 0x0, 0x0);
        gbc.writeMem(0xd3ed, { 0x2f });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x40f8, gbc.sp());
        EXPECT(0xd3ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xd3ed));
        // 2F 01FF
        gbc.setState(0x844a, 0x1d13, 0xd400, 0xe5d6, 0x30df, 0xb269, 0x0, 0x0);
        gbc.writeMem(0x844a, { 0x2f });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x1d13, gbc.sp());
        EXPECT(0x844b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x844a));
        // 2F 0200
        gbc.setState(0x3467, 0x4dd4, 0x5190, 0xfb0e, 0x9c8a, 0xb5b2, 0x0, 0x1);
        gbc.writeMem(0x3467, { 0x2f });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x4dd4, gbc.sp());
        EXPECT(0x3468, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0201
        gbc.setState(0x5d86, 0x9e4a, 0xcdd0, 0x548a, 0x8fd9, 0x9a2a, 0x1, 0x0);
        gbc.writeMem(0x5d86, { 0x2f });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x9e4a, gbc.sp());
        EXPECT(0x5d87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0202
        gbc.setState(0x3940, 0xc2e1, 0x2350, 0xd829, 0x2bcf, 0x537a, 0x0, 0x0);
        gbc.writeMem(0x3940, { 0x2f });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xc2e1, gbc.sp());
        EXPECT(0x3941, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0203
        gbc.setState(0x2641, 0x963e, 0xafc0, 0xd83b, 0x141c, 0x56ee, 0x1, 0x1);
        gbc.writeMem(0x2641, { 0x2f });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x963e, gbc.sp());
        EXPECT(0x2642, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0204
        gbc.setState(0x4209, 0x266b, 0x52b0, 0xfba2, 0xa62a, 0xb70b, 0x1, 0x0);
        gbc.writeMem(0x4209, { 0x2f });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x266b, gbc.sp());
        EXPECT(0x420a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0205
        gbc.setState(0x7da8, 0x4d1f, 0x3590, 0xc7f3, 0x619f, 0xea10, 0x0, 0x1);
        gbc.writeMem(0x7da8, { 0x2f });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x4d1f, gbc.sp());
        EXPECT(0x7da9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0206
        gbc.setState(0xae11, 0x5e48, 0x3e60, 0xc2ab, 0x1174, 0x2c8c, 0x0, 0x0);
        gbc.writeMem(0xae11, { 0x2f });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x5e48, gbc.sp());
        EXPECT(0xae12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xae11));
        // 2F 0207
        gbc.setState(0x8f46, 0x715d, 0xf6e0, 0xe287, 0x5523, 0xe379, 0x1, 0x0);
        gbc.writeMem(0x8f46, { 0x2f });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x715d, gbc.sp());
        EXPECT(0x8f47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8f46));
        // 2F 0208
        gbc.setState(0xdce4, 0xfb64, 0xdad0, 0xdbc3, 0xaeb2, 0xd971, 0x1, 0x0);
        gbc.writeMem(0xdce4, { 0x2f });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xfb64, gbc.sp());
        EXPECT(0xdce5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xdce4));
        // 2F 0209
        gbc.setState(0x94e6, 0x9301, 0x7090, 0x6868, 0x1003, 0x1e7d, 0x1, 0x1);
        gbc.writeMem(0x94e6, { 0x2f });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x9301, gbc.sp());
        EXPECT(0x94e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x94e6));
        // 2F 020A
        gbc.setState(0x9891, 0xdd03, 0x5500, 0xbc42, 0x8c81, 0x8774, 0x0, 0x1);
        gbc.writeMem(0x9891, { 0x2f });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xdd03, gbc.sp());
        EXPECT(0x9892, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x9891));
        // 2F 020B
        gbc.setState(0x5e34, 0x9469, 0xbf10, 0xf902, 0xa04, 0x3bc1, 0x1, 0x1);
        gbc.writeMem(0x5e34, { 0x2f });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x9469, gbc.sp());
        EXPECT(0x5e35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 020C
        gbc.setState(0x2634, 0xff15, 0xdb0, 0xf4a6, 0xd846, 0x8dec, 0x0, 0x0);
        gbc.writeMem(0x2634, { 0x2f });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xff15, gbc.sp());
        EXPECT(0x2635, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 020D
        gbc.setState(0x4db3, 0x39a0, 0xf5d0, 0xcb1d, 0x26a4, 0xd3eb, 0x1, 0x0);
        gbc.writeMem(0x4db3, { 0x2f });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x39a0, gbc.sp());
        EXPECT(0x4db4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 020E
        gbc.setState(0x1786, 0xd94a, 0x2d50, 0x46dc, 0x9a1, 0xfccc, 0x1, 0x0);
        gbc.writeMem(0x1786, { 0x2f });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xd94a, gbc.sp());
        EXPECT(0x1787, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 020F
        gbc.setState(0x3c6c, 0xea64, 0xa880, 0x2884, 0x4cdf, 0xe25f, 0x1, 0x0);
        gbc.writeMem(0x3c6c, { 0x2f });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xea64, gbc.sp());
        EXPECT(0x3c6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0210
        gbc.setState(0xd5e2, 0xd6d7, 0x7e0, 0x29e, 0xae06, 0xe765, 0x0, 0x1);
        gbc.writeMem(0xd5e2, { 0x2f });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xd6d7, gbc.sp());
        EXPECT(0xd5e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xd5e2));
        // 2F 0211
        gbc.setState(0x5619, 0xda0c, 0x8aa0, 0x12b5, 0x6fec, 0x2923, 0x1, 0x0);
        gbc.writeMem(0x5619, { 0x2f });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xda0c, gbc.sp());
        EXPECT(0x561a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0212
        gbc.setState(0x6de9, 0xe6a7, 0x2ce0, 0xe652, 0xd369, 0xfb8b, 0x1, 0x0);
        gbc.writeMem(0x6de9, { 0x2f });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xe6a7, gbc.sp());
        EXPECT(0x6dea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0213
        gbc.setState(0x83df, 0xf486, 0x67d0, 0x38db, 0x748e, 0x61a4, 0x0, 0x1);
        gbc.writeMem(0x83df, { 0x2f });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xf486, gbc.sp());
        EXPECT(0x83e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x83df));
        // 2F 0214
        gbc.setState(0x110a, 0x142a, 0x51f0, 0xa0f9, 0x8e43, 0x55fc, 0x1, 0x1);
        gbc.writeMem(0x110a, { 0x2f });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x142a, gbc.sp());
        EXPECT(0x110b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0215
        gbc.setState(0x7820, 0x26be, 0xfaa0, 0x2766, 0x458f, 0xd698, 0x0, 0x1);
        gbc.writeMem(0x7820, { 0x2f });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x26be, gbc.sp());
        EXPECT(0x7821, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0216
        gbc.setState(0xedb4, 0x3723, 0xa6a0, 0xd99a, 0xc710, 0xf857, 0x1, 0x0);
        gbc.writeMem(0xedb4, { 0x2f });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x3723, gbc.sp());
        EXPECT(0xedb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xedb4));
        // 2F 0217
        gbc.setState(0x3ba3, 0xe66f, 0x9510, 0xf49f, 0x794c, 0x678f, 0x1, 0x0);
        gbc.writeMem(0x3ba3, { 0x2f });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe66f, gbc.sp());
        EXPECT(0x3ba4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0218
        gbc.setState(0xb7f9, 0xad7a, 0x7390, 0x1679, 0x67be, 0x9c5d, 0x1, 0x0);
        gbc.writeMem(0xb7f9, { 0x2f });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xad7a, gbc.sp());
        EXPECT(0xb7fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xb7f9));
        // 2F 0219
        gbc.setState(0x2e2, 0x7a2f, 0x88b0, 0xcc0a, 0x816c, 0x901, 0x0, 0x1);
        gbc.writeMem(0x2e2, { 0x2f });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x7a2f, gbc.sp());
        EXPECT(0x2e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 021A
        gbc.setState(0x46fd, 0xcacd, 0x1420, 0x9c94, 0x5635, 0xfead, 0x0, 0x0);
        gbc.writeMem(0x46fd, { 0x2f });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xcacd, gbc.sp());
        EXPECT(0x46fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 021B
        gbc.setState(0xa44a, 0xc4e9, 0x6400, 0x625, 0x108f, 0x5266, 0x1, 0x1);
        gbc.writeMem(0xa44a, { 0x2f });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xc4e9, gbc.sp());
        EXPECT(0xa44b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xa44a));
        // 2F 021C
        gbc.setState(0xc085, 0x2bfd, 0xdcc0, 0xcafb, 0xd256, 0x1fce, 0x1, 0x1);
        gbc.writeMem(0xc085, { 0x2f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x2bfd, gbc.sp());
        EXPECT(0xc086, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xc085));
        // 2F 021D
        gbc.setState(0x632a, 0xd877, 0x10a0, 0xa65f, 0xbb78, 0x539, 0x1, 0x0);
        gbc.writeMem(0x632a, { 0x2f });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xd877, gbc.sp());
        EXPECT(0x632b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 021E
        gbc.setState(0x5ad7, 0x6e51, 0x52e0, 0x65fb, 0xe354, 0xc5d4, 0x0, 0x1);
        gbc.writeMem(0x5ad7, { 0x2f });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x6e51, gbc.sp());
        EXPECT(0x5ad8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 021F
        gbc.setState(0xd7d2, 0xd7d1, 0xf830, 0x7dc3, 0x5cf4, 0xfbb2, 0x1, 0x1);
        gbc.writeMem(0xd7d2, { 0x2f });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xd7d1, gbc.sp());
        EXPECT(0xd7d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xd7d2));
        // 2F 0220
        gbc.setState(0x8b3d, 0xbd83, 0xe170, 0x305b, 0x7e51, 0x38cc, 0x0, 0x0);
        gbc.writeMem(0x8b3d, { 0x2f });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xbd83, gbc.sp());
        EXPECT(0x8b3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8b3d));
        // 2F 0221
        gbc.setState(0xdac6, 0x73f3, 0x70c0, 0x5936, 0x2b3a, 0x2eb1, 0x1, 0x0);
        gbc.writeMem(0xdac6, { 0x2f });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x73f3, gbc.sp());
        EXPECT(0xdac7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xdac6));
        // 2F 0222
        gbc.setState(0x7c0, 0x4e11, 0x6880, 0x491, 0xe6dc, 0x8577, 0x0, 0x1);
        gbc.writeMem(0x7c0, { 0x2f });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x4e11, gbc.sp());
        EXPECT(0x7c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0223
        gbc.setState(0x1cbd, 0x9989, 0x9660, 0x99ed, 0xcdb9, 0x3b2a, 0x0, 0x0);
        gbc.writeMem(0x1cbd, { 0x2f });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x9989, gbc.sp());
        EXPECT(0x1cbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0225
        gbc.setState(0xcfd9, 0xd3fb, 0xef10, 0xde68, 0x8b2c, 0xb97e, 0x1, 0x0);
        gbc.writeMem(0xcfd9, { 0x2f });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xd3fb, gbc.sp());
        EXPECT(0xcfda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xcfd9));
        // 2F 0226
        gbc.setState(0xdb63, 0xf245, 0x7d10, 0x806b, 0x7313, 0x9d29, 0x0, 0x1);
        gbc.writeMem(0xdb63, { 0x2f });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xf245, gbc.sp());
        EXPECT(0xdb64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xdb63));
        // 2F 0227
        gbc.setState(0x7d6f, 0xeb3e, 0xd890, 0xe4bb, 0x7503, 0xe790, 0x1, 0x0);
        gbc.writeMem(0x7d6f, { 0x2f });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xeb3e, gbc.sp());
        EXPECT(0x7d70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0228
        gbc.setState(0xc6ff, 0xd361, 0x3820, 0x1a34, 0xb455, 0xcae5, 0x0, 0x1);
        gbc.writeMem(0xc6ff, { 0x2f });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xd361, gbc.sp());
        EXPECT(0xc700, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xc6ff));
        // 2F 0229
        gbc.setState(0xd26c, 0x767c, 0x7b60, 0x22d9, 0xd4e4, 0x1661, 0x0, 0x0);
        gbc.writeMem(0xd26c, { 0x2f });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x767c, gbc.sp());
        EXPECT(0xd26d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xd26c));
        // 2F 022A
        gbc.setState(0xda1f, 0xbfc4, 0x2810, 0x3826, 0xc5f1, 0xc2d1, 0x1, 0x1);
        gbc.writeMem(0xda1f, { 0x2f });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xbfc4, gbc.sp());
        EXPECT(0xda20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xda1f));
        // 2F 022B
        gbc.setState(0x4008, 0x76f0, 0x3890, 0x44b, 0x1215, 0x9952, 0x1, 0x1);
        gbc.writeMem(0x4008, { 0x2f });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x76f0, gbc.sp());
        EXPECT(0x4009, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 022D
        gbc.setState(0xda92, 0x956, 0xfd60, 0x3291, 0x73d, 0x9114, 0x0, 0x0);
        gbc.writeMem(0xda92, { 0x2f });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x956, gbc.sp());
        EXPECT(0xda93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xda92));
        // 2F 022E
        gbc.setState(0xd929, 0x2d1e, 0xa00, 0x410b, 0x50ea, 0xf1bd, 0x1, 0x0);
        gbc.writeMem(0xd929, { 0x2f });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x2d1e, gbc.sp());
        EXPECT(0xd92a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xd929));
        // 2F 022F
        gbc.setState(0x6dee, 0x6eb2, 0x4250, 0x91e7, 0x110d, 0xc7e1, 0x1, 0x0);
        gbc.writeMem(0x6dee, { 0x2f });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x6eb2, gbc.sp());
        EXPECT(0x6def, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0230
        gbc.setState(0x4586, 0x787a, 0x5a20, 0x51ce, 0x5b8, 0x81ef, 0x1, 0x0);
        gbc.writeMem(0x4586, { 0x2f });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x787a, gbc.sp());
        EXPECT(0x4587, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0231
        gbc.setState(0x7413, 0xc9e4, 0x3b40, 0xa59c, 0x4097, 0x4339, 0x0, 0x1);
        gbc.writeMem(0x7413, { 0x2f });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xc9e4, gbc.sp());
        EXPECT(0x7414, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0232
        gbc.setState(0x74d3, 0x244b, 0x2050, 0xb140, 0xb207, 0x8b3b, 0x1, 0x1);
        gbc.writeMem(0x74d3, { 0x2f });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x244b, gbc.sp());
        EXPECT(0x74d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0233
        gbc.setState(0xd681, 0x48a9, 0x98a0, 0xee1c, 0x92f4, 0x3759, 0x0, 0x1);
        gbc.writeMem(0xd681, { 0x2f });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x48a9, gbc.sp());
        EXPECT(0xd682, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xd681));
        // 2F 0234
        gbc.setState(0x13bc, 0xe60e, 0xedc0, 0x14aa, 0x80f1, 0xc92e, 0x0, 0x1);
        gbc.writeMem(0x13bc, { 0x2f });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xe60e, gbc.sp());
        EXPECT(0x13bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0235
        gbc.setState(0x17c1, 0xcbf2, 0xb930, 0xdf86, 0xc047, 0xa7c8, 0x1, 0x1);
        gbc.writeMem(0x17c1, { 0x2f });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xcbf2, gbc.sp());
        EXPECT(0x17c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0236
        gbc.setState(0x1b9, 0xebf1, 0x1b50, 0xb901, 0xbe04, 0x7572, 0x1, 0x0);
        gbc.writeMem(0x1b9, { 0x2f });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xebf1, gbc.sp());
        EXPECT(0x1ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0237
        gbc.setState(0xdf3d, 0x6925, 0xb2d0, 0xc83d, 0x5f8a, 0xa78, 0x0, 0x0);
        gbc.writeMem(0xdf3d, { 0x2f });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x6925, gbc.sp());
        EXPECT(0xdf3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xdf3d));
        // 2F 0238
        gbc.setState(0x2868, 0xbf36, 0x7910, 0x2e58, 0x7903, 0xf6c5, 0x0, 0x0);
        gbc.writeMem(0x2868, { 0x2f });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xbf36, gbc.sp());
        EXPECT(0x2869, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0239
        gbc.setState(0xdd14, 0x72eb, 0xf930, 0x5493, 0x262d, 0x1de, 0x1, 0x0);
        gbc.writeMem(0xdd14, { 0x2f });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x72eb, gbc.sp());
        EXPECT(0xdd15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xdd14));
        // 2F 023A
        gbc.setState(0x681f, 0xef4a, 0x4b60, 0xdb63, 0xd11a, 0x493, 0x1, 0x0);
        gbc.writeMem(0x681f, { 0x2f });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xef4a, gbc.sp());
        EXPECT(0x6820, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 023B
        gbc.setState(0xe058, 0x988e, 0x16b0, 0x7daa, 0x8c78, 0xa56, 0x1, 0x0);
        gbc.writeMem(0xe058, { 0x2f });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x988e, gbc.sp());
        EXPECT(0xe059, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xe058));
        // 2F 023C
        gbc.setState(0x5cf4, 0xfbd0, 0xd3a0, 0x8e11, 0x1da8, 0xfec3, 0x1, 0x0);
        gbc.writeMem(0x5cf4, { 0x2f });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xfbd0, gbc.sp());
        EXPECT(0x5cf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 023D
        gbc.setState(0x6bb2, 0xbc55, 0x1ee0, 0xfaaa, 0xfd29, 0x8706, 0x1, 0x1);
        gbc.writeMem(0x6bb2, { 0x2f });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xbc55, gbc.sp());
        EXPECT(0x6bb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 023E
        gbc.setState(0xd1cd, 0x8e9, 0x1b60, 0xe8f2, 0x9aaa, 0x8ff2, 0x0, 0x0);
        gbc.writeMem(0xd1cd, { 0x2f });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x8e9, gbc.sp());
        EXPECT(0xd1ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xd1cd));
        // 2F 023F
        gbc.setState(0x86f2, 0xb0bd, 0xa490, 0x1edc, 0x3b02, 0x9343, 0x0, 0x1);
        gbc.writeMem(0x86f2, { 0x2f });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb0bd, gbc.sp());
        EXPECT(0x86f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x86f2));
        // 2F 0240
        gbc.setState(0x36a9, 0xf9f9, 0x9a90, 0xe1c0, 0x996, 0x1ded, 0x1, 0x1);
        gbc.writeMem(0x36a9, { 0x2f });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xf9f9, gbc.sp());
        EXPECT(0x36aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0241
        gbc.setState(0x72e1, 0xf249, 0x16b0, 0x4e16, 0xd75d, 0xd067, 0x1, 0x1);
        gbc.writeMem(0x72e1, { 0x2f });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xf249, gbc.sp());
        EXPECT(0x72e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0242
        gbc.setState(0x7669, 0xd323, 0x7150, 0x629, 0x2767, 0x77a2, 0x1, 0x0);
        gbc.writeMem(0x7669, { 0x2f });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xd323, gbc.sp());
        EXPECT(0x766a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0243
        gbc.setState(0x56b8, 0x357a, 0x2a50, 0xdb52, 0x3181, 0x8f9, 0x0, 0x0);
        gbc.writeMem(0x56b8, { 0x2f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x357a, gbc.sp());
        EXPECT(0x56b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0244
        gbc.setState(0xdc5, 0x8a30, 0xa6e0, 0x53ec, 0x3b6d, 0xc8f2, 0x0, 0x0);
        gbc.writeMem(0xdc5, { 0x2f });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x8a30, gbc.sp());
        EXPECT(0xdc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0245
        gbc.setState(0x9b32, 0x333b, 0x68e0, 0xa1cc, 0xf7b9, 0xb4df, 0x0, 0x1);
        gbc.writeMem(0x9b32, { 0x2f });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x333b, gbc.sp());
        EXPECT(0x9b33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x9b32));
        // 2F 0246
        gbc.setState(0x9a43, 0xfd14, 0x3490, 0xb2df, 0xe184, 0xc30b, 0x1, 0x0);
        gbc.writeMem(0x9a43, { 0x2f });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xfd14, gbc.sp());
        EXPECT(0x9a44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x9a43));
        // 2F 0249
        gbc.setState(0xb50, 0xb822, 0xcdf0, 0xe3f3, 0x3daa, 0xf378, 0x1, 0x1);
        gbc.writeMem(0xb50, { 0x2f });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xb822, gbc.sp());
        EXPECT(0xb51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 024A
        gbc.setState(0x2fa2, 0x96a4, 0xfc90, 0x8dae, 0x5c97, 0x3fea, 0x1, 0x0);
        gbc.writeMem(0x2fa2, { 0x2f });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x96a4, gbc.sp());
        EXPECT(0x2fa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 024B
        gbc.setState(0x1016, 0x3165, 0x4b30, 0x2d66, 0x8b29, 0x7636, 0x1, 0x0);
        gbc.writeMem(0x1016, { 0x2f });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x3165, gbc.sp());
        EXPECT(0x1017, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 024C
        gbc.setState(0x8bff, 0x55e1, 0x1fc0, 0x1ffe, 0xaab3, 0x8301, 0x1, 0x0);
        gbc.writeMem(0x8bff, { 0x2f });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x55e1, gbc.sp());
        EXPECT(0x8c00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8bff));
        // 2F 024D
        gbc.setState(0xb62a, 0xe0b3, 0xa200, 0x6798, 0x7344, 0xbf80, 0x1, 0x0);
        gbc.writeMem(0xb62a, { 0x2f });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xe0b3, gbc.sp());
        EXPECT(0xb62b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xb62a));
        // 2F 024E
        gbc.setState(0x235a, 0x7513, 0xcc30, 0xcb71, 0x6c6, 0x9864, 0x1, 0x1);
        gbc.writeMem(0x235a, { 0x2f });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x7513, gbc.sp());
        EXPECT(0x235b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 024F
        gbc.setState(0x4ff3, 0x44b1, 0x9330, 0x8829, 0xb02f, 0x8278, 0x0, 0x1);
        gbc.writeMem(0x4ff3, { 0x2f });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x44b1, gbc.sp());
        EXPECT(0x4ff4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0250
        gbc.setState(0xe3dd, 0x1b87, 0x96e0, 0xc603, 0x7506, 0xb5ab, 0x0, 0x1);
        gbc.writeMem(0xe3dd, { 0x2f });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x1b87, gbc.sp());
        EXPECT(0xe3de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xe3dd));
        // 2F 0251
        gbc.setState(0x19a4, 0x22f6, 0xdcc0, 0x65e8, 0xe7be, 0xbec0, 0x1, 0x1);
        gbc.writeMem(0x19a4, { 0x2f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x22f6, gbc.sp());
        EXPECT(0x19a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0252
        gbc.setState(0x3ce8, 0x5fc4, 0xd150, 0xfad0, 0x2d73, 0x65aa, 0x0, 0x0);
        gbc.writeMem(0x3ce8, { 0x2f });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x5fc4, gbc.sp());
        EXPECT(0x3ce9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0253
        gbc.setState(0x624c, 0x6291, 0x2460, 0x7db6, 0xf4ec, 0xa6e2, 0x0, 0x0);
        gbc.writeMem(0x624c, { 0x2f });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x6291, gbc.sp());
        EXPECT(0x624d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0254
        gbc.setState(0x62d4, 0x3175, 0x4ad0, 0x48f5, 0x2567, 0xb68d, 0x0, 0x0);
        gbc.writeMem(0x62d4, { 0x2f });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x3175, gbc.sp());
        EXPECT(0x62d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0255
        gbc.setState(0x32ff, 0x57b6, 0x5610, 0xdc18, 0x8d57, 0xbc1d, 0x1, 0x0);
        gbc.writeMem(0x32ff, { 0x2f });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x57b6, gbc.sp());
        EXPECT(0x3300, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0256
        gbc.setState(0x687d, 0x2998, 0x8ef0, 0xc95c, 0xa431, 0x827, 0x1, 0x1);
        gbc.writeMem(0x687d, { 0x2f });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x2998, gbc.sp());
        EXPECT(0x687e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0257
        gbc.setState(0x19f, 0xb8b, 0xc290, 0xfe5d, 0x3c84, 0x9cef, 0x0, 0x0);
        gbc.writeMem(0x19f, { 0x2f });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xb8b, gbc.sp());
        EXPECT(0x1a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0258
        gbc.setState(0x46a, 0x64ec, 0xeaa0, 0x6e5d, 0x7388, 0xe545, 0x0, 0x1);
        gbc.writeMem(0x46a, { 0x2f });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x64ec, gbc.sp());
        EXPECT(0x46b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0259
        gbc.setState(0x8b, 0x1d58, 0x2c20, 0x67db, 0xe1e2, 0x9a13, 0x0, 0x0);
        gbc.writeMem(0x8b, { 0x2f });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x1d58, gbc.sp());
        EXPECT(0x8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 025A
        gbc.setState(0x627d, 0xcf16, 0x8f30, 0x61ad, 0x9060, 0xa6a5, 0x1, 0x1);
        gbc.writeMem(0x627d, { 0x2f });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xcf16, gbc.sp());
        EXPECT(0x627e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 025B
        gbc.setState(0xcffe, 0xf201, 0x26e0, 0x8187, 0x8a77, 0xcc61, 0x0, 0x0);
        gbc.writeMem(0xcffe, { 0x2f });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xf201, gbc.sp());
        EXPECT(0xcfff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xcffe));
        // 2F 025C
        gbc.setState(0xa61e, 0xe6ee, 0x8e50, 0x7043, 0x1df3, 0x4fb6, 0x0, 0x0);
        gbc.writeMem(0xa61e, { 0x2f });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xe6ee, gbc.sp());
        EXPECT(0xa61f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xa61e));
        // 2F 025D
        gbc.setState(0xbed5, 0xa1c1, 0xa290, 0x38b2, 0x8c6c, 0xaa8d, 0x0, 0x1);
        gbc.writeMem(0xbed5, { 0x2f });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xa1c1, gbc.sp());
        EXPECT(0xbed6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xbed5));
        // 2F 025E
        gbc.setState(0xd883, 0xba7b, 0x930, 0xf259, 0xaf79, 0x5e0b, 0x0, 0x0);
        gbc.writeMem(0xd883, { 0x2f });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xba7b, gbc.sp());
        EXPECT(0xd884, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xd883));
        // 2F 0260
        gbc.setState(0x3216, 0xda4b, 0x8600, 0xf82e, 0xd3ed, 0x6b29, 0x1, 0x1);
        gbc.writeMem(0x3216, { 0x2f });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xda4b, gbc.sp());
        EXPECT(0x3217, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0261
        gbc.setState(0xa0d3, 0x8041, 0x3f10, 0x23c8, 0x3d3d, 0x3d1f, 0x0, 0x1);
        gbc.writeMem(0xa0d3, { 0x2f });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x8041, gbc.sp());
        EXPECT(0xa0d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xa0d3));
        // 2F 0262
        gbc.setState(0x4427, 0xbde1, 0xda50, 0x60ad, 0xa1dc, 0x22a2, 0x0, 0x0);
        gbc.writeMem(0x4427, { 0x2f });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xbde1, gbc.sp());
        EXPECT(0x4428, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0263
        gbc.setState(0x318a, 0x3fe1, 0x91b0, 0x6c0e, 0x87de, 0x4d60, 0x1, 0x1);
        gbc.writeMem(0x318a, { 0x2f });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x3fe1, gbc.sp());
        EXPECT(0x318b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0264
        gbc.setState(0xd05a, 0x2b3b, 0xc520, 0xab5b, 0x6590, 0x964b, 0x0, 0x0);
        gbc.writeMem(0xd05a, { 0x2f });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x2b3b, gbc.sp());
        EXPECT(0xd05b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xd05a));
        // 2F 0266
        gbc.setState(0xc70a, 0x752, 0x1a0, 0x487a, 0xd861, 0x218e, 0x0, 0x1);
        gbc.writeMem(0xc70a, { 0x2f });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x752, gbc.sp());
        EXPECT(0xc70b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xc70a));
        // 2F 0267
        gbc.setState(0x18b7, 0x6f23, 0x6fe0, 0x97b6, 0xe259, 0xf251, 0x0, 0x0);
        gbc.writeMem(0x18b7, { 0x2f });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x6f23, gbc.sp());
        EXPECT(0x18b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0268
        gbc.setState(0xcf1e, 0x7f2a, 0x3950, 0xd3b4, 0x9f82, 0x9880, 0x0, 0x1);
        gbc.writeMem(0xcf1e, { 0x2f });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x7f2a, gbc.sp());
        EXPECT(0xcf1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xcf1e));
        // 2F 0269
        gbc.setState(0x9d39, 0xf834, 0xf050, 0x6557, 0x6076, 0x14a4, 0x0, 0x0);
        gbc.writeMem(0x9d39, { 0x2f });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xf834, gbc.sp());
        EXPECT(0x9d3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x9d39));
        // 2F 026A
        gbc.setState(0x6762, 0xa242, 0x8500, 0xd1b0, 0xd0c, 0x9b61, 0x0, 0x0);
        gbc.writeMem(0x6762, { 0x2f });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xa242, gbc.sp());
        EXPECT(0x6763, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 026B
        gbc.setState(0x870e, 0x8aa6, 0x6d40, 0xb821, 0xd946, 0x2b0f, 0x0, 0x0);
        gbc.writeMem(0x870e, { 0x2f });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x8aa6, gbc.sp());
        EXPECT(0x870f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x870e));
        // 2F 026C
        gbc.setState(0x4c2c, 0xe017, 0x8b20, 0x434f, 0xc93c, 0x7b40, 0x0, 0x0);
        gbc.writeMem(0x4c2c, { 0x2f });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe017, gbc.sp());
        EXPECT(0x4c2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 026D
        gbc.setState(0x3d33, 0x1c94, 0x2600, 0x6524, 0x4e09, 0x4ac8, 0x1, 0x1);
        gbc.writeMem(0x3d33, { 0x2f });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x1c94, gbc.sp());
        EXPECT(0x3d34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 026E
        gbc.setState(0x6184, 0xb68, 0xfd90, 0x6997, 0xbf01, 0xdef6, 0x0, 0x0);
        gbc.writeMem(0x6184, { 0x2f });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xb68, gbc.sp());
        EXPECT(0x6185, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 026F
        gbc.setState(0xe061, 0x9eb1, 0xe2c0, 0xa474, 0x9989, 0xd5a6, 0x1, 0x0);
        gbc.writeMem(0xe061, { 0x2f });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x9eb1, gbc.sp());
        EXPECT(0xe062, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xe061));
        // 2F 0270
        gbc.setState(0xd542, 0x14eb, 0xe100, 0x1828, 0x1005, 0x8529, 0x1, 0x1);
        gbc.writeMem(0xd542, { 0x2f });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x14eb, gbc.sp());
        EXPECT(0xd543, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xd542));
        // 2F 0272
        gbc.setState(0x4d3e, 0x692b, 0x4ec0, 0x2f40, 0x9c18, 0xd3b0, 0x0, 0x1);
        gbc.writeMem(0x4d3e, { 0x2f });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x692b, gbc.sp());
        EXPECT(0x4d3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0273
        gbc.setState(0x40bf, 0x430c, 0xf5b0, 0x3ec7, 0x3012, 0x95a8, 0x1, 0x1);
        gbc.writeMem(0x40bf, { 0x2f });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x430c, gbc.sp());
        EXPECT(0x40c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0274
        gbc.setState(0xe5bc, 0x49f2, 0x8590, 0xcf28, 0x3311, 0x3125, 0x1, 0x1);
        gbc.writeMem(0xe5bc, { 0x2f });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x49f2, gbc.sp());
        EXPECT(0xe5bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xe5bc));
        // 2F 0275
        gbc.setState(0xdb9e, 0x1a7e, 0x1ad0, 0x1de4, 0xb33c, 0xf757, 0x1, 0x0);
        gbc.writeMem(0xdb9e, { 0x2f });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x1a7e, gbc.sp());
        EXPECT(0xdb9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xdb9e));
        // 2F 0276
        gbc.setState(0x3db7, 0x2cf5, 0x4e30, 0x17d6, 0xfe25, 0x642f, 0x0, 0x0);
        gbc.writeMem(0x3db7, { 0x2f });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x2cf5, gbc.sp());
        EXPECT(0x3db8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0277
        gbc.setState(0x2534, 0xffd3, 0xa7c0, 0x8aec, 0xc434, 0xb46f, 0x0, 0x1);
        gbc.writeMem(0x2534, { 0x2f });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xffd3, gbc.sp());
        EXPECT(0x2535, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0278
        gbc.setState(0xe696, 0x6384, 0xa4d0, 0x3e40, 0xc9be, 0x5e64, 0x1, 0x0);
        gbc.writeMem(0xe696, { 0x2f });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x6384, gbc.sp());
        EXPECT(0xe697, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xe696));
        // 2F 0279
        gbc.setState(0xb9e5, 0xc44a, 0x2b00, 0x2399, 0x6255, 0x6f9a, 0x1, 0x1);
        gbc.writeMem(0xb9e5, { 0x2f });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xc44a, gbc.sp());
        EXPECT(0xb9e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xb9e5));
        // 2F 027A
        gbc.setState(0xef2c, 0x123c, 0x23f0, 0x42d2, 0x5aaa, 0x454a, 0x1, 0x1);
        gbc.writeMem(0xef2c, { 0x2f });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x123c, gbc.sp());
        EXPECT(0xef2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xef2c));
        // 2F 027B
        gbc.setState(0x104, 0x5592, 0x2ef0, 0xffa3, 0xab91, 0xbe9e, 0x0, 0x0);
        gbc.writeMem(0x104, { 0x2f });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x5592, gbc.sp());
        EXPECT(0x105, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 027C
        gbc.setState(0x9d1, 0xd1e0, 0xd9c0, 0x682, 0xa99e, 0x6c7a, 0x1, 0x0);
        gbc.writeMem(0x9d1, { 0x2f });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xd1e0, gbc.sp());
        EXPECT(0x9d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 027D
        gbc.setState(0xc5b2, 0x16c9, 0xe0b0, 0x3486, 0x103f, 0x1a63, 0x1, 0x0);
        gbc.writeMem(0xc5b2, { 0x2f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x16c9, gbc.sp());
        EXPECT(0xc5b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xc5b2));
        // 2F 027F
        gbc.setState(0xe6d5, 0x625, 0x84f0, 0x6396, 0x11f5, 0x2e1e, 0x0, 0x1);
        gbc.writeMem(0xe6d5, { 0x2f });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x625, gbc.sp());
        EXPECT(0xe6d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xe6d5));
        // 2F 0280
        gbc.setState(0x9e94, 0xf04c, 0x1b10, 0x2f14, 0x337f, 0x14a2, 0x0, 0x0);
        gbc.writeMem(0x9e94, { 0x2f });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xf04c, gbc.sp());
        EXPECT(0x9e95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x9e94));
        // 2F 0281
        gbc.setState(0x5da, 0xabe6, 0x1ec0, 0x5dbb, 0xe9fa, 0x3b5d, 0x1, 0x1);
        gbc.writeMem(0x5da, { 0x2f });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xabe6, gbc.sp());
        EXPECT(0x5db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0282
        gbc.setState(0xa104, 0x1c6f, 0xf6e0, 0x988d, 0x5797, 0xf12, 0x1, 0x1);
        gbc.writeMem(0xa104, { 0x2f });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x1c6f, gbc.sp());
        EXPECT(0xa105, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xa104));
        // 2F 0283
        gbc.setState(0x4c97, 0x52b7, 0xb10, 0xe50f, 0xce9e, 0xa82f, 0x1, 0x0);
        gbc.writeMem(0x4c97, { 0x2f });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x52b7, gbc.sp());
        EXPECT(0x4c98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0284
        gbc.setState(0x9f5f, 0xcd24, 0xc2a0, 0x348f, 0x62b6, 0x8918, 0x0, 0x1);
        gbc.writeMem(0x9f5f, { 0x2f });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xcd24, gbc.sp());
        EXPECT(0x9f60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x9f5f));
        // 2F 0285
        gbc.setState(0x4e9e, 0x4de9, 0x14d0, 0xcb18, 0x8cce, 0xc260, 0x0, 0x1);
        gbc.writeMem(0x4e9e, { 0x2f });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x4de9, gbc.sp());
        EXPECT(0x4e9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0286
        gbc.setState(0x8d1, 0xd8f9, 0xd980, 0xfc47, 0x6920, 0xf19b, 0x0, 0x0);
        gbc.writeMem(0x8d1, { 0x2f });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xd8f9, gbc.sp());
        EXPECT(0x8d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0287
        gbc.setState(0x77b3, 0xdb39, 0x2ac0, 0xf00a, 0x14a2, 0xcded, 0x0, 0x1);
        gbc.writeMem(0x77b3, { 0x2f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xdb39, gbc.sp());
        EXPECT(0x77b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0288
        gbc.setState(0xe63f, 0xfcd8, 0xfa40, 0x9d78, 0xc423, 0xbe99, 0x0, 0x1);
        gbc.writeMem(0xe63f, { 0x2f });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xfcd8, gbc.sp());
        EXPECT(0xe640, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xe63f));
        // 2F 0289
        gbc.setState(0x935d, 0x1761, 0x9910, 0x9820, 0xb690, 0x98e7, 0x1, 0x1);
        gbc.writeMem(0x935d, { 0x2f });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x1761, gbc.sp());
        EXPECT(0x935e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x935d));
        // 2F 028A
        gbc.setState(0xbbda, 0x7319, 0xb8f0, 0xf8c0, 0x445c, 0x6930, 0x0, 0x0);
        gbc.writeMem(0xbbda, { 0x2f });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x7319, gbc.sp());
        EXPECT(0xbbdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xbbda));
        // 2F 028B
        gbc.setState(0xdbfd, 0xa84a, 0x6070, 0x7776, 0x2e10, 0x31e9, 0x0, 0x0);
        gbc.writeMem(0xdbfd, { 0x2f });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa84a, gbc.sp());
        EXPECT(0xdbfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xdbfd));
        // 2F 028C
        gbc.setState(0x1c07, 0x49c3, 0xa870, 0xa33, 0xce3e, 0xbcfd, 0x1, 0x1);
        gbc.writeMem(0x1c07, { 0x2f });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x49c3, gbc.sp());
        EXPECT(0x1c08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 028D
        gbc.setState(0x14b9, 0x67ad, 0x8a30, 0x6809, 0xa798, 0x78c, 0x0, 0x1);
        gbc.writeMem(0x14b9, { 0x2f });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x67ad, gbc.sp());
        EXPECT(0x14ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 028E
        gbc.setState(0xed9f, 0xd7f7, 0x55c0, 0x610, 0x88b, 0x6fc1, 0x0, 0x0);
        gbc.writeMem(0xed9f, { 0x2f });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xd7f7, gbc.sp());
        EXPECT(0xeda0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xed9f));
        // 2F 028F
        gbc.setState(0x9ae6, 0x870f, 0x2f10, 0x4683, 0x6df4, 0x6d76, 0x1, 0x1);
        gbc.writeMem(0x9ae6, { 0x2f });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x870f, gbc.sp());
        EXPECT(0x9ae7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x9ae6));
        // 2F 0290
        gbc.setState(0xb61f, 0x5671, 0xab10, 0xa8ea, 0x468c, 0xc17c, 0x1, 0x1);
        gbc.writeMem(0xb61f, { 0x2f });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x5671, gbc.sp());
        EXPECT(0xb620, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xb61f));
        // 2F 0291
        gbc.setState(0x54b6, 0xd2eb, 0x6160, 0xa35d, 0x4a39, 0x471d, 0x1, 0x1);
        gbc.writeMem(0x54b6, { 0x2f });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xd2eb, gbc.sp());
        EXPECT(0x54b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0292
        gbc.setState(0x7166, 0x2431, 0x5580, 0xd176, 0x802d, 0x2c5a, 0x1, 0x0);
        gbc.writeMem(0x7166, { 0x2f });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x2431, gbc.sp());
        EXPECT(0x7167, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0293
        gbc.setState(0x2383, 0x857b, 0x930, 0x5c9d, 0xb8f3, 0x4a0d, 0x0, 0x1);
        gbc.writeMem(0x2383, { 0x2f });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x857b, gbc.sp());
        EXPECT(0x2384, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0294
        gbc.setState(0xe1f5, 0xd7c1, 0x9fc0, 0x8545, 0x1c5b, 0xaec1, 0x0, 0x1);
        gbc.writeMem(0xe1f5, { 0x2f });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xd7c1, gbc.sp());
        EXPECT(0xe1f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xe1f5));
        // 2F 0295
        gbc.setState(0xefa2, 0x3cb2, 0x6de0, 0x9518, 0xb67b, 0xaf9d, 0x0, 0x1);
        gbc.writeMem(0xefa2, { 0x2f });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x3cb2, gbc.sp());
        EXPECT(0xefa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xefa2));
        // 2F 0296
        gbc.setState(0xe3c6, 0x4de9, 0x2360, 0x2d4, 0x8d44, 0xe4f3, 0x0, 0x1);
        gbc.writeMem(0xe3c6, { 0x2f });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x4de9, gbc.sp());
        EXPECT(0xe3c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xe3c6));
        // 2F 0297
        gbc.setState(0x4b2e, 0xe17c, 0x90d0, 0xb2fd, 0xe917, 0x8042, 0x0, 0x0);
        gbc.writeMem(0x4b2e, { 0x2f });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xe17c, gbc.sp());
        EXPECT(0x4b2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0298
        gbc.setState(0xee0c, 0xd03f, 0x81b0, 0x77ef, 0xac9e, 0xd158, 0x1, 0x0);
        gbc.writeMem(0xee0c, { 0x2f });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xd03f, gbc.sp());
        EXPECT(0xee0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xee0c));
        // 2F 0299
        gbc.setState(0xc4d8, 0xc70b, 0xc0a0, 0x9868, 0x6e63, 0x6cb4, 0x0, 0x1);
        gbc.writeMem(0xc4d8, { 0x2f });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xc70b, gbc.sp());
        EXPECT(0xc4d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xc4d8));
        // 2F 029A
        gbc.setState(0x6b29, 0x71e4, 0xdcd0, 0xbfc9, 0x4b59, 0xc2f7, 0x1, 0x1);
        gbc.writeMem(0x6b29, { 0x2f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x71e4, gbc.sp());
        EXPECT(0x6b2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 029B
        gbc.setState(0x1eb5, 0x5a49, 0xaaf0, 0xbb63, 0x945b, 0x92fe, 0x1, 0x0);
        gbc.writeMem(0x1eb5, { 0x2f });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x5a49, gbc.sp());
        EXPECT(0x1eb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 029C
        gbc.setState(0x885b, 0x27e0, 0x5650, 0x4828, 0x36eb, 0x7bf6, 0x0, 0x0);
        gbc.writeMem(0x885b, { 0x2f });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x27e0, gbc.sp());
        EXPECT(0x885c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x885b));
        // 2F 029D
        gbc.setState(0xe518, 0x977, 0x4a20, 0xf3ec, 0x135, 0xfe04, 0x0, 0x1);
        gbc.writeMem(0xe518, { 0x2f });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x977, gbc.sp());
        EXPECT(0xe519, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xe518));
        // 2F 029E
        gbc.setState(0x47a2, 0x32ca, 0x74c0, 0x7d9, 0x5f17, 0xab62, 0x0, 0x0);
        gbc.writeMem(0x47a2, { 0x2f });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x32ca, gbc.sp());
        EXPECT(0x47a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 029F
        gbc.setState(0xabb6, 0x92f0, 0x9730, 0xc5da, 0x291e, 0xa8dc, 0x0, 0x0);
        gbc.writeMem(0xabb6, { 0x2f });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x92f0, gbc.sp());
        EXPECT(0xabb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xabb6));
        // 2F 02A0
        gbc.setState(0xc566, 0xa97a, 0x4d40, 0xb75f, 0x4646, 0x624c, 0x0, 0x0);
        gbc.writeMem(0xc566, { 0x2f });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xa97a, gbc.sp());
        EXPECT(0xc567, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xc566));
        // 2F 02A1
        gbc.setState(0xb6f1, 0x2c77, 0x1f60, 0x32f7, 0xdbcb, 0x366, 0x1, 0x0);
        gbc.writeMem(0xb6f1, { 0x2f });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x2c77, gbc.sp());
        EXPECT(0xb6f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xb6f1));
        // 2F 02A2
        gbc.setState(0xb673, 0x8a6e, 0x7860, 0x874e, 0xbe36, 0x6579, 0x1, 0x0);
        gbc.writeMem(0xb673, { 0x2f });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x8a6e, gbc.sp());
        EXPECT(0xb674, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xb673));
        // 2F 02A3
        gbc.setState(0xb76f, 0x66bf, 0xbe20, 0x46ec, 0x8884, 0x3d01, 0x1, 0x1);
        gbc.writeMem(0xb76f, { 0x2f });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x66bf, gbc.sp());
        EXPECT(0xb770, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xb76f));
        // 2F 02A4
        gbc.setState(0xc972, 0xc22f, 0xbcf0, 0xa02d, 0xd402, 0xb050, 0x0, 0x0);
        gbc.writeMem(0xc972, { 0x2f });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xc22f, gbc.sp());
        EXPECT(0xc973, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xc972));
        // 2F 02A5
        gbc.setState(0x8caf, 0x62eb, 0x12c0, 0x9b23, 0x4a3e, 0xbd08, 0x0, 0x1);
        gbc.writeMem(0x8caf, { 0x2f });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x62eb, gbc.sp());
        EXPECT(0x8cb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8caf));
        // 2F 02A6
        gbc.setState(0x8d77, 0xf590, 0x8690, 0x35d6, 0x9ad8, 0x331e, 0x1, 0x0);
        gbc.writeMem(0x8d77, { 0x2f });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xf590, gbc.sp());
        EXPECT(0x8d78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8d77));
        // 2F 02A7
        gbc.setState(0x1553, 0x5c89, 0x6d10, 0x389, 0xb59e, 0xed6c, 0x0, 0x0);
        gbc.writeMem(0x1553, { 0x2f });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x5c89, gbc.sp());
        EXPECT(0x1554, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 02A8
        gbc.setState(0x4756, 0x3c8e, 0xf580, 0x771, 0xcbac, 0x56fe, 0x1, 0x1);
        gbc.writeMem(0x4756, { 0x2f });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x3c8e, gbc.sp());
        EXPECT(0x4757, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 02A9
        gbc.setState(0xb0c, 0xb0f6, 0xb6b0, 0x583, 0xf05e, 0x57d1, 0x0, 0x0);
        gbc.writeMem(0xb0c, { 0x2f });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xb0f6, gbc.sp());
        EXPECT(0xb0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 02AA
        gbc.setState(0x8473, 0x20e8, 0x3150, 0x7680, 0xf307, 0xe745, 0x1, 0x1);
        gbc.writeMem(0x8473, { 0x2f });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x20e8, gbc.sp());
        EXPECT(0x8474, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8473));
        // 2F 02AB
        gbc.setState(0x960e, 0x3672, 0xac90, 0xf581, 0xc5f6, 0xa8b6, 0x0, 0x0);
        gbc.writeMem(0x960e, { 0x2f });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x3672, gbc.sp());
        EXPECT(0x960f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x960e));
        // 2F 02AC
        gbc.setState(0xa3ad, 0xd2b6, 0xba50, 0xac74, 0xbf68, 0x4ff4, 0x1, 0x1);
        gbc.writeMem(0xa3ad, { 0x2f });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xd2b6, gbc.sp());
        EXPECT(0xa3ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xa3ad));
        // 2F 02AD
        gbc.setState(0x384c, 0x4a4d, 0xb770, 0x8c50, 0xe887, 0x3334, 0x1, 0x0);
        gbc.writeMem(0x384c, { 0x2f });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x4a4d, gbc.sp());
        EXPECT(0x384d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 02AE
        gbc.setState(0x941, 0x55eb, 0x8490, 0xe395, 0x618f, 0x8b0c, 0x1, 0x0);
        gbc.writeMem(0x941, { 0x2f });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x55eb, gbc.sp());
        EXPECT(0x942, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 02AF
        gbc.setState(0xc52d, 0x864c, 0x2310, 0x24e2, 0x52e2, 0x6ff3, 0x0, 0x0);
        gbc.writeMem(0xc52d, { 0x2f });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x864c, gbc.sp());
        EXPECT(0xc52e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xc52d));
        // 2F 02B0
        gbc.setState(0x226c, 0xdc1c, 0xd7c0, 0x3761, 0xf253, 0xb5ee, 0x0, 0x1);
        gbc.writeMem(0x226c, { 0x2f });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xdc1c, gbc.sp());
        EXPECT(0x226d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 02B1
        gbc.setState(0x383f, 0x615b, 0x4f40, 0x6f66, 0x1c62, 0xd0bb, 0x1, 0x0);
        gbc.writeMem(0x383f, { 0x2f });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x615b, gbc.sp());
        EXPECT(0x3840, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 02B2
        gbc.setState(0xd257, 0xf056, 0x1f10, 0xb07f, 0xd1bc, 0xfff5, 0x1, 0x0);
        gbc.writeMem(0xd257, { 0x2f });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xf056, gbc.sp());
        EXPECT(0xd258, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xd257));
        // 2F 02B3
        gbc.setState(0x8c0a, 0xc787, 0xef50, 0xc11b, 0x7a6f, 0xcbd3, 0x1, 0x0);
        gbc.writeMem(0x8c0a, { 0x2f });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xc787, gbc.sp());
        EXPECT(0x8c0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8c0a));
        // 2F 02B4
        gbc.setState(0x1529, 0x5aef, 0xc320, 0x3945, 0x30b7, 0xf30b, 0x1, 0x1);
        gbc.writeMem(0x1529, { 0x2f });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x5aef, gbc.sp());
        EXPECT(0x152a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 02B5
        gbc.setState(0x4eab, 0x559f, 0x43b0, 0xae32, 0x9ec, 0x5204, 0x0, 0x1);
        gbc.writeMem(0x4eab, { 0x2f });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x559f, gbc.sp());
        EXPECT(0x4eac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 02B8
        gbc.setState(0x698b, 0xb07c, 0x11e0, 0xcf78, 0x29f4, 0xcf96, 0x1, 0x1);
        gbc.writeMem(0x698b, { 0x2f });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xb07c, gbc.sp());
        EXPECT(0x698c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 02B9
        gbc.setState(0x6607, 0xe846, 0xd8d0, 0x546b, 0x23cb, 0x8af8, 0x1, 0x0);
        gbc.writeMem(0x6607, { 0x2f });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe846, gbc.sp());
        EXPECT(0x6608, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 02BA
        gbc.setState(0x2f11, 0xe055, 0x5550, 0x430c, 0xedca, 0xd9c2, 0x1, 0x1);
        gbc.writeMem(0x2f11, { 0x2f });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xe055, gbc.sp());
        EXPECT(0x2f12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 02BB
        gbc.setState(0x60fd, 0x6bfe, 0x50e0, 0xab07, 0x5d43, 0x5302, 0x1, 0x0);
        gbc.writeMem(0x60fd, { 0x2f });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x6bfe, gbc.sp());
        EXPECT(0x60fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 02BC
        gbc.setState(0x55af, 0x50ff, 0xf8d0, 0x4365, 0xf880, 0x1a9e, 0x0, 0x1);
        gbc.writeMem(0x55af, { 0x2f });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x50ff, gbc.sp());
        EXPECT(0x55b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 02BD
        gbc.setState(0x25fa, 0xf757, 0xfd60, 0xbe0d, 0xf863, 0x557f, 0x0, 0x0);
        gbc.writeMem(0x25fa, { 0x2f });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xf757, gbc.sp());
        EXPECT(0x25fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 02BE
        gbc.setState(0x30fa, 0x3cf6, 0x4b70, 0xcf29, 0xda74, 0xf11, 0x0, 0x0);
        gbc.writeMem(0x30fa, { 0x2f });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x3cf6, gbc.sp());
        EXPECT(0x30fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 02C0
        gbc.setState(0x89c9, 0x4fab, 0xc920, 0x86a0, 0x4873, 0x2dc1, 0x1, 0x1);
        gbc.writeMem(0x89c9, { 0x2f });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x4fab, gbc.sp());
        EXPECT(0x89ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x89c9));
        // 2F 02C1
        gbc.setState(0x4042, 0x7620, 0x25e0, 0x4f69, 0x575d, 0x6374, 0x0, 0x1);
        gbc.writeMem(0x4042, { 0x2f });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x7620, gbc.sp());
        EXPECT(0x4043, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 02C2
        gbc.setState(0xd043, 0xbd38, 0x3f90, 0xf3b4, 0xc312, 0x2550, 0x1, 0x1);
        gbc.writeMem(0xd043, { 0x2f });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xbd38, gbc.sp());
        EXPECT(0xd044, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xd043));
        // 2F 02C3
        gbc.setState(0xdd79, 0x97a1, 0xf680, 0xd053, 0x4937, 0x6dc5, 0x0, 0x0);
        gbc.writeMem(0xdd79, { 0x2f });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x97a1, gbc.sp());
        EXPECT(0xdd7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xdd79));
        // 2F 02C4
        gbc.setState(0x2e54, 0x259c, 0x7d90, 0x1427, 0x8eec, 0x5d1b, 0x0, 0x0);
        gbc.writeMem(0x2e54, { 0x2f });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x259c, gbc.sp());
        EXPECT(0x2e55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 02C5
        gbc.setState(0x9002, 0x3bef, 0x28f0, 0x698a, 0xf225, 0x91c9, 0x1, 0x0);
        gbc.writeMem(0x9002, { 0x2f });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x3bef, gbc.sp());
        EXPECT(0x9003, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x9002));
        // 2F 02C6
        gbc.setState(0xbfa6, 0x4896, 0xb650, 0x893, 0x9cc9, 0xb449, 0x0, 0x1);
        gbc.writeMem(0xbfa6, { 0x2f });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x4896, gbc.sp());
        EXPECT(0xbfa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xbfa6));
        // 2F 02C7
        gbc.setState(0x2ff3, 0x5d2, 0x8120, 0xf110, 0x7c61, 0xbb45, 0x0, 0x1);
        gbc.writeMem(0x2ff3, { 0x2f });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x5d2, gbc.sp());
        EXPECT(0x2ff4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 02C8
        gbc.setState(0x9f1d, 0x2259, 0x2a70, 0xb1e2, 0x60dd, 0xe0de, 0x0, 0x0);
        gbc.writeMem(0x9f1d, { 0x2f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x2259, gbc.sp());
        EXPECT(0x9f1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x9f1d));
        // 2F 02C9
        gbc.setState(0x4ee7, 0x7d89, 0x340, 0x39bf, 0x23ae, 0x4119, 0x1, 0x0);
        gbc.writeMem(0x4ee7, { 0x2f });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x7d89, gbc.sp());
        EXPECT(0x4ee8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 02CA
        gbc.setState(0xbd7e, 0xfcde, 0x5040, 0x9362, 0xfc50, 0x67dc, 0x1, 0x0);
        gbc.writeMem(0xbd7e, { 0x2f });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xfcde, gbc.sp());
        EXPECT(0xbd7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xbd7e));
        // 2F 02CB
        gbc.setState(0xa3ec, 0x91e2, 0x3dc0, 0x2563, 0xa8a0, 0x9f38, 0x0, 0x1);
        gbc.writeMem(0xa3ec, { 0x2f });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x91e2, gbc.sp());
        EXPECT(0xa3ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xa3ec));
        // 2F 02CC
        gbc.setState(0x9c14, 0x1ed1, 0x6830, 0xd99f, 0xfb42, 0xc90c, 0x0, 0x0);
        gbc.writeMem(0x9c14, { 0x2f });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x1ed1, gbc.sp());
        EXPECT(0x9c15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x9c14));
        // 2F 02CD
        gbc.setState(0x73d0, 0xf8ea, 0xd380, 0xfa04, 0xdf20, 0x2d6b, 0x0, 0x1);
        gbc.writeMem(0x73d0, { 0x2f });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xf8ea, gbc.sp());
        EXPECT(0x73d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 02CE
        gbc.setState(0xd631, 0x9237, 0xb6a0, 0x8195, 0x3d1e, 0x3e9a, 0x0, 0x1);
        gbc.writeMem(0xd631, { 0x2f });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x9237, gbc.sp());
        EXPECT(0xd632, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xd631));
        // 2F 02CF
        gbc.setState(0xce5a, 0xbaa4, 0x2990, 0x8463, 0xd2e7, 0xfce2, 0x1, 0x0);
        gbc.writeMem(0xce5a, { 0x2f });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xbaa4, gbc.sp());
        EXPECT(0xce5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xce5a));
        // 2F 02D0
        gbc.setState(0x7a5b, 0xd5a1, 0xfab0, 0x1bd4, 0xa80, 0xc432, 0x1, 0x0);
        gbc.writeMem(0x7a5b, { 0x2f });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xd5a1, gbc.sp());
        EXPECT(0x7a5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 02D1
        gbc.setState(0x49ce, 0x6ffc, 0x5630, 0x9e5d, 0x490b, 0x26b0, 0x0, 0x1);
        gbc.writeMem(0x49ce, { 0x2f });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x6ffc, gbc.sp());
        EXPECT(0x49cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 02D2
        gbc.setState(0x3b7, 0x80d2, 0x7420, 0x1546, 0x8fc2, 0xb81, 0x1, 0x1);
        gbc.writeMem(0x3b7, { 0x2f });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x80d2, gbc.sp());
        EXPECT(0x3b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 02D3
        gbc.setState(0xd05e, 0x6ffc, 0xcbc0, 0xe288, 0x3220, 0xaa41, 0x0, 0x0);
        gbc.writeMem(0xd05e, { 0x2f });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x6ffc, gbc.sp());
        EXPECT(0xd05f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xd05e));
        // 2F 02D4
        gbc.setState(0xbd0e, 0xf6d1, 0x2ca0, 0xe8dd, 0x15c4, 0xae4f, 0x1, 0x1);
        gbc.writeMem(0xbd0e, { 0x2f });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xf6d1, gbc.sp());
        EXPECT(0xbd0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xbd0e));
        // 2F 02D5
        gbc.setState(0x698, 0x7a39, 0xb7f0, 0xd9e3, 0xe06d, 0xef8, 0x0, 0x1);
        gbc.writeMem(0x698, { 0x2f });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x7a39, gbc.sp());
        EXPECT(0x699, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 02D6
        gbc.setState(0x161a, 0xa29d, 0x51e0, 0x12fa, 0x212f, 0x8a8b, 0x0, 0x1);
        gbc.writeMem(0x161a, { 0x2f });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xa29d, gbc.sp());
        EXPECT(0x161b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 02D8
        gbc.setState(0x70d7, 0xf3bd, 0x4730, 0xd65, 0x2ed5, 0xb6a1, 0x1, 0x1);
        gbc.writeMem(0x70d7, { 0x2f });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xf3bd, gbc.sp());
        EXPECT(0x70d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 02D9
        gbc.setState(0x699, 0x7d57, 0xb2c0, 0x8ba6, 0x9ad9, 0x31a6, 0x1, 0x0);
        gbc.writeMem(0x699, { 0x2f });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x7d57, gbc.sp());
        EXPECT(0x69a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 02DA
        gbc.setState(0x16f5, 0x16e8, 0xe2d0, 0x77cc, 0xc101, 0x130a, 0x0, 0x1);
        gbc.writeMem(0x16f5, { 0x2f });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x16e8, gbc.sp());
        EXPECT(0x16f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 02DC
        gbc.setState(0x7950, 0xaba1, 0xedf0, 0x2316, 0x965e, 0xd71d, 0x1, 0x1);
        gbc.writeMem(0x7950, { 0x2f });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xaba1, gbc.sp());
        EXPECT(0x7951, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 02DD
        gbc.setState(0x62f3, 0xbffb, 0x6fa0, 0x9831, 0xdf2a, 0xda55, 0x0, 0x1);
        gbc.writeMem(0x62f3, { 0x2f });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xbffb, gbc.sp());
        EXPECT(0x62f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 02DE
        gbc.setState(0x71ec, 0xda0d, 0x4060, 0xda7d, 0xb0b, 0x178, 0x1, 0x1);
        gbc.writeMem(0x71ec, { 0x2f });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xda0d, gbc.sp());
        EXPECT(0x71ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 02DF
        gbc.setState(0xb06d, 0x6781, 0x5e50, 0xf028, 0x1e1a, 0x5fcb, 0x1, 0x0);
        gbc.writeMem(0xb06d, { 0x2f });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x6781, gbc.sp());
        EXPECT(0xb06e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xb06d));
        // 2F 02E0
        gbc.setState(0xf04, 0x44c8, 0xff60, 0x16b8, 0x2df1, 0x9841, 0x0, 0x1);
        gbc.writeMem(0xf04, { 0x2f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x44c8, gbc.sp());
        EXPECT(0xf05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 02E1
        gbc.setState(0xe599, 0x42df, 0x35d0, 0xbc56, 0xae39, 0xf1d3, 0x1, 0x1);
        gbc.writeMem(0xe599, { 0x2f });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x42df, gbc.sp());
        EXPECT(0xe59a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xe599));
        // 2F 02E2
        gbc.setState(0x6583, 0xf55f, 0xfb40, 0xfb46, 0x2c85, 0x68cc, 0x1, 0x0);
        gbc.writeMem(0x6583, { 0x2f });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xf55f, gbc.sp());
        EXPECT(0x6584, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 02E3
        gbc.setState(0xef5a, 0xec82, 0xd430, 0x7cb8, 0x61f6, 0x2afe, 0x1, 0x0);
        gbc.writeMem(0xef5a, { 0x2f });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xec82, gbc.sp());
        EXPECT(0xef5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xef5a));
        // 2F 02E4
        gbc.setState(0x58fa, 0x6d78, 0xd940, 0xb3d5, 0xcec7, 0x4975, 0x0, 0x1);
        gbc.writeMem(0x58fa, { 0x2f });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x6d78, gbc.sp());
        EXPECT(0x58fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 02E5
        gbc.setState(0xb8f7, 0xc198, 0x2f80, 0xe31e, 0x21bc, 0x7bbc, 0x0, 0x1);
        gbc.writeMem(0xb8f7, { 0x2f });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xc198, gbc.sp());
        EXPECT(0xb8f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xb8f7));
        // 2F 02E6
        gbc.setState(0x84f9, 0xa26a, 0x4370, 0x4640, 0x70ae, 0x832f, 0x0, 0x0);
        gbc.writeMem(0x84f9, { 0x2f });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xa26a, gbc.sp());
        EXPECT(0x84fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x84f9));
        // 2F 02E7
        gbc.setState(0x5b30, 0x8693, 0x3120, 0x10c5, 0x3943, 0x3510, 0x0, 0x0);
        gbc.writeMem(0x5b30, { 0x2f });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x8693, gbc.sp());
        EXPECT(0x5b31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 02E8
        gbc.setState(0x4204, 0x6029, 0x8cc0, 0x364e, 0x8225, 0x7133, 0x1, 0x1);
        gbc.writeMem(0x4204, { 0x2f });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x6029, gbc.sp());
        EXPECT(0x4205, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 02E9
        gbc.setState(0x21f9, 0x51a0, 0xef70, 0xb6ed, 0x3c6a, 0x992c, 0x0, 0x1);
        gbc.writeMem(0x21f9, { 0x2f });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x51a0, gbc.sp());
        EXPECT(0x21fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 02EA
        gbc.setState(0x50f8, 0x358a, 0xc110, 0xf6fb, 0xeadb, 0xc610, 0x0, 0x1);
        gbc.writeMem(0x50f8, { 0x2f });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x358a, gbc.sp());
        EXPECT(0x50f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 02EB
        gbc.setState(0xb268, 0xb580, 0x4ef0, 0xcf82, 0x404e, 0x2c9c, 0x1, 0x1);
        gbc.writeMem(0xb268, { 0x2f });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xb580, gbc.sp());
        EXPECT(0xb269, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xb268));
        // 2F 02EC
        gbc.setState(0xc21, 0x7b6f, 0xe0, 0xace9, 0xd323, 0xc1d0, 0x1, 0x1);
        gbc.writeMem(0xc21, { 0x2f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x7b6f, gbc.sp());
        EXPECT(0xc22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 02ED
        gbc.setState(0x466a, 0x366d, 0x8e00, 0x374e, 0x96fc, 0x31d2, 0x1, 0x1);
        gbc.writeMem(0x466a, { 0x2f });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x366d, gbc.sp());
        EXPECT(0x466b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 02EE
        gbc.setState(0x3cec, 0x372b, 0xfac0, 0x1603, 0x4132, 0xf087, 0x0, 0x1);
        gbc.writeMem(0x3cec, { 0x2f });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x372b, gbc.sp());
        EXPECT(0x3ced, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 02EF
        gbc.setState(0xe88d, 0xb731, 0xdc00, 0x54ff, 0x640, 0xc001, 0x0, 0x0);
        gbc.writeMem(0xe88d, { 0x2f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xb731, gbc.sp());
        EXPECT(0xe88e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xe88d));
        // 2F 02F0
        gbc.setState(0xa7c5, 0x5ea7, 0xe900, 0xe6d5, 0xe1ac, 0x3ec3, 0x0, 0x1);
        gbc.writeMem(0xa7c5, { 0x2f });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x5ea7, gbc.sp());
        EXPECT(0xa7c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xa7c5));
        // 2F 02F1
        gbc.setState(0x96bf, 0x49af, 0xec40, 0xb73f, 0x594a, 0x5ade, 0x0, 0x1);
        gbc.writeMem(0x96bf, { 0x2f });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x49af, gbc.sp());
        EXPECT(0x96c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x96bf));
        // 2F 02F2
        gbc.setState(0xb892, 0xae14, 0x8030, 0x1c48, 0xfc8e, 0xad83, 0x1, 0x1);
        gbc.writeMem(0xb892, { 0x2f });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xae14, gbc.sp());
        EXPECT(0xb893, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xb892));
        // 2F 02F3
        gbc.setState(0x381d, 0x3024, 0x1440, 0x938b, 0xf902, 0x324b, 0x1, 0x0);
        gbc.writeMem(0x381d, { 0x2f });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x3024, gbc.sp());
        EXPECT(0x381e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 02F4
        gbc.setState(0xe28c, 0x4401, 0x7700, 0x6602, 0x722d, 0xf03b, 0x0, 0x0);
        gbc.writeMem(0xe28c, { 0x2f });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x4401, gbc.sp());
        EXPECT(0xe28d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xe28c));
        // 2F 02F5
        gbc.setState(0x8b7b, 0x44ef, 0xaf00, 0x69a6, 0xdc48, 0x4b37, 0x0, 0x1);
        gbc.writeMem(0x8b7b, { 0x2f });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x44ef, gbc.sp());
        EXPECT(0x8b7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8b7b));
        // 2F 02F6
        gbc.setState(0x9e73, 0xa155, 0x5ab0, 0xea38, 0x78e0, 0x365a, 0x0, 0x0);
        gbc.writeMem(0x9e73, { 0x2f });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xa155, gbc.sp());
        EXPECT(0x9e74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x9e73));
        // 2F 02F7
        gbc.setState(0x7fb5, 0x9bb0, 0x5250, 0xd1f2, 0x8fd8, 0xf420, 0x0, 0x1);
        gbc.writeMem(0x7fb5, { 0x2f });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x9bb0, gbc.sp());
        EXPECT(0x7fb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 02F8
        gbc.setState(0x45f4, 0x9991, 0x62d0, 0x71e3, 0xed93, 0x7e94, 0x1, 0x0);
        gbc.writeMem(0x45f4, { 0x2f });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x9991, gbc.sp());
        EXPECT(0x45f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 02F9
        gbc.setState(0x998, 0x169b, 0x33b0, 0x9e27, 0x2d8c, 0x70a9, 0x1, 0x1);
        gbc.writeMem(0x998, { 0x2f });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x169b, gbc.sp());
        EXPECT(0x999, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 02FB
        gbc.setState(0x501a, 0x50f1, 0x9d10, 0xfc95, 0xca4d, 0xcb6e, 0x0, 0x1);
        gbc.writeMem(0x501a, { 0x2f });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x50f1, gbc.sp());
        EXPECT(0x501b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 02FC
        gbc.setState(0x1752, 0x86ac, 0x64c0, 0xe1cf, 0x1c28, 0xc90c, 0x0, 0x1);
        gbc.writeMem(0x1752, { 0x2f });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x86ac, gbc.sp());
        EXPECT(0x1753, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 02FE
        gbc.setState(0xec1f, 0x330f, 0x6a30, 0xade9, 0xa27c, 0x2252, 0x0, 0x1);
        gbc.writeMem(0xec1f, { 0x2f });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x330f, gbc.sp());
        EXPECT(0xec20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xec1f));
        // 2F 02FF
        gbc.setState(0x4ee6, 0xc10, 0x62b0, 0xd199, 0x6bb8, 0xfffb, 0x0, 0x0);
        gbc.writeMem(0x4ee6, { 0x2f });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xc10, gbc.sp());
        EXPECT(0x4ee7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0300
        gbc.setState(0xe57b, 0xe616, 0xdae0, 0x78dc, 0xc467, 0xb95c, 0x0, 0x1);
        gbc.writeMem(0xe57b, { 0x2f });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xe616, gbc.sp());
        EXPECT(0xe57c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xe57b));
        // 2F 0301
        gbc.setState(0xa243, 0x185b, 0x8830, 0x477b, 0x7691, 0x2f8d, 0x1, 0x1);
        gbc.writeMem(0xa243, { 0x2f });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x185b, gbc.sp());
        EXPECT(0xa244, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xa243));
        // 2F 0302
        gbc.setState(0x2d91, 0x3ba6, 0x4950, 0xbf5e, 0xc264, 0xbd1f, 0x1, 0x0);
        gbc.writeMem(0x2d91, { 0x2f });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x3ba6, gbc.sp());
        EXPECT(0x2d92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0303
        gbc.setState(0xba6a, 0xcd09, 0xa840, 0x3d1a, 0x7956, 0xc6ce, 0x0, 0x0);
        gbc.writeMem(0xba6a, { 0x2f });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xcd09, gbc.sp());
        EXPECT(0xba6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xba6a));
        // 2F 0304
        gbc.setState(0xe33c, 0x956b, 0x39b0, 0xbb96, 0xc4c2, 0x3c8c, 0x1, 0x1);
        gbc.writeMem(0xe33c, { 0x2f });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x956b, gbc.sp());
        EXPECT(0xe33d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xe33c));
        // 2F 0305
        gbc.setState(0x554f, 0x3dea, 0xf970, 0x6ebf, 0x7a38, 0xead3, 0x1, 0x1);
        gbc.writeMem(0x554f, { 0x2f });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x3dea, gbc.sp());
        EXPECT(0x5550, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0306
        gbc.setState(0x1b5b, 0x36b4, 0x90a0, 0x9b17, 0x5091, 0xb64e, 0x1, 0x0);
        gbc.writeMem(0x1b5b, { 0x2f });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x36b4, gbc.sp());
        EXPECT(0x1b5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0307
        gbc.setState(0x2a08, 0x8cc4, 0x3400, 0x4104, 0x337d, 0x7318, 0x1, 0x0);
        gbc.writeMem(0x2a08, { 0x2f });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x8cc4, gbc.sp());
        EXPECT(0x2a09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0308
        gbc.setState(0xd53a, 0x7bfe, 0x2150, 0x1ea0, 0x6042, 0x306d, 0x0, 0x1);
        gbc.writeMem(0xd53a, { 0x2f });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x7bfe, gbc.sp());
        EXPECT(0xd53b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xd53a));
        // 2F 0309
        gbc.setState(0xa704, 0x5a23, 0x880, 0xd632, 0x3ee5, 0x784f, 0x1, 0x1);
        gbc.writeMem(0xa704, { 0x2f });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x5a23, gbc.sp());
        EXPECT(0xa705, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xa704));
        // 2F 030A
        gbc.setState(0xef76, 0x5d39, 0x6710, 0x4cdd, 0xba35, 0x215a, 0x1, 0x0);
        gbc.writeMem(0xef76, { 0x2f });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x5d39, gbc.sp());
        EXPECT(0xef77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xef76));
        // 2F 030B
        gbc.setState(0xe164, 0xb7a4, 0x2a20, 0x6af6, 0x7e44, 0x3c7, 0x0, 0x0);
        gbc.writeMem(0xe164, { 0x2f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xb7a4, gbc.sp());
        EXPECT(0xe165, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xe164));
        // 2F 030C
        gbc.setState(0x256c, 0xc2ef, 0xe5a0, 0xa802, 0xe20, 0x9f11, 0x0, 0x1);
        gbc.writeMem(0x256c, { 0x2f });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xc2ef, gbc.sp());
        EXPECT(0x256d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 030D
        gbc.setState(0xa8b5, 0x5f03, 0x65d0, 0xe52f, 0xb8ba, 0x89a5, 0x0, 0x1);
        gbc.writeMem(0xa8b5, { 0x2f });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x5f03, gbc.sp());
        EXPECT(0xa8b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xa8b5));
        // 2F 030E
        gbc.setState(0x9d43, 0xed72, 0x1880, 0x3eee, 0x6637, 0x5f4a, 0x1, 0x0);
        gbc.writeMem(0x9d43, { 0x2f });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xed72, gbc.sp());
        EXPECT(0x9d44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x9d43));
        // 2F 030F
        gbc.setState(0x6087, 0x87f0, 0x2590, 0x30e1, 0x1a9b, 0x45de, 0x0, 0x1);
        gbc.writeMem(0x6087, { 0x2f });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x87f0, gbc.sp());
        EXPECT(0x6088, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0310
        gbc.setState(0x59f7, 0xa38e, 0x66c0, 0x9cfc, 0xfabd, 0xb0ae, 0x0, 0x0);
        gbc.writeMem(0x59f7, { 0x2f });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xa38e, gbc.sp());
        EXPECT(0x59f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0311
        gbc.setState(0x1d5d, 0x303a, 0xbf80, 0x6565, 0xafa, 0xe651, 0x0, 0x1);
        gbc.writeMem(0x1d5d, { 0x2f });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x303a, gbc.sp());
        EXPECT(0x1d5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0312
        gbc.setState(0x62b5, 0x2407, 0x2f90, 0x4c57, 0xd571, 0xd009, 0x0, 0x1);
        gbc.writeMem(0x62b5, { 0x2f });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x2407, gbc.sp());
        EXPECT(0x62b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0313
        gbc.setState(0x921d, 0x5edf, 0xda30, 0xc6f5, 0xd998, 0xf9a3, 0x0, 0x0);
        gbc.writeMem(0x921d, { 0x2f });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x5edf, gbc.sp());
        EXPECT(0x921e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x921d));
        // 2F 0314
        gbc.setState(0x426, 0xee05, 0xc240, 0xf9ef, 0x6a74, 0xa624, 0x1, 0x1);
        gbc.writeMem(0x426, { 0x2f });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xee05, gbc.sp());
        EXPECT(0x427, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0315
        gbc.setState(0x160f, 0xe5f6, 0x9e0, 0xccb5, 0xe121, 0x6239, 0x1, 0x0);
        gbc.writeMem(0x160f, { 0x2f });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xe5f6, gbc.sp());
        EXPECT(0x1610, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0316
        gbc.setState(0xe58c, 0x9fff, 0xa7c0, 0xb29f, 0x5c34, 0xbf25, 0x0, 0x0);
        gbc.writeMem(0xe58c, { 0x2f });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x9fff, gbc.sp());
        EXPECT(0xe58d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xe58c));
        // 2F 0317
        gbc.setState(0x808a, 0xe2c6, 0xe260, 0xa8d2, 0xf3db, 0x6752, 0x1, 0x1);
        gbc.writeMem(0x808a, { 0x2f });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe2c6, gbc.sp());
        EXPECT(0x808b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x808a));
        // 2F 0318
        gbc.setState(0xd3a, 0x8423, 0xf0b0, 0x2086, 0xd622, 0xe43f, 0x0, 0x1);
        gbc.writeMem(0xd3a, { 0x2f });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x8423, gbc.sp());
        EXPECT(0xd3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0319
        gbc.setState(0x748f, 0x2075, 0xc7f0, 0x5e43, 0x8a8e, 0xb0bc, 0x0, 0x0);
        gbc.writeMem(0x748f, { 0x2f });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x2075, gbc.sp());
        EXPECT(0x7490, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 031A
        gbc.setState(0x88f1, 0x2bf0, 0xc0b0, 0xe57a, 0xa1a9, 0xe5ed, 0x1, 0x0);
        gbc.writeMem(0x88f1, { 0x2f });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x2bf0, gbc.sp());
        EXPECT(0x88f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x88f1));
        // 2F 031B
        gbc.setState(0x839c, 0x9750, 0xc0b0, 0x98a5, 0xa85, 0x79de, 0x1, 0x1);
        gbc.writeMem(0x839c, { 0x2f });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x9750, gbc.sp());
        EXPECT(0x839d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x839c));
        // 2F 031C
        gbc.setState(0x27e6, 0x61cd, 0xb30, 0x9baf, 0xfaff, 0x7b41, 0x0, 0x0);
        gbc.writeMem(0x27e6, { 0x2f });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x61cd, gbc.sp());
        EXPECT(0x27e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 031D
        gbc.setState(0x7023, 0x29ff, 0x77b0, 0xa3fc, 0xc723, 0x709e, 0x1, 0x0);
        gbc.writeMem(0x7023, { 0x2f });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x29ff, gbc.sp());
        EXPECT(0x7024, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 031E
        gbc.setState(0x5e7f, 0x8e9d, 0x8780, 0xa2db, 0x3200, 0x8628, 0x1, 0x0);
        gbc.writeMem(0x5e7f, { 0x2f });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x8e9d, gbc.sp());
        EXPECT(0x5e80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 031F
        gbc.setState(0x3125, 0xdd78, 0xf060, 0xb9d6, 0xba23, 0x5cb1, 0x0, 0x1);
        gbc.writeMem(0x3125, { 0x2f });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xdd78, gbc.sp());
        EXPECT(0x3126, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0320
        gbc.setState(0x3185, 0x95ff, 0x690, 0xcbb7, 0xbc01, 0xad19, 0x1, 0x0);
        gbc.writeMem(0x3185, { 0x2f });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x95ff, gbc.sp());
        EXPECT(0x3186, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0321
        gbc.setState(0x3b1, 0x9a, 0x43b0, 0xfa04, 0x311c, 0x2b20, 0x1, 0x1);
        gbc.writeMem(0x3b1, { 0x2f });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x9a, gbc.sp());
        EXPECT(0x3b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0322
        gbc.setState(0xc25f, 0x4a2f, 0x8ec0, 0x478c, 0xfa1b, 0x713c, 0x1, 0x1);
        gbc.writeMem(0xc25f, { 0x2f });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x4a2f, gbc.sp());
        EXPECT(0xc260, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xc25f));
        // 2F 0323
        gbc.setState(0x5a2b, 0x5357, 0x3cb0, 0x3493, 0x3f67, 0xfc9f, 0x0, 0x1);
        gbc.writeMem(0x5a2b, { 0x2f });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x5357, gbc.sp());
        EXPECT(0x5a2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0324
        gbc.setState(0xda84, 0x3604, 0x5e50, 0x7bd1, 0x4092, 0xc509, 0x1, 0x0);
        gbc.writeMem(0xda84, { 0x2f });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x3604, gbc.sp());
        EXPECT(0xda85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xda84));
        // 2F 0325
        gbc.setState(0xa728, 0x3cee, 0x9c0, 0x8ba8, 0x215, 0x1182, 0x0, 0x1);
        gbc.writeMem(0xa728, { 0x2f });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x3cee, gbc.sp());
        EXPECT(0xa729, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xa728));
        // 2F 0326
        gbc.setState(0x8abc, 0xb233, 0x8ca0, 0x97cb, 0xfd74, 0x8de0, 0x1, 0x0);
        gbc.writeMem(0x8abc, { 0x2f });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xb233, gbc.sp());
        EXPECT(0x8abd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8abc));
        // 2F 0327
        gbc.setState(0x7da, 0xdd8f, 0x6d10, 0xce32, 0x4414, 0xa12e, 0x0, 0x0);
        gbc.writeMem(0x7da, { 0x2f });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xdd8f, gbc.sp());
        EXPECT(0x7db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0328
        gbc.setState(0xafb7, 0x71e3, 0xc040, 0xb146, 0xc28e, 0xfccb, 0x0, 0x1);
        gbc.writeMem(0xafb7, { 0x2f });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x71e3, gbc.sp());
        EXPECT(0xafb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xafb7));
        // 2F 0329
        gbc.setState(0x4c5c, 0x1e9f, 0xd620, 0x4691, 0x6e8a, 0xc190, 0x1, 0x1);
        gbc.writeMem(0x4c5c, { 0x2f });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x1e9f, gbc.sp());
        EXPECT(0x4c5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 032A
        gbc.setState(0x27a5, 0x1883, 0x2480, 0x7f68, 0xd357, 0x4ac5, 0x1, 0x1);
        gbc.writeMem(0x27a5, { 0x2f });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x1883, gbc.sp());
        EXPECT(0x27a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 032B
        gbc.setState(0x7328, 0x6afb, 0xe4a0, 0x9a00, 0x8a29, 0xe80a, 0x0, 0x1);
        gbc.writeMem(0x7328, { 0x2f });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x6afb, gbc.sp());
        EXPECT(0x7329, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 032C
        gbc.setState(0x1344, 0x1daa, 0x1ae0, 0x1d54, 0x9d0f, 0x2d1f, 0x0, 0x0);
        gbc.writeMem(0x1344, { 0x2f });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x1daa, gbc.sp());
        EXPECT(0x1345, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 032D
        gbc.setState(0x2fc9, 0x7726, 0x8e90, 0x5da, 0x290d, 0x9f90, 0x1, 0x1);
        gbc.writeMem(0x2fc9, { 0x2f });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x7726, gbc.sp());
        EXPECT(0x2fca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 032E
        gbc.setState(0x821e, 0xce1f, 0x6d60, 0xcb0a, 0xd787, 0xdbab, 0x1, 0x0);
        gbc.writeMem(0x821e, { 0x2f });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xce1f, gbc.sp());
        EXPECT(0x821f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x821e));
        // 2F 032F
        gbc.setState(0x5eba, 0xbfa3, 0x3cd0, 0x5d82, 0xb398, 0x5333, 0x1, 0x0);
        gbc.writeMem(0x5eba, { 0x2f });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xbfa3, gbc.sp());
        EXPECT(0x5ebb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0330
        gbc.setState(0x9d04, 0x732f, 0x1da0, 0x4659, 0x65e2, 0x6782, 0x1, 0x0);
        gbc.writeMem(0x9d04, { 0x2f });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x732f, gbc.sp());
        EXPECT(0x9d05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x9d04));
        // 2F 0331
        gbc.setState(0xa7af, 0xb16f, 0xabb0, 0xcd84, 0xefb9, 0xab9a, 0x0, 0x0);
        gbc.writeMem(0xa7af, { 0x2f });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xb16f, gbc.sp());
        EXPECT(0xa7b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xa7af));
        // 2F 0332
        gbc.setState(0x5c6f, 0xd908, 0xdea0, 0x2e27, 0xfd65, 0xd8bd, 0x0, 0x1);
        gbc.writeMem(0x5c6f, { 0x2f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd908, gbc.sp());
        EXPECT(0x5c70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0333
        gbc.setState(0xc70b, 0x55fa, 0x7000, 0x22f4, 0xffbe, 0x5573, 0x1, 0x0);
        gbc.writeMem(0xc70b, { 0x2f });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x55fa, gbc.sp());
        EXPECT(0xc70c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xc70b));
        // 2F 0334
        gbc.setState(0x2ff8, 0x107c, 0xed10, 0x76bc, 0x3dff, 0x50ae, 0x1, 0x0);
        gbc.writeMem(0x2ff8, { 0x2f });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x107c, gbc.sp());
        EXPECT(0x2ff9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0335
        gbc.setState(0xcb60, 0xae15, 0x3e70, 0xec62, 0x504a, 0x2383, 0x1, 0x1);
        gbc.writeMem(0xcb60, { 0x2f });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xae15, gbc.sp());
        EXPECT(0xcb61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xcb60));
        // 2F 0336
        gbc.setState(0x3570, 0xb260, 0xc130, 0x8688, 0x1e82, 0x8e80, 0x0, 0x1);
        gbc.writeMem(0x3570, { 0x2f });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xb260, gbc.sp());
        EXPECT(0x3571, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0337
        gbc.setState(0x8584, 0x76d5, 0xfb00, 0x561f, 0x6d45, 0x5237, 0x0, 0x1);
        gbc.writeMem(0x8584, { 0x2f });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x76d5, gbc.sp());
        EXPECT(0x8585, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8584));
        // 2F 0338
        gbc.setState(0x11d1, 0x2d7c, 0xe30, 0xea03, 0xe474, 0x9cf6, 0x1, 0x1);
        gbc.writeMem(0x11d1, { 0x2f });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x2d7c, gbc.sp());
        EXPECT(0x11d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0339
        gbc.setState(0xef61, 0x7e3c, 0x2780, 0xabb9, 0xf0d0, 0xb0fb, 0x0, 0x0);
        gbc.writeMem(0xef61, { 0x2f });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x7e3c, gbc.sp());
        EXPECT(0xef62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xef61));
        // 2F 033A
        gbc.setState(0xb0c1, 0xc20f, 0x8620, 0x1a30, 0x7352, 0x4acc, 0x1, 0x1);
        gbc.writeMem(0xb0c1, { 0x2f });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xc20f, gbc.sp());
        EXPECT(0xb0c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xb0c1));
        // 2F 033B
        gbc.setState(0x86b6, 0x3330, 0xed90, 0x9acf, 0xfebd, 0x1860, 0x1, 0x1);
        gbc.writeMem(0x86b6, { 0x2f });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x3330, gbc.sp());
        EXPECT(0x86b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x86b6));
        // 2F 033C
        gbc.setState(0x7648, 0xfea, 0xd870, 0x3a8d, 0xf5c8, 0x62f8, 0x1, 0x1);
        gbc.writeMem(0x7648, { 0x2f });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xfea, gbc.sp());
        EXPECT(0x7649, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 033D
        gbc.setState(0x90d9, 0x5bb3, 0x1d10, 0x88c, 0x253c, 0x14f2, 0x1, 0x1);
        gbc.writeMem(0x90d9, { 0x2f });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x5bb3, gbc.sp());
        EXPECT(0x90da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x90d9));
        // 2F 033E
        gbc.setState(0xc613, 0xc375, 0x8430, 0xcd76, 0x4d81, 0xc07, 0x0, 0x1);
        gbc.writeMem(0xc613, { 0x2f });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xc375, gbc.sp());
        EXPECT(0xc614, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xc613));
        // 2F 033F
        gbc.setState(0x8f0f, 0x663c, 0xf730, 0x676, 0xdf30, 0x5cfd, 0x1, 0x1);
        gbc.writeMem(0x8f0f, { 0x2f });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x663c, gbc.sp());
        EXPECT(0x8f10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8f0f));
        // 2F 0345
        gbc.setState(0x562f, 0x529f, 0x970, 0xd255, 0x9184, 0xfa78, 0x1, 0x1);
        gbc.writeMem(0x562f, { 0x2f });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x529f, gbc.sp());
        EXPECT(0x5630, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0346
        gbc.setState(0xcddc, 0x842e, 0xe90, 0xa5d1, 0xf2b0, 0xa2e9, 0x0, 0x1);
        gbc.writeMem(0xcddc, { 0x2f });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x842e, gbc.sp());
        EXPECT(0xcddd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xcddc));
        // 2F 0347
        gbc.setState(0x3b2a, 0x61d0, 0x6cf0, 0x1aac, 0x12b8, 0x5a12, 0x0, 0x0);
        gbc.writeMem(0x3b2a, { 0x2f });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x61d0, gbc.sp());
        EXPECT(0x3b2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0348
        gbc.setState(0x7735, 0x1247, 0xdc60, 0xf297, 0x365, 0x2350, 0x1, 0x1);
        gbc.writeMem(0x7735, { 0x2f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x1247, gbc.sp());
        EXPECT(0x7736, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0349
        gbc.setState(0x64ca, 0x1026, 0x35d0, 0xbb0a, 0x9ef4, 0x9dca, 0x1, 0x0);
        gbc.writeMem(0x64ca, { 0x2f });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x1026, gbc.sp());
        EXPECT(0x64cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 034A
        gbc.setState(0x5a8e, 0xdc62, 0xbd70, 0xc1b3, 0x9bb1, 0xc948, 0x1, 0x1);
        gbc.writeMem(0x5a8e, { 0x2f });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xdc62, gbc.sp());
        EXPECT(0x5a8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 034B
        gbc.setState(0x7fe1, 0xa582, 0x55c0, 0x3c6a, 0xad9a, 0x91dc, 0x0, 0x0);
        gbc.writeMem(0x7fe1, { 0x2f });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xa582, gbc.sp());
        EXPECT(0x7fe2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 034C
        gbc.setState(0x4352, 0x2b1f, 0x2e90, 0x3cd6, 0xf5d0, 0xd1c4, 0x0, 0x0);
        gbc.writeMem(0x4352, { 0x2f });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x2b1f, gbc.sp());
        EXPECT(0x4353, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 034D
        gbc.setState(0xe45f, 0xaf1f, 0x9d30, 0x92f5, 0x17b1, 0xf319, 0x1, 0x1);
        gbc.writeMem(0xe45f, { 0x2f });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xaf1f, gbc.sp());
        EXPECT(0xe460, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xe45f));
        // 2F 034E
        gbc.setState(0xd51, 0xfe97, 0xb090, 0xa0e7, 0x3a4, 0x7597, 0x1, 0x1);
        gbc.writeMem(0xd51, { 0x2f });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xfe97, gbc.sp());
        EXPECT(0xd52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 034F
        gbc.setState(0x48d6, 0x18c1, 0x5880, 0xaac, 0x3613, 0x470e, 0x1, 0x1);
        gbc.writeMem(0x48d6, { 0x2f });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x18c1, gbc.sp());
        EXPECT(0x48d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0350
        gbc.setState(0xa9ce, 0x7cbd, 0xebe0, 0x9f18, 0xbdb0, 0xc51b, 0x1, 0x0);
        gbc.writeMem(0xa9ce, { 0x2f });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x7cbd, gbc.sp());
        EXPECT(0xa9cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xa9ce));
        // 2F 0351
        gbc.setState(0x9dcc, 0x734a, 0x2330, 0xcb49, 0xc0b9, 0x7148, 0x0, 0x0);
        gbc.writeMem(0x9dcc, { 0x2f });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x734a, gbc.sp());
        EXPECT(0x9dcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x9dcc));
        // 2F 0352
        gbc.setState(0xffb, 0x36d6, 0x380, 0xb9e2, 0xe2c, 0xe9d, 0x1, 0x0);
        gbc.writeMem(0xffb, { 0x2f });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x36d6, gbc.sp());
        EXPECT(0xffc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0353
        gbc.setState(0x53fa, 0xc85a, 0x8210, 0xb5b5, 0x8122, 0x3a68, 0x1, 0x1);
        gbc.writeMem(0x53fa, { 0x2f });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xc85a, gbc.sp());
        EXPECT(0x53fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0354
        gbc.setState(0x6893, 0x5c7d, 0x63e0, 0x6ee1, 0x33e4, 0x162c, 0x0, 0x1);
        gbc.writeMem(0x6893, { 0x2f });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x5c7d, gbc.sp());
        EXPECT(0x6894, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0355
        gbc.setState(0x9120, 0x215a, 0x5fb0, 0x5faf, 0xac36, 0xc4b0, 0x0, 0x0);
        gbc.writeMem(0x9120, { 0x2f });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x215a, gbc.sp());
        EXPECT(0x9121, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x9120));
        // 2F 0356
        gbc.setState(0x986c, 0xdef9, 0xb820, 0x8ce5, 0x9989, 0xb89c, 0x0, 0x1);
        gbc.writeMem(0x986c, { 0x2f });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xdef9, gbc.sp());
        EXPECT(0x986d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x986c));
        // 2F 0357
        gbc.setState(0x3e1f, 0xd80a, 0xca70, 0xa6f7, 0x8011, 0xebdf, 0x0, 0x0);
        gbc.writeMem(0x3e1f, { 0x2f });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xd80a, gbc.sp());
        EXPECT(0x3e20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0358
        gbc.setState(0x73ec, 0x6d0d, 0x62f0, 0x869f, 0xe5e7, 0x9e37, 0x1, 0x0);
        gbc.writeMem(0x73ec, { 0x2f });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x6d0d, gbc.sp());
        EXPECT(0x73ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0359
        gbc.setState(0xc0e5, 0x4f3f, 0xcd20, 0x2656, 0x6c43, 0xd1b5, 0x0, 0x1);
        gbc.writeMem(0xc0e5, { 0x2f });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x4f3f, gbc.sp());
        EXPECT(0xc0e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xc0e5));
        // 2F 035A
        gbc.setState(0x9ff1, 0x53c1, 0x3c60, 0xa43c, 0x1f99, 0x5d0, 0x1, 0x1);
        gbc.writeMem(0x9ff1, { 0x2f });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x53c1, gbc.sp());
        EXPECT(0x9ff2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x9ff1));
        // 2F 035B
        gbc.setState(0xd494, 0x8b0, 0x8b60, 0x50b0, 0x3c1b, 0xee65, 0x1, 0x1);
        gbc.writeMem(0xd494, { 0x2f });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x8b0, gbc.sp());
        EXPECT(0xd495, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xd494));
        // 2F 035D
        gbc.setState(0x8f12, 0xb015, 0x8430, 0x12cc, 0x67ed, 0x2fd3, 0x1, 0x1);
        gbc.writeMem(0x8f12, { 0x2f });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xb015, gbc.sp());
        EXPECT(0x8f13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8f12));
        // 2F 035E
        gbc.setState(0x7dc1, 0x85d0, 0xb3f0, 0x2e4c, 0x3219, 0xd1d5, 0x0, 0x1);
        gbc.writeMem(0x7dc1, { 0x2f });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x85d0, gbc.sp());
        EXPECT(0x7dc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 035F
        gbc.setState(0xe8f3, 0x2536, 0x50f0, 0xa397, 0xbef6, 0xd5fc, 0x0, 0x1);
        gbc.writeMem(0xe8f3, { 0x2f });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x2536, gbc.sp());
        EXPECT(0xe8f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xe8f3));
        // 2F 0360
        gbc.setState(0xc786, 0x9ddf, 0xa8e0, 0x2f28, 0x1c1, 0xde35, 0x0, 0x0);
        gbc.writeMem(0xc786, { 0x2f });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x9ddf, gbc.sp());
        EXPECT(0xc787, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xc786));
        // 2F 0361
        gbc.setState(0x6248, 0x17a6, 0x710, 0x1c9, 0xfe69, 0x77d, 0x1, 0x0);
        gbc.writeMem(0x6248, { 0x2f });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x17a6, gbc.sp());
        EXPECT(0x6249, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0362
        gbc.setState(0x925b, 0x3780, 0xea40, 0x1c0d, 0xa5e4, 0xbdd2, 0x1, 0x1);
        gbc.writeMem(0x925b, { 0x2f });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x3780, gbc.sp());
        EXPECT(0x925c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x925b));
        // 2F 0363
        gbc.setState(0xdf7d, 0x88ae, 0x3150, 0xb47e, 0x5b00, 0x18e7, 0x0, 0x1);
        gbc.writeMem(0xdf7d, { 0x2f });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x88ae, gbc.sp());
        EXPECT(0xdf7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xdf7d));
        // 2F 0364
        gbc.setState(0x58a, 0xbe51, 0xd940, 0x898b, 0x7e52, 0xc5f1, 0x0, 0x0);
        gbc.writeMem(0x58a, { 0x2f });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xbe51, gbc.sp());
        EXPECT(0x58b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0365
        gbc.setState(0x97f, 0x4d2f, 0xeee0, 0xfaea, 0x87dc, 0x3f53, 0x1, 0x1);
        gbc.writeMem(0x97f, { 0x2f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x4d2f, gbc.sp());
        EXPECT(0x980, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0366
        gbc.setState(0xb387, 0xf947, 0x2a70, 0xdb1c, 0x882e, 0x233c, 0x0, 0x1);
        gbc.writeMem(0xb387, { 0x2f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xf947, gbc.sp());
        EXPECT(0xb388, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xb387));
        // 2F 0367
        gbc.setState(0xbf3c, 0x9bdb, 0x8480, 0xd811, 0x123e, 0x26c0, 0x1, 0x0);
        gbc.writeMem(0xbf3c, { 0x2f });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x9bdb, gbc.sp());
        EXPECT(0xbf3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xbf3c));
        // 2F 0368
        gbc.setState(0x27b9, 0x410c, 0x9310, 0xc9b, 0x34a3, 0xb485, 0x0, 0x0);
        gbc.writeMem(0x27b9, { 0x2f });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x410c, gbc.sp());
        EXPECT(0x27ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0369
        gbc.setState(0x128d, 0x4aa, 0xe650, 0x1349, 0x438f, 0xa75b, 0x1, 0x0);
        gbc.writeMem(0x128d, { 0x2f });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4aa, gbc.sp());
        EXPECT(0x128e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 036A
        gbc.setState(0xd4d1, 0x34f1, 0x5c50, 0x5fd7, 0xe11a, 0x85f7, 0x0, 0x1);
        gbc.writeMem(0xd4d1, { 0x2f });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x34f1, gbc.sp());
        EXPECT(0xd4d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xd4d1));
        // 2F 036B
        gbc.setState(0x16b8, 0xc359, 0xe7f0, 0x5c28, 0xf5d3, 0xe673, 0x0, 0x1);
        gbc.writeMem(0x16b8, { 0x2f });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xc359, gbc.sp());
        EXPECT(0x16b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 036C
        gbc.setState(0xb6ff, 0x1816, 0x4240, 0xf5d7, 0xa6cd, 0xf194, 0x1, 0x1);
        gbc.writeMem(0xb6ff, { 0x2f });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x1816, gbc.sp());
        EXPECT(0xb700, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xb6ff));
        // 2F 036D
        gbc.setState(0x2925, 0x39e7, 0x5080, 0xb281, 0x45d1, 0xc631, 0x0, 0x1);
        gbc.writeMem(0x2925, { 0x2f });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x39e7, gbc.sp());
        EXPECT(0x2926, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 036E
        gbc.setState(0x61dd, 0x456c, 0x5e0, 0xe9cd, 0x2a94, 0x5553, 0x1, 0x0);
        gbc.writeMem(0x61dd, { 0x2f });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x456c, gbc.sp());
        EXPECT(0x61de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 036F
        gbc.setState(0x24a5, 0xc92d, 0xdf60, 0x81b9, 0xba7d, 0x62f0, 0x0, 0x0);
        gbc.writeMem(0x24a5, { 0x2f });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xc92d, gbc.sp());
        EXPECT(0x24a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0370
        gbc.setState(0x2566, 0x7968, 0xdf20, 0x6e2c, 0xa2eb, 0x1e39, 0x0, 0x1);
        gbc.writeMem(0x2566, { 0x2f });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x7968, gbc.sp());
        EXPECT(0x2567, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0371
        gbc.setState(0x5ae, 0x23e9, 0x3910, 0x6fb5, 0x7f45, 0x8480, 0x1, 0x1);
        gbc.writeMem(0x5ae, { 0x2f });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x23e9, gbc.sp());
        EXPECT(0x5af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0372
        gbc.setState(0xa5a2, 0xdd5f, 0x1490, 0xa673, 0xe1ae, 0x8f4c, 0x0, 0x0);
        gbc.writeMem(0xa5a2, { 0x2f });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xdd5f, gbc.sp());
        EXPECT(0xa5a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xa5a2));
        // 2F 0373
        gbc.setState(0x6ab5, 0xac6c, 0xff20, 0x4e6, 0x8547, 0x396d, 0x1, 0x1);
        gbc.writeMem(0x6ab5, { 0x2f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xac6c, gbc.sp());
        EXPECT(0x6ab6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0374
        gbc.setState(0x95, 0xc388, 0xcf20, 0xc606, 0xc15e, 0x857b, 0x0, 0x0);
        gbc.writeMem(0x95, { 0x2f });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xc388, gbc.sp());
        EXPECT(0x96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0375
        gbc.setState(0x437c, 0x3ce9, 0xade0, 0xb4e8, 0x2df9, 0x54ca, 0x1, 0x0);
        gbc.writeMem(0x437c, { 0x2f });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x3ce9, gbc.sp());
        EXPECT(0x437d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0376
        gbc.setState(0x615f, 0x6d7b, 0x3890, 0xcd28, 0x5dbb, 0x3272, 0x1, 0x0);
        gbc.writeMem(0x615f, { 0x2f });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x6d7b, gbc.sp());
        EXPECT(0x6160, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0377
        gbc.setState(0xd9dc, 0xcead, 0x2140, 0x22bd, 0xbec1, 0xda5e, 0x0, 0x1);
        gbc.writeMem(0xd9dc, { 0x2f });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xcead, gbc.sp());
        EXPECT(0xd9dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xd9dc));
        // 2F 0378
        gbc.setState(0xc94e, 0xf81c, 0x710, 0xe3bd, 0xaae, 0x6a52, 0x0, 0x0);
        gbc.writeMem(0xc94e, { 0x2f });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xf81c, gbc.sp());
        EXPECT(0xc94f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xc94e));
        // 2F 0379
        gbc.setState(0x476c, 0xac4, 0xd230, 0x6ef2, 0xbd82, 0xe737, 0x1, 0x1);
        gbc.writeMem(0x476c, { 0x2f });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xac4, gbc.sp());
        EXPECT(0x476d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 037A
        gbc.setState(0xc7e9, 0x15c, 0x8db0, 0x4f3e, 0x6d1f, 0x466, 0x0, 0x0);
        gbc.writeMem(0xc7e9, { 0x2f });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x15c, gbc.sp());
        EXPECT(0xc7ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xc7e9));
        // 2F 037B
        gbc.setState(0x17b4, 0xffb3, 0x6ed0, 0x4e7f, 0x3268, 0xff9f, 0x0, 0x1);
        gbc.writeMem(0x17b4, { 0x2f });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xffb3, gbc.sp());
        EXPECT(0x17b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 037C
        gbc.setState(0xaae7, 0xed3, 0xe9a0, 0x4435, 0x491e, 0x211d, 0x1, 0x1);
        gbc.writeMem(0xaae7, { 0x2f });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xed3, gbc.sp());
        EXPECT(0xaae8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xaae7));
        // 2F 037D
        gbc.setState(0x22dd, 0xeda6, 0xb00, 0x72b7, 0xac8e, 0x71dd, 0x0, 0x1);
        gbc.writeMem(0x22dd, { 0x2f });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xeda6, gbc.sp());
        EXPECT(0x22de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 037E
        gbc.setState(0x662, 0x4a63, 0xad00, 0xc517, 0xfcfc, 0xbf85, 0x0, 0x0);
        gbc.writeMem(0x662, { 0x2f });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x4a63, gbc.sp());
        EXPECT(0x663, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 037F
        gbc.setState(0x3d50, 0xef37, 0x2cc0, 0xbbbd, 0xcc50, 0x707f, 0x0, 0x1);
        gbc.writeMem(0x3d50, { 0x2f });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xef37, gbc.sp());
        EXPECT(0x3d51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0380
        gbc.setState(0x584e, 0xf7be, 0x2980, 0x59ec, 0xde2c, 0x623a, 0x0, 0x0);
        gbc.writeMem(0x584e, { 0x2f });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xf7be, gbc.sp());
        EXPECT(0x584f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0381
        gbc.setState(0xeafa, 0x5242, 0x3ed0, 0xc7c4, 0xc11d, 0x149e, 0x1, 0x0);
        gbc.writeMem(0xeafa, { 0x2f });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x5242, gbc.sp());
        EXPECT(0xeafb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xeafa));
        // 2F 0382
        gbc.setState(0x38d0, 0x3bf, 0xc840, 0x90a2, 0x65c6, 0xdb72, 0x0, 0x1);
        gbc.writeMem(0x38d0, { 0x2f });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x3bf, gbc.sp());
        EXPECT(0x38d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0383
        gbc.setState(0x47a4, 0x44b, 0x3bb0, 0xfafd, 0xa905, 0x5b2, 0x1, 0x1);
        gbc.writeMem(0x47a4, { 0x2f });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x44b, gbc.sp());
        EXPECT(0x47a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0384
        gbc.setState(0x9ec8, 0xd27, 0x5470, 0x221b, 0xf3e3, 0x240, 0x0, 0x1);
        gbc.writeMem(0x9ec8, { 0x2f });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xd27, gbc.sp());
        EXPECT(0x9ec9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x9ec8));
        // 2F 0385
        gbc.setState(0x2ee6, 0xc50a, 0x8b80, 0xa46, 0x3df2, 0x4c61, 0x0, 0x0);
        gbc.writeMem(0x2ee6, { 0x2f });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xc50a, gbc.sp());
        EXPECT(0x2ee7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0386
        gbc.setState(0xb341, 0x4b2c, 0xd520, 0xd762, 0xf7b3, 0xe7ab, 0x1, 0x1);
        gbc.writeMem(0xb341, { 0x2f });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x4b2c, gbc.sp());
        EXPECT(0xb342, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xb341));
        // 2F 0387
        gbc.setState(0x61e6, 0xf540, 0x1f20, 0x82a8, 0xc03, 0xa5a0, 0x1, 0x1);
        gbc.writeMem(0x61e6, { 0x2f });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xf540, gbc.sp());
        EXPECT(0x61e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0388
        gbc.setState(0x8e1f, 0x2763, 0x4ef0, 0xba7c, 0x156c, 0x80e5, 0x1, 0x0);
        gbc.writeMem(0x8e1f, { 0x2f });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x2763, gbc.sp());
        EXPECT(0x8e20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8e1f));
        // 2F 0389
        gbc.setState(0x5447, 0x7c85, 0x3860, 0x3f2, 0xed98, 0xad9f, 0x0, 0x0);
        gbc.writeMem(0x5447, { 0x2f });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x7c85, gbc.sp());
        EXPECT(0x5448, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 038A
        gbc.setState(0xe7fd, 0xc5fd, 0xf500, 0x3b88, 0x5bbe, 0x3275, 0x1, 0x1);
        gbc.writeMem(0xe7fd, { 0x2f });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xc5fd, gbc.sp());
        EXPECT(0xe7fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xe7fd));
        // 2F 038B
        gbc.setState(0xc617, 0xb2a3, 0x4350, 0x6adf, 0x270f, 0x2624, 0x1, 0x1);
        gbc.writeMem(0xc617, { 0x2f });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xb2a3, gbc.sp());
        EXPECT(0xc618, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xc617));
        // 2F 038C
        gbc.setState(0x2dd9, 0x28cb, 0xae0, 0x8d81, 0x47d5, 0xd670, 0x0, 0x0);
        gbc.writeMem(0x2dd9, { 0x2f });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x28cb, gbc.sp());
        EXPECT(0x2dda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 038D
        gbc.setState(0x3f5e, 0x41a2, 0xb300, 0x104e, 0x501e, 0x2c36, 0x0, 0x0);
        gbc.writeMem(0x3f5e, { 0x2f });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x41a2, gbc.sp());
        EXPECT(0x3f5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 038E
        gbc.setState(0xb8b8, 0xc69d, 0x5b70, 0x8ea2, 0x162a, 0x5d1a, 0x1, 0x0);
        gbc.writeMem(0xb8b8, { 0x2f });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xc69d, gbc.sp());
        EXPECT(0xb8b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xb8b8));
        // 2F 038F
        gbc.setState(0x502f, 0x6764, 0xefc0, 0x42d7, 0x6aef, 0x9fad, 0x1, 0x0);
        gbc.writeMem(0x502f, { 0x2f });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x6764, gbc.sp());
        EXPECT(0x5030, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0390
        gbc.setState(0x65c6, 0x6f5, 0x6830, 0x4a1e, 0xdab8, 0x7745, 0x0, 0x0);
        gbc.writeMem(0x65c6, { 0x2f });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x6f5, gbc.sp());
        EXPECT(0x65c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0391
        gbc.setState(0x35fb, 0x403b, 0x4c0, 0x27b5, 0xb63c, 0xdc8f, 0x1, 0x1);
        gbc.writeMem(0x35fb, { 0x2f });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x403b, gbc.sp());
        EXPECT(0x35fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0392
        gbc.setState(0x3153, 0xa58, 0x7310, 0xc0b4, 0x819, 0xe813, 0x1, 0x1);
        gbc.writeMem(0x3153, { 0x2f });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xa58, gbc.sp());
        EXPECT(0x3154, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0393
        gbc.setState(0xad37, 0xa703, 0xe10, 0xe3a4, 0xf355, 0xdf1a, 0x0, 0x0);
        gbc.writeMem(0xad37, { 0x2f });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xa703, gbc.sp());
        EXPECT(0xad38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xad37));
        // 2F 0394
        gbc.setState(0x9a5d, 0xcd3c, 0x8f50, 0x196f, 0x8acc, 0x3614, 0x0, 0x1);
        gbc.writeMem(0x9a5d, { 0x2f });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xcd3c, gbc.sp());
        EXPECT(0x9a5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x9a5d));
        // 2F 0395
        gbc.setState(0x206f, 0x5b4c, 0x7b40, 0xd84b, 0xdcd1, 0xa2f7, 0x0, 0x0);
        gbc.writeMem(0x206f, { 0x2f });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x5b4c, gbc.sp());
        EXPECT(0x2070, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 0396
        gbc.setState(0x431b, 0xd042, 0xf870, 0xca7f, 0x306d, 0x5809, 0x0, 0x1);
        gbc.writeMem(0x431b, { 0x2f });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xd042, gbc.sp());
        EXPECT(0x431c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0397
        gbc.setState(0xc954, 0x6f7a, 0x2c70, 0x298e, 0x3ea, 0xc0d, 0x1, 0x0);
        gbc.writeMem(0xc954, { 0x2f });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x6f7a, gbc.sp());
        EXPECT(0xc955, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xc954));
        // 2F 0398
        gbc.setState(0x6fd6, 0x1249, 0x4810, 0xab46, 0x8853, 0x958d, 0x1, 0x1);
        gbc.writeMem(0x6fd6, { 0x2f });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x1249, gbc.sp());
        EXPECT(0x6fd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 0399
        gbc.setState(0xdc00, 0xf57b, 0x3990, 0xd1ee, 0xc670, 0x79f6, 0x0, 0x1);
        gbc.writeMem(0xdc00, { 0x2f });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xf57b, gbc.sp());
        EXPECT(0xdc01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xdc00));
        // 2F 039A
        gbc.setState(0x5f09, 0xa34, 0x5420, 0x3f49, 0x359e, 0xb01f, 0x1, 0x1);
        gbc.writeMem(0x5f09, { 0x2f });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xa34, gbc.sp());
        EXPECT(0x5f0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 039B
        gbc.setState(0xa9e3, 0x2905, 0xbf0, 0x41aa, 0x1293, 0x57a9, 0x0, 0x0);
        gbc.writeMem(0xa9e3, { 0x2f });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x2905, gbc.sp());
        EXPECT(0xa9e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xa9e3));
        // 2F 039C
        gbc.setState(0x920f, 0xe8a, 0xf4a0, 0xbcfe, 0xfc40, 0x4070, 0x1, 0x1);
        gbc.writeMem(0x920f, { 0x2f });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe8a, gbc.sp());
        EXPECT(0x9210, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x920f));
        // 2F 039D
        gbc.setState(0x3701, 0xe9e7, 0x7800, 0xd470, 0xbff1, 0x8121, 0x1, 0x1);
        gbc.writeMem(0x3701, { 0x2f });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xe9e7, gbc.sp());
        EXPECT(0x3702, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 039E
        gbc.setState(0x2d66, 0xf532, 0x4680, 0xc09d, 0xaa30, 0xff2c, 0x0, 0x1);
        gbc.writeMem(0x2d66, { 0x2f });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xf532, gbc.sp());
        EXPECT(0x2d67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 039F
        gbc.setState(0xdcdd, 0x2304, 0xc600, 0xf9cd, 0xbd17, 0xc644, 0x1, 0x0);
        gbc.writeMem(0xdcdd, { 0x2f });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x2304, gbc.sp());
        EXPECT(0xdcde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xdcdd));
        // 2F 03A0
        gbc.setState(0x5145, 0xbb00, 0x4240, 0xd1b8, 0xad87, 0x27e9, 0x1, 0x0);
        gbc.writeMem(0x5145, { 0x2f });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xbb00, gbc.sp());
        EXPECT(0x5146, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 03A2
        gbc.setState(0x85b6, 0x43a1, 0xc580, 0xfa8b, 0x737f, 0xa248, 0x0, 0x1);
        gbc.writeMem(0x85b6, { 0x2f });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x43a1, gbc.sp());
        EXPECT(0x85b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x85b6));
        // 2F 03A3
        gbc.setState(0x52d4, 0xa5cd, 0x2cb0, 0x91e6, 0xe85d, 0x3a8c, 0x1, 0x0);
        gbc.writeMem(0x52d4, { 0x2f });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xa5cd, gbc.sp());
        EXPECT(0x52d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 03A4
        gbc.setState(0xae9, 0x45d0, 0x90c0, 0x73a6, 0xdcc0, 0x6233, 0x1, 0x1);
        gbc.writeMem(0xae9, { 0x2f });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x45d0, gbc.sp());
        EXPECT(0xaea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 03A5
        gbc.setState(0x4511, 0x2d43, 0xf0d0, 0xa79d, 0x5092, 0x7780, 0x1, 0x1);
        gbc.writeMem(0x4511, { 0x2f });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x2d43, gbc.sp());
        EXPECT(0x4512, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 03A6
        gbc.setState(0x9bdf, 0x16d7, 0x7340, 0x38b4, 0xcb05, 0xb7ac, 0x0, 0x0);
        gbc.writeMem(0x9bdf, { 0x2f });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x16d7, gbc.sp());
        EXPECT(0x9be0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x9bdf));
        // 2F 03A7
        gbc.setState(0xd2cf, 0x6d69, 0x3830, 0x5482, 0x4240, 0x316c, 0x1, 0x0);
        gbc.writeMem(0xd2cf, { 0x2f });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x6d69, gbc.sp());
        EXPECT(0xd2d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xd2cf));
        // 2F 03A8
        gbc.setState(0xc89e, 0x4c4a, 0xaad0, 0xe71f, 0xf109, 0xe176, 0x1, 0x1);
        gbc.writeMem(0xc89e, { 0x2f });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x4c4a, gbc.sp());
        EXPECT(0xc89f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xc89e));
        // 2F 03A9
        gbc.setState(0x4391, 0xa846, 0xf600, 0xfb41, 0x4d2a, 0xd125, 0x0, 0x1);
        gbc.writeMem(0x4391, { 0x2f });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xa846, gbc.sp());
        EXPECT(0x4392, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 03AB
        gbc.setState(0xb855, 0x9c84, 0xbf60, 0x6643, 0xe95f, 0x5635, 0x0, 0x1);
        gbc.writeMem(0xb855, { 0x2f });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x9c84, gbc.sp());
        EXPECT(0xb856, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xb855));
        // 2F 03AC
        gbc.setState(0x9ddd, 0xbdbb, 0x85f0, 0xa8be, 0xf485, 0xe7e8, 0x0, 0x0);
        gbc.writeMem(0x9ddd, { 0x2f });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xbdbb, gbc.sp());
        EXPECT(0x9dde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x9ddd));
        // 2F 03AD
        gbc.setState(0x32b8, 0x2eb3, 0x8ee0, 0xb8e6, 0x527e, 0x5c36, 0x0, 0x1);
        gbc.writeMem(0x32b8, { 0x2f });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x2eb3, gbc.sp());
        EXPECT(0x32b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 03AE
        gbc.setState(0x5cdf, 0xe29c, 0xd7b0, 0x9222, 0x4162, 0x1647, 0x1, 0x0);
        gbc.writeMem(0x5cdf, { 0x2f });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xe29c, gbc.sp());
        EXPECT(0x5ce0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 03AF
        gbc.setState(0xe47f, 0xef9a, 0x38e0, 0x1c0a, 0x530e, 0xe54d, 0x1, 0x0);
        gbc.writeMem(0xe47f, { 0x2f });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xef9a, gbc.sp());
        EXPECT(0xe480, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xe47f));
        // 2F 03B0
        gbc.setState(0xa1fd, 0x75f9, 0x3980, 0xa781, 0xbb5a, 0xafe4, 0x0, 0x0);
        gbc.writeMem(0xa1fd, { 0x2f });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x75f9, gbc.sp());
        EXPECT(0xa1fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xa1fd));
        // 2F 03B1
        gbc.setState(0x9464, 0x99ae, 0x8fe0, 0x88ac, 0x3b11, 0x1519, 0x0, 0x0);
        gbc.writeMem(0x9464, { 0x2f });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x99ae, gbc.sp());
        EXPECT(0x9465, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x9464));
        // 2F 03B2
        gbc.setState(0x6bca, 0x43d, 0x9df0, 0x5ce5, 0x5c55, 0x278f, 0x0, 0x0);
        gbc.writeMem(0x6bca, { 0x2f });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x43d, gbc.sp());
        EXPECT(0x6bcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 03B4
        gbc.setState(0xcfb9, 0xc0fe, 0xa6b0, 0x2452, 0x7895, 0xaa59, 0x0, 0x0);
        gbc.writeMem(0xcfb9, { 0x2f });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xc0fe, gbc.sp());
        EXPECT(0xcfba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xcfb9));
        // 2F 03B5
        gbc.setState(0x52e4, 0x3b70, 0xf6e0, 0x138c, 0xa266, 0xe44d, 0x0, 0x1);
        gbc.writeMem(0x52e4, { 0x2f });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x3b70, gbc.sp());
        EXPECT(0x52e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 03B6
        gbc.setState(0xc93, 0x8e87, 0x80d0, 0xeafe, 0x6949, 0x3824, 0x0, 0x1);
        gbc.writeMem(0xc93, { 0x2f });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x8e87, gbc.sp());
        EXPECT(0xc94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 03B7
        gbc.setState(0x3744, 0x4782, 0x9a00, 0x70d8, 0x7789, 0xd78d, 0x1, 0x0);
        gbc.writeMem(0x3744, { 0x2f });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x4782, gbc.sp());
        EXPECT(0x3745, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 03B8
        gbc.setState(0x6c98, 0xc547, 0x4690, 0x414f, 0x917e, 0x8be1, 0x1, 0x1);
        gbc.writeMem(0x6c98, { 0x2f });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xc547, gbc.sp());
        EXPECT(0x6c99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 03B9
        gbc.setState(0x1668, 0x292e, 0x7ee0, 0x1c1d, 0x5136, 0xe4df, 0x0, 0x1);
        gbc.writeMem(0x1668, { 0x2f });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x292e, gbc.sp());
        EXPECT(0x1669, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 03BA
        gbc.setState(0xed93, 0xc19c, 0x5460, 0x4f5a, 0xeda, 0x59df, 0x1, 0x1);
        gbc.writeMem(0xed93, { 0x2f });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xc19c, gbc.sp());
        EXPECT(0xed94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xed93));
        // 2F 03BB
        gbc.setState(0x6f25, 0xc834, 0xbd80, 0x372, 0x952a, 0xe096, 0x1, 0x0);
        gbc.writeMem(0x6f25, { 0x2f });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xc834, gbc.sp());
        EXPECT(0x6f26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 03BC
        gbc.setState(0xce81, 0xaf6a, 0xf970, 0xd5ac, 0xa717, 0x3458, 0x1, 0x0);
        gbc.writeMem(0xce81, { 0x2f });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xaf6a, gbc.sp());
        EXPECT(0xce82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xce81));
        // 2F 03BE
        gbc.setState(0xcefb, 0x613b, 0x80f0, 0x5225, 0xd51e, 0x914b, 0x1, 0x0);
        gbc.writeMem(0xcefb, { 0x2f });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x613b, gbc.sp());
        EXPECT(0xcefc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xcefb));
        // 2F 03BF
        gbc.setState(0xb0ef, 0xea53, 0x5490, 0xa18c, 0x1b7c, 0xa15b, 0x1, 0x1);
        gbc.writeMem(0xb0ef, { 0x2f });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xea53, gbc.sp());
        EXPECT(0xb0f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xb0ef));
        // 2F 03C0
        gbc.setState(0x6a23, 0xcb9c, 0x4100, 0x3e21, 0x81fd, 0x19cf, 0x1, 0x0);
        gbc.writeMem(0x6a23, { 0x2f });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xcb9c, gbc.sp());
        EXPECT(0x6a24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 03C2
        gbc.setState(0x8ac9, 0xfac, 0x88f0, 0xccf9, 0x4646, 0x50ff, 0x1, 0x1);
        gbc.writeMem(0x8ac9, { 0x2f });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xfac, gbc.sp());
        EXPECT(0x8aca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8ac9));
        // 2F 03C3
        gbc.setState(0xccf9, 0xf9f9, 0x69f0, 0x71de, 0x7cce, 0xcf84, 0x0, 0x1);
        gbc.writeMem(0xccf9, { 0x2f });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xf9f9, gbc.sp());
        EXPECT(0xccfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xccf9));
        // 2F 03C4
        gbc.setState(0x505b, 0x4756, 0x3d10, 0x28c0, 0xaddf, 0x588e, 0x1, 0x1);
        gbc.writeMem(0x505b, { 0x2f });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x4756, gbc.sp());
        EXPECT(0x505c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 03C6
        gbc.setState(0x6ac5, 0xb38e, 0xd9c0, 0xca3d, 0xe204, 0xfc07, 0x1, 0x0);
        gbc.writeMem(0x6ac5, { 0x2f });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xb38e, gbc.sp());
        EXPECT(0x6ac6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 03C7
        gbc.setState(0x2fd, 0xe817, 0xdd90, 0xb9e4, 0x8ac7, 0x315b, 0x0, 0x0);
        gbc.writeMem(0x2fd, { 0x2f });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xe817, gbc.sp());
        EXPECT(0x2fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 03C8
        gbc.setState(0xa4d2, 0x21c0, 0x6f70, 0xbf6c, 0x4b63, 0xf06, 0x1, 0x0);
        gbc.writeMem(0xa4d2, { 0x2f });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x21c0, gbc.sp());
        EXPECT(0xa4d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xa4d2));
        // 2F 03C9
        gbc.setState(0x7774, 0x707, 0x70f0, 0x1e8c, 0x7da4, 0x4b4e, 0x0, 0x1);
        gbc.writeMem(0x7774, { 0x2f });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x707, gbc.sp());
        EXPECT(0x7775, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 03CA
        gbc.setState(0x3ff4, 0xd3df, 0xce50, 0xfd90, 0xe45e, 0x5c50, 0x1, 0x0);
        gbc.writeMem(0x3ff4, { 0x2f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xd3df, gbc.sp());
        EXPECT(0x3ff5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 03CB
        gbc.setState(0x1cdb, 0x121a, 0x6780, 0xb38f, 0x7dd5, 0x765a, 0x1, 0x0);
        gbc.writeMem(0x1cdb, { 0x2f });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x121a, gbc.sp());
        EXPECT(0x1cdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 03CC
        gbc.setState(0x156f, 0x8d04, 0x56f0, 0x812, 0xb3d0, 0xd295, 0x0, 0x0);
        gbc.writeMem(0x156f, { 0x2f });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8d04, gbc.sp());
        EXPECT(0x1570, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 03CD
        gbc.setState(0x43f9, 0xb47e, 0xe090, 0x7609, 0xb53, 0x89ae, 0x0, 0x1);
        gbc.writeMem(0x43f9, { 0x2f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xb47e, gbc.sp());
        EXPECT(0x43fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 03CE
        gbc.setState(0x857c, 0x4cae, 0x7e70, 0xe264, 0x4e92, 0x55b5, 0x1, 0x0);
        gbc.writeMem(0x857c, { 0x2f });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x4cae, gbc.sp());
        EXPECT(0x857d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x857c));
        // 2F 03CF
        gbc.setState(0x6b6, 0x3406, 0x9260, 0xe074, 0x9f72, 0x59c7, 0x1, 0x1);
        gbc.writeMem(0x6b6, { 0x2f });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x3406, gbc.sp());
        EXPECT(0x6b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 03D0
        gbc.setState(0xb9db, 0x3f9d, 0xb210, 0x748f, 0x76f6, 0x4cb8, 0x1, 0x1);
        gbc.writeMem(0xb9db, { 0x2f });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x3f9d, gbc.sp());
        EXPECT(0xb9dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xb9db));
        // 2F 03D2
        gbc.setState(0x8eaa, 0xa8c2, 0x79e0, 0xb146, 0xabb, 0x6325, 0x1, 0x1);
        gbc.writeMem(0x8eaa, { 0x2f });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xa8c2, gbc.sp());
        EXPECT(0x8eab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8eaa));
        // 2F 03D3
        gbc.setState(0x24c7, 0x878d, 0xdde0, 0x4b89, 0x30b5, 0x265a, 0x0, 0x0);
        gbc.writeMem(0x24c7, { 0x2f });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x878d, gbc.sp());
        EXPECT(0x24c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 03D4
        gbc.setState(0x6be4, 0x2ce7, 0x93d0, 0x1ae9, 0xa38d, 0x82dd, 0x0, 0x1);
        gbc.writeMem(0x6be4, { 0x2f });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x2ce7, gbc.sp());
        EXPECT(0x6be5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 03D5
        gbc.setState(0x19c0, 0x3f12, 0x38e0, 0xfaa5, 0x887f, 0x1c17, 0x1, 0x1);
        gbc.writeMem(0x19c0, { 0x2f });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3f12, gbc.sp());
        EXPECT(0x19c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 03D6
        gbc.setState(0xbccc, 0x170e, 0x1e90, 0x53d9, 0xf35f, 0xcecf, 0x1, 0x0);
        gbc.writeMem(0xbccc, { 0x2f });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x170e, gbc.sp());
        EXPECT(0xbccd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xbccc));
        // 2F 03D7
        gbc.setState(0x84b2, 0xd369, 0xe1b0, 0xa7c5, 0xd113, 0x5c97, 0x1, 0x0);
        gbc.writeMem(0x84b2, { 0x2f });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xd369, gbc.sp());
        EXPECT(0x84b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x84b2));
        // 2F 03D8
        gbc.setState(0xb54c, 0x3e24, 0xae0, 0x9f01, 0xffb9, 0x6dfb, 0x1, 0x1);
        gbc.writeMem(0xb54c, { 0x2f });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x3e24, gbc.sp());
        EXPECT(0xb54d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xb54c));
        // 2F 03D9
        gbc.setState(0xa269, 0xd98c, 0x97e0, 0x26d1, 0xc0e8, 0x8486, 0x0, 0x0);
        gbc.writeMem(0xa269, { 0x2f });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xd98c, gbc.sp());
        EXPECT(0xa26a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xa269));
        // 2F 03DA
        gbc.setState(0x9b12, 0xf185, 0x8960, 0x1e23, 0x8b61, 0xf03f, 0x1, 0x1);
        gbc.writeMem(0x9b12, { 0x2f });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xf185, gbc.sp());
        EXPECT(0x9b13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x9b12));
        // 2F 03DB
        gbc.setState(0x200c, 0x26ae, 0x4b60, 0xbd44, 0xfa95, 0x72ee, 0x1, 0x1);
        gbc.writeMem(0x200c, { 0x2f });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x26ae, gbc.sp());
        EXPECT(0x200d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 03DC
        gbc.setState(0xd4fb, 0x326e, 0x8a10, 0x1ae9, 0x45cf, 0x89d6, 0x1, 0x1);
        gbc.writeMem(0xd4fb, { 0x2f });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x326e, gbc.sp());
        EXPECT(0xd4fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xd4fb));
        // 2F 03DD
        gbc.setState(0xd71d, 0xc073, 0xe170, 0xe766, 0xb6af, 0xc2ff, 0x1, 0x0);
        gbc.writeMem(0xd71d, { 0x2f });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xc073, gbc.sp());
        EXPECT(0xd71e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xd71d));
        // 2F 03DE
        gbc.setState(0x951d, 0x7641, 0x75a0, 0x82d9, 0x99aa, 0x7c47, 0x0, 0x0);
        gbc.writeMem(0x951d, { 0x2f });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x7641, gbc.sp());
        EXPECT(0x951e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x951d));
        // 2F 03DF
        gbc.setState(0xc0f0, 0xd891, 0x7900, 0xbf08, 0xa234, 0x7a9b, 0x1, 0x1);
        gbc.writeMem(0xc0f0, { 0x2f });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xd891, gbc.sp());
        EXPECT(0xc0f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xc0f0));
        // 2F 03E0
        gbc.setState(0xd749, 0x4b96, 0xf610, 0x39b2, 0xaeba, 0xc9d0, 0x0, 0x1);
        gbc.writeMem(0xd749, { 0x2f });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x4b96, gbc.sp());
        EXPECT(0xd74a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xd749));
        // 2F 03E1
        gbc.setState(0x5618, 0xa796, 0x7cc0, 0x1fd0, 0x62bb, 0xce75, 0x1, 0x1);
        gbc.writeMem(0x5618, { 0x2f });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xa796, gbc.sp());
        EXPECT(0x5619, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2F 03E2
        gbc.setState(0x1e5, 0xb7fc, 0x1bd0, 0x1318, 0x425b, 0x85ae, 0x1, 0x0);
        gbc.writeMem(0x1e5, { 0x2f });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xb7fc, gbc.sp());
        EXPECT(0x1e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 03E3
        gbc.setState(0x515c, 0x9b53, 0x8b70, 0x2ffd, 0x5f3a, 0x60ee, 0x1, 0x1);
        gbc.writeMem(0x515c, { 0x2f });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x9b53, gbc.sp());
        EXPECT(0x515d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2F 03E4
        gbc.setState(0xc91c, 0x555e, 0x59e0, 0xfc20, 0x9460, 0x447d, 0x1, 0x1);
        gbc.writeMem(0xc91c, { 0x2f });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x555e, gbc.sp());
        EXPECT(0xc91d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xc91c));
        // 2F 03E5
        gbc.setState(0x8a63, 0xe9b3, 0x45f0, 0x8ce4, 0xb90e, 0x2a7a, 0x0, 0x1);
        gbc.writeMem(0x8a63, { 0x2f });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xe9b3, gbc.sp());
        EXPECT(0x8a64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8a63));
        // 2F 03E7
        gbc.setState(0x1f6d, 0xead7, 0xcea0, 0xedc6, 0x7de7, 0x135b, 0x0, 0x0);
        gbc.writeMem(0x1f6d, { 0x2f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xead7, gbc.sp());
        EXPECT(0x1f6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
