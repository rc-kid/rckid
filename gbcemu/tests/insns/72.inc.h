    TEST(gbcemu, opcode_72) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 72 0000
        gbc.setState(0x7d52, 0xbf4e, 0xfd30, 0x5c8, 0x6a27, 0xf965, 0x1, 0x1);
        gbc.writeMem(0x7d52, { 0x72 });
        gbc.writeMem(0xf965, { 0x0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xbf4e, gbc.sp());
        EXPECT(0x7d53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xf965));
        // 72 0001
        gbc.setState(0x6e32, 0x33f5, 0x65a0, 0xa5ee, 0x6a28, 0xb8f1, 0x0, 0x0);
        gbc.writeMem(0x6e32, { 0x72 });
        gbc.writeMem(0xb8f1, { 0x0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x33f5, gbc.sp());
        EXPECT(0x6e33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xb8f1));
        // 72 0004
        gbc.setState(0x99e7, 0x7cc3, 0xf870, 0xb117, 0x69c1, 0xa950, 0x0, 0x0);
        gbc.writeMem(0x99e7, { 0x72 });
        gbc.writeMem(0xa950, { 0x0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x7cc3, gbc.sp());
        EXPECT(0x99e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x99e7));
        EXPECT(0x69, gbc.readMem(0xa950));
        // 72 0007
        gbc.setState(0x5940, 0x637c, 0x450, 0x6a4, 0x4802, 0xa35e, 0x1, 0x1);
        gbc.writeMem(0x5940, { 0x72 });
        gbc.writeMem(0xa35e, { 0x0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x637c, gbc.sp());
        EXPECT(0x5941, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xa35e));
        // 72 000C
        gbc.setState(0xc80f, 0x47e8, 0xccd0, 0xdcd8, 0xeb88, 0xa78c, 0x0, 0x0);
        gbc.writeMem(0xa78c, { 0x0 });
        gbc.writeMem(0xc80f, { 0x72 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x47e8, gbc.sp());
        EXPECT(0xc810, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0xa78c));
        EXPECT(0x72, gbc.readMem(0xc80f));
        // 72 000D
        gbc.setState(0x108b, 0xdc0, 0xd90, 0x1a8c, 0x1130, 0xf74d, 0x0, 0x1);
        gbc.writeMem(0x108b, { 0x72 });
        gbc.writeMem(0xf74d, { 0x0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xdc0, gbc.sp());
        EXPECT(0x108c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xf74d));
        // 72 0013
        gbc.setState(0x5a2e, 0x15f8, 0x9710, 0x25, 0x5121, 0xd6be, 0x0, 0x0);
        gbc.writeMem(0x5a2e, { 0x72 });
        gbc.writeMem(0xd6be, { 0x0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x15f8, gbc.sp());
        EXPECT(0x5a2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xd6be));
        // 72 0014
        gbc.setState(0x552a, 0x841e, 0x74a0, 0xeae4, 0x314f, 0x96be, 0x0, 0x1);
        gbc.writeMem(0x552a, { 0x72 });
        gbc.writeMem(0x96be, { 0x0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x841e, gbc.sp());
        EXPECT(0x552b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x96be));
        // 72 0015
        gbc.setState(0x9fae, 0xa132, 0xc070, 0xae1f, 0xdd8a, 0xf89e, 0x1, 0x1);
        gbc.writeMem(0x9fae, { 0x72 });
        gbc.writeMem(0xf89e, { 0x0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xa132, gbc.sp());
        EXPECT(0x9faf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x9fae));
        EXPECT(0xdd, gbc.readMem(0xf89e));
        // 72 0018
        gbc.setState(0x5, 0xe131, 0xe0a0, 0x2686, 0xd738, 0xfc92, 0x1, 0x0);
        gbc.writeMem(0x5, { 0x72 });
        gbc.writeMem(0xfc92, { 0x0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xe131, gbc.sp());
        EXPECT(0x6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xfc92));
        // 72 001B
        gbc.setState(0x7ecb, 0xed67, 0x1430, 0xbf43, 0xddb5, 0xe5fd, 0x1, 0x0);
        gbc.writeMem(0x7ecb, { 0x72 });
        gbc.writeMem(0xe5fd, { 0x0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xed67, gbc.sp());
        EXPECT(0x7ecc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xe5fd));
        // 72 001C
        gbc.setState(0xec77, 0xf0b4, 0xcaf0, 0xe0b9, 0x5155, 0xcb40, 0x0, 0x0);
        gbc.writeMem(0xcb40, { 0x0 });
        gbc.writeMem(0xec77, { 0x72 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xf0b4, gbc.sp());
        EXPECT(0xec78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xcb40));
        EXPECT(0x72, gbc.readMem(0xec77));
        // 72 001D
        gbc.setState(0x9bbd, 0xab43, 0x9590, 0x4db, 0x9d81, 0xeae7, 0x0, 0x1);
        gbc.writeMem(0x9bbd, { 0x72 });
        gbc.writeMem(0xeae7, { 0x0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xab43, gbc.sp());
        EXPECT(0x9bbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x9bbd));
        EXPECT(0x9d, gbc.readMem(0xeae7));
        // 72 001E
        gbc.setState(0x7fd7, 0xff78, 0x54f0, 0x4ae8, 0xff7a, 0xd7f7, 0x0, 0x0);
        gbc.writeMem(0x7fd7, { 0x72 });
        gbc.writeMem(0xd7f7, { 0x0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xff78, gbc.sp());
        EXPECT(0x7fd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xd7f7));
        // 72 0020
        gbc.setState(0x8c0f, 0x9bde, 0x79b0, 0x8438, 0xcb13, 0xc361, 0x1, 0x0);
        gbc.writeMem(0x8c0f, { 0x72 });
        gbc.writeMem(0xc361, { 0x0 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x9bde, gbc.sp());
        EXPECT(0x8c10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x8c0f));
        EXPECT(0xcb, gbc.readMem(0xc361));
        // 72 0025
        gbc.setState(0x760, 0x1d56, 0x3a90, 0x8b81, 0x6d8c, 0xe91b, 0x1, 0x1);
        gbc.writeMem(0x760, { 0x72 });
        gbc.writeMem(0xe91b, { 0x0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x1d56, gbc.sp());
        EXPECT(0x761, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xe91b));
        // 72 0026
        gbc.setState(0x8148, 0xc444, 0xa6f0, 0x984, 0x6669, 0xed63, 0x1, 0x0);
        gbc.writeMem(0x8148, { 0x72 });
        gbc.writeMem(0xed63, { 0x0 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xc444, gbc.sp());
        EXPECT(0x8149, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x8148));
        EXPECT(0x66, gbc.readMem(0xed63));
        // 72 002A
        gbc.setState(0x405a, 0x2b9, 0xdb70, 0xe0ab, 0x5beb, 0xd0fd, 0x0, 0x0);
        gbc.writeMem(0x405a, { 0x72 });
        gbc.writeMem(0xd0fd, { 0x0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x2b9, gbc.sp());
        EXPECT(0x405b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xd0fd));
        // 72 002B
        gbc.setState(0xc618, 0xa567, 0xc910, 0x97c9, 0x9387, 0xa5d0, 0x1, 0x0);
        gbc.writeMem(0xa5d0, { 0x0 });
        gbc.writeMem(0xc618, { 0x72 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xa567, gbc.sp());
        EXPECT(0xc619, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xa5d0));
        EXPECT(0x72, gbc.readMem(0xc618));
        // 72 002F
        gbc.setState(0xbb39, 0x25fe, 0x3aa0, 0x7f1, 0x6f3a, 0xad07, 0x1, 0x1);
        gbc.writeMem(0xad07, { 0x0 });
        gbc.writeMem(0xbb39, { 0x72 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x25fe, gbc.sp());
        EXPECT(0xbb3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0xad07));
        EXPECT(0x72, gbc.readMem(0xbb39));
        // 72 0030
        gbc.setState(0x2ca3, 0xdb63, 0x8fd0, 0xa69a, 0x3fcf, 0x9964, 0x0, 0x1);
        gbc.writeMem(0x2ca3, { 0x72 });
        gbc.writeMem(0x9964, { 0x0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xdb63, gbc.sp());
        EXPECT(0x2ca4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x9964));
        // 72 0032
        gbc.setState(0x25da, 0xae7f, 0xa4f0, 0x8374, 0x44f0, 0xd112, 0x0, 0x0);
        gbc.writeMem(0x25da, { 0x72 });
        gbc.writeMem(0xd112, { 0x0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xae7f, gbc.sp());
        EXPECT(0x25db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xd112));
        // 72 0034
        gbc.setState(0xa74c, 0x8633, 0x2260, 0x1ee4, 0xaa94, 0xd857, 0x0, 0x0);
        gbc.writeMem(0xa74c, { 0x72 });
        gbc.writeMem(0xd857, { 0x0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x8633, gbc.sp());
        EXPECT(0xa74d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xa74c));
        EXPECT(0xaa, gbc.readMem(0xd857));
        // 72 0035
        gbc.setState(0xc639, 0xe50d, 0x8350, 0x61da, 0x1695, 0xc9ee, 0x0, 0x0);
        gbc.writeMem(0xc639, { 0x72 });
        gbc.writeMem(0xc9ee, { 0x0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xe50d, gbc.sp());
        EXPECT(0xc63a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xc639));
        EXPECT(0x16, gbc.readMem(0xc9ee));
        // 72 0037
        gbc.setState(0xbe04, 0xcb7e, 0x6e0, 0x58d5, 0x5e75, 0xf86c, 0x0, 0x0);
        gbc.writeMem(0xbe04, { 0x72 });
        gbc.writeMem(0xf86c, { 0x0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xcb7e, gbc.sp());
        EXPECT(0xbe05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xbe04));
        EXPECT(0x5e, gbc.readMem(0xf86c));
        // 72 0039
        gbc.setState(0xac85, 0x8e7b, 0x5910, 0x2c63, 0x4b5a, 0xe53c, 0x1, 0x1);
        gbc.writeMem(0xac85, { 0x72 });
        gbc.writeMem(0xe53c, { 0x0 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x8e7b, gbc.sp());
        EXPECT(0xac86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xac85));
        EXPECT(0x4b, gbc.readMem(0xe53c));
        // 72 003A
        gbc.setState(0x4eb9, 0x709c, 0xc060, 0xe69c, 0x1ce9, 0x9484, 0x0, 0x0);
        gbc.writeMem(0x4eb9, { 0x72 });
        gbc.writeMem(0x9484, { 0x0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x709c, gbc.sp());
        EXPECT(0x4eba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0x9484));
        // 72 003C
        gbc.setState(0xecd7, 0xd7ca, 0xd80, 0xe46d, 0x68, 0xa9c1, 0x0, 0x1);
        gbc.writeMem(0xa9c1, { 0x0 });
        gbc.writeMem(0xecd7, { 0x72 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xd7ca, gbc.sp());
        EXPECT(0xecd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xa9c1));
        EXPECT(0x72, gbc.readMem(0xecd7));
        // 72 0041
        gbc.setState(0x48ef, 0xb17c, 0x3ad0, 0xc592, 0x5a43, 0xe300, 0x0, 0x0);
        gbc.writeMem(0x48ef, { 0x72 });
        gbc.writeMem(0xe300, { 0x0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xb17c, gbc.sp());
        EXPECT(0x48f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0xe300));
        // 72 0042
        gbc.setState(0xc9b7, 0xa6a5, 0x6b90, 0x4a29, 0x75c5, 0xe060, 0x1, 0x1);
        gbc.writeMem(0xc9b7, { 0x72 });
        gbc.writeMem(0xe060, { 0x0 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa6a5, gbc.sp());
        EXPECT(0xc9b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xc9b7));
        EXPECT(0x75, gbc.readMem(0xe060));
        // 72 0044
        gbc.setState(0x4a66, 0xa5e4, 0x7bc0, 0xdd3c, 0x49f, 0xc4c5, 0x1, 0x1);
        gbc.writeMem(0x4a66, { 0x72 });
        gbc.writeMem(0xc4c5, { 0x0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xa5e4, gbc.sp());
        EXPECT(0x4a67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xc4c5));
        // 72 0045
        gbc.setState(0xe4e4, 0x5596, 0x130, 0x8335, 0x7fc1, 0xf2b6, 0x0, 0x0);
        gbc.writeMem(0xe4e4, { 0x72 });
        gbc.writeMem(0xf2b6, { 0x0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x5596, gbc.sp());
        EXPECT(0xe4e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xe4e4));
        EXPECT(0x7f, gbc.readMem(0xf2b6));
        // 72 0046
        gbc.setState(0x930, 0x45d1, 0x97c0, 0xa3a, 0xba7a, 0xc02b, 0x0, 0x0);
        gbc.writeMem(0x930, { 0x72 });
        gbc.writeMem(0xc02b, { 0x0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x45d1, gbc.sp());
        EXPECT(0x931, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xc02b));
        // 72 0048
        gbc.setState(0x78c6, 0xfd93, 0x1be0, 0x58b, 0xe2d5, 0x98b0, 0x1, 0x1);
        gbc.writeMem(0x78c6, { 0x72 });
        gbc.writeMem(0x98b0, { 0x0 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xfd93, gbc.sp());
        EXPECT(0x78c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0x98b0));
        // 72 004B
        gbc.setState(0xc744, 0xe013, 0x9890, 0xd730, 0x3bda, 0x9ce5, 0x1, 0x1);
        gbc.writeMem(0x9ce5, { 0x0 });
        gbc.writeMem(0xc744, { 0x72 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xe013, gbc.sp());
        EXPECT(0xc745, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x9ce5));
        EXPECT(0x72, gbc.readMem(0xc744));
        // 72 004D
        gbc.setState(0x8597, 0x793b, 0xfae0, 0xf5d2, 0xb4f7, 0xda66, 0x0, 0x1);
        gbc.writeMem(0x8597, { 0x72 });
        gbc.writeMem(0xda66, { 0x0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x793b, gbc.sp());
        EXPECT(0x8598, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x8597));
        EXPECT(0xb4, gbc.readMem(0xda66));
        // 72 004E
        gbc.setState(0x6612, 0x2a85, 0xa510, 0x62e4, 0x4b0b, 0xf5ce, 0x0, 0x0);
        gbc.writeMem(0x6612, { 0x72 });
        gbc.writeMem(0xf5ce, { 0x0 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x2a85, gbc.sp());
        EXPECT(0x6613, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xf5ce));
        // 72 0050
        gbc.setState(0x3dcc, 0x25a6, 0x2610, 0x4302, 0xeb9d, 0x9f86, 0x1, 0x0);
        gbc.writeMem(0x3dcc, { 0x72 });
        gbc.writeMem(0x9f86, { 0x0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x25a6, gbc.sp());
        EXPECT(0x3dcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0x9f86));
        // 72 0051
        gbc.setState(0x4605, 0xe546, 0xbc70, 0x451c, 0x1c41, 0xcc55, 0x0, 0x1);
        gbc.writeMem(0x4605, { 0x72 });
        gbc.writeMem(0xcc55, { 0x0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xe546, gbc.sp());
        EXPECT(0x4606, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xcc55));
        // 72 0052
        gbc.setState(0x8c83, 0x6abb, 0x7c60, 0xdc18, 0xbd97, 0xc78a, 0x0, 0x0);
        gbc.writeMem(0x8c83, { 0x72 });
        gbc.writeMem(0xc78a, { 0x0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x6abb, gbc.sp());
        EXPECT(0x8c84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x8c83));
        EXPECT(0xbd, gbc.readMem(0xc78a));
        // 72 0053
        gbc.setState(0xb638, 0x25f1, 0x1da0, 0x1c86, 0xa7ce, 0xd1be, 0x1, 0x1);
        gbc.writeMem(0xb638, { 0x72 });
        gbc.writeMem(0xd1be, { 0x0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x25f1, gbc.sp());
        EXPECT(0xb639, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xb638));
        EXPECT(0xa7, gbc.readMem(0xd1be));
        // 72 0055
        gbc.setState(0xa894, 0xc19c, 0xf900, 0xd74b, 0x15c4, 0xfdf9, 0x1, 0x0);
        gbc.writeMem(0xa894, { 0x72 });
        gbc.writeMem(0xfdf9, { 0x0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xc19c, gbc.sp());
        EXPECT(0xa895, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xa894));
        EXPECT(0x15, gbc.readMem(0xfdf9));
        // 72 0057
        gbc.setState(0x21, 0xcc26, 0x6c60, 0x3888, 0x998d, 0xdd1a, 0x0, 0x0);
        gbc.writeMem(0x21, { 0x72 });
        gbc.writeMem(0xdd1a, { 0x0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xcc26, gbc.sp());
        EXPECT(0x22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xdd1a));
        // 72 0058
        gbc.setState(0xe8a1, 0x7931, 0xed60, 0x9c64, 0xe324, 0xc0da, 0x1, 0x0);
        gbc.writeMem(0xc0da, { 0x0 });
        gbc.writeMem(0xe8a1, { 0x72 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x7931, gbc.sp());
        EXPECT(0xe8a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0xc0da));
        EXPECT(0x72, gbc.readMem(0xe8a1));
        // 72 0059
        gbc.setState(0x3921, 0xc0fd, 0x1a60, 0xbda2, 0x81f8, 0x80cc, 0x1, 0x1);
        gbc.writeMem(0x3921, { 0x72 });
        gbc.writeMem(0x80cc, { 0x0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xc0fd, gbc.sp());
        EXPECT(0x3922, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x80cc));
        // 72 005A
        gbc.setState(0x8fd4, 0x7e89, 0x8700, 0xbea7, 0x8c1d, 0x972e, 0x0, 0x0);
        gbc.writeMem(0x8fd4, { 0x72 });
        gbc.writeMem(0x972e, { 0x0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x7e89, gbc.sp());
        EXPECT(0x8fd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x8fd4));
        EXPECT(0x8c, gbc.readMem(0x972e));
        // 72 005B
        gbc.setState(0x2297, 0x1339, 0x6730, 0x481f, 0x44cf, 0x8f5b, 0x1, 0x1);
        gbc.writeMem(0x2297, { 0x72 });
        gbc.writeMem(0x8f5b, { 0x0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x1339, gbc.sp());
        EXPECT(0x2298, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x8f5b));
        // 72 005E
        gbc.setState(0x1d82, 0x8edf, 0xdf20, 0xea98, 0x3559, 0x907d, 0x1, 0x1);
        gbc.writeMem(0x1d82, { 0x72 });
        gbc.writeMem(0x907d, { 0x0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x8edf, gbc.sp());
        EXPECT(0x1d83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x907d));
        // 72 005F
        gbc.setState(0x2e0, 0xea0f, 0x87a0, 0x419f, 0x4c2c, 0xfe31, 0x0, 0x1);
        gbc.writeMem(0x2e0, { 0x72 });
        gbc.writeMem(0xfe31, { 0x0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xea0f, gbc.sp());
        EXPECT(0x2e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xfe31));
        // 72 0060
        gbc.setState(0x72d8, 0x1c86, 0x6570, 0x6c16, 0xb3d6, 0x8ff6, 0x0, 0x0);
        gbc.writeMem(0x72d8, { 0x72 });
        gbc.writeMem(0x8ff6, { 0x0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x1c86, gbc.sp());
        EXPECT(0x72d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x8ff6));
        // 72 0061
        gbc.setState(0x2dc9, 0x2d3d, 0x2c60, 0xdf7a, 0x2c34, 0x9357, 0x1, 0x1);
        gbc.writeMem(0x2dc9, { 0x72 });
        gbc.writeMem(0x9357, { 0x0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x2d3d, gbc.sp());
        EXPECT(0x2dca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x9357));
        // 72 0063
        gbc.setState(0x3aee, 0x4f46, 0x4ac0, 0x259c, 0x246b, 0x9cc5, 0x1, 0x1);
        gbc.writeMem(0x3aee, { 0x72 });
        gbc.writeMem(0x9cc5, { 0x0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x4f46, gbc.sp());
        EXPECT(0x3aef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0x9cc5));
        // 72 0064
        gbc.setState(0x5ed, 0x771d, 0x8cd0, 0x35f5, 0xc609, 0xf483, 0x1, 0x0);
        gbc.writeMem(0x5ed, { 0x72 });
        gbc.writeMem(0xf483, { 0x0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x771d, gbc.sp());
        EXPECT(0x5ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xf483));
        // 72 0065
        gbc.setState(0xb482, 0x88ed, 0xfff0, 0xdde5, 0x167, 0x9522, 0x1, 0x0);
        gbc.writeMem(0x9522, { 0x0 });
        gbc.writeMem(0xb482, { 0x72 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x88ed, gbc.sp());
        EXPECT(0xb483, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0x9522));
        EXPECT(0x72, gbc.readMem(0xb482));
        // 72 0068
        gbc.setState(0x22d3, 0x6e5e, 0xc050, 0xc23f, 0xf5e6, 0xd604, 0x0, 0x1);
        gbc.writeMem(0x22d3, { 0x72 });
        gbc.writeMem(0xd604, { 0x0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x6e5e, gbc.sp());
        EXPECT(0x22d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xd604));
        // 72 006C
        gbc.setState(0x1841, 0x5707, 0x8450, 0xd6a0, 0xc844, 0x9e74, 0x1, 0x1);
        gbc.writeMem(0x1841, { 0x72 });
        gbc.writeMem(0x9e74, { 0x0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x5707, gbc.sp());
        EXPECT(0x1842, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x9e74));
        // 72 006E
        gbc.setState(0x8638, 0xd8ee, 0xd810, 0xc2bb, 0x43b8, 0xe3f9, 0x0, 0x1);
        gbc.writeMem(0x8638, { 0x72 });
        gbc.writeMem(0xe3f9, { 0x0 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xd8ee, gbc.sp());
        EXPECT(0x8639, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x8638));
        EXPECT(0x43, gbc.readMem(0xe3f9));
        // 72 0071
        gbc.setState(0x9ef2, 0x40e8, 0x4230, 0xfdb3, 0xc8ad, 0x87c2, 0x1, 0x0);
        gbc.writeMem(0x87c2, { 0x0 });
        gbc.writeMem(0x9ef2, { 0x72 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x40e8, gbc.sp());
        EXPECT(0x9ef3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x87c2));
        EXPECT(0x72, gbc.readMem(0x9ef2));
        // 72 0073
        gbc.setState(0x6cf7, 0xfa95, 0x60c0, 0x3c70, 0xfa89, 0x9a14, 0x1, 0x1);
        gbc.writeMem(0x6cf7, { 0x72 });
        gbc.writeMem(0x9a14, { 0x0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xfa95, gbc.sp());
        EXPECT(0x6cf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x9a14));
        // 72 0075
        gbc.setState(0x8784, 0x60a7, 0x8a0, 0x1403, 0x76c, 0xb53f, 0x0, 0x1);
        gbc.writeMem(0x8784, { 0x72 });
        gbc.writeMem(0xb53f, { 0x0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x60a7, gbc.sp());
        EXPECT(0x8785, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x8784));
        EXPECT(0x7, gbc.readMem(0xb53f));
        // 72 0077
        gbc.setState(0xc9d1, 0x511, 0xc280, 0xbf0d, 0x915, 0x9399, 0x0, 0x1);
        gbc.writeMem(0x9399, { 0x0 });
        gbc.writeMem(0xc9d1, { 0x72 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x511, gbc.sp());
        EXPECT(0xc9d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x9399));
        EXPECT(0x72, gbc.readMem(0xc9d1));
        // 72 0078
        gbc.setState(0x20cf, 0x54e1, 0x8cc0, 0x39e6, 0x649a, 0xc3ce, 0x1, 0x0);
        gbc.writeMem(0x20cf, { 0x72 });
        gbc.writeMem(0xc3ce, { 0x0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x54e1, gbc.sp());
        EXPECT(0x20d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xc3ce));
        // 72 0079
        gbc.setState(0xeac3, 0x7e45, 0x89e0, 0x8c77, 0xac0f, 0x8c24, 0x1, 0x1);
        gbc.writeMem(0x8c24, { 0x0 });
        gbc.writeMem(0xeac3, { 0x72 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x7e45, gbc.sp());
        EXPECT(0xeac4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x8c24));
        EXPECT(0x72, gbc.readMem(0xeac3));
        // 72 007A
        gbc.setState(0x4723, 0x7c7d, 0x79c0, 0xafd1, 0x3683, 0xd9ab, 0x0, 0x1);
        gbc.writeMem(0x4723, { 0x72 });
        gbc.writeMem(0xd9ab, { 0x0 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7c7d, gbc.sp());
        EXPECT(0x4724, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xd9ab));
        // 72 007B
        gbc.setState(0x3848, 0xd042, 0xc0f0, 0xfecc, 0x64fb, 0xd3b1, 0x1, 0x0);
        gbc.writeMem(0x3848, { 0x72 });
        gbc.writeMem(0xd3b1, { 0x0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xd042, gbc.sp());
        EXPECT(0x3849, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xd3b1));
        // 72 007C
        gbc.setState(0x6f7a, 0xe372, 0x1da0, 0x1559, 0x110d, 0xfc88, 0x1, 0x0);
        gbc.writeMem(0x6f7a, { 0x72 });
        gbc.writeMem(0xfc88, { 0x0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xe372, gbc.sp());
        EXPECT(0x6f7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xfc88));
        // 72 007D
        gbc.setState(0x2af2, 0x2956, 0x4030, 0x1106, 0xaf47, 0xb111, 0x0, 0x0);
        gbc.writeMem(0x2af2, { 0x72 });
        gbc.writeMem(0xb111, { 0x0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x2956, gbc.sp());
        EXPECT(0x2af3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0xb111));
        // 72 007E
        gbc.setState(0xb1ac, 0x1aff, 0xb200, 0x215d, 0xc53f, 0xaeaa, 0x0, 0x1);
        gbc.writeMem(0xaeaa, { 0x0 });
        gbc.writeMem(0xb1ac, { 0x72 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x1aff, gbc.sp());
        EXPECT(0xb1ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xaeaa));
        EXPECT(0x72, gbc.readMem(0xb1ac));
        // 72 007F
        gbc.setState(0xc477, 0x3de1, 0xc70, 0x3e26, 0xc2fa, 0x89f3, 0x0, 0x1);
        gbc.writeMem(0x89f3, { 0x0 });
        gbc.writeMem(0xc477, { 0x72 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x3de1, gbc.sp());
        EXPECT(0xc478, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x89f3));
        EXPECT(0x72, gbc.readMem(0xc477));
        // 72 0081
        gbc.setState(0x714e, 0xe786, 0x7a0, 0xb141, 0x43ac, 0xa71a, 0x1, 0x1);
        gbc.writeMem(0x714e, { 0x72 });
        gbc.writeMem(0xa71a, { 0x0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xe786, gbc.sp());
        EXPECT(0x714f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa71a));
        // 72 0088
        gbc.setState(0x73ab, 0xb1c4, 0xe8c0, 0x669, 0xc478, 0xcd9b, 0x0, 0x0);
        gbc.writeMem(0x73ab, { 0x72 });
        gbc.writeMem(0xcd9b, { 0x0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xb1c4, gbc.sp());
        EXPECT(0x73ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0xcd9b));
        // 72 0089
        gbc.setState(0xc82b, 0xf4bb, 0x1110, 0x9ca8, 0x23a7, 0xe4b3, 0x0, 0x0);
        gbc.writeMem(0xc82b, { 0x72 });
        gbc.writeMem(0xe4b3, { 0x0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xf4bb, gbc.sp());
        EXPECT(0xc82c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xc82b));
        EXPECT(0x23, gbc.readMem(0xe4b3));
        // 72 008A
        gbc.setState(0x741c, 0x6a6a, 0xd920, 0x60a7, 0x3409, 0xef03, 0x0, 0x1);
        gbc.writeMem(0x741c, { 0x72 });
        gbc.writeMem(0xef03, { 0x0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x6a6a, gbc.sp());
        EXPECT(0x741d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xef03));
        // 72 008D
        gbc.setState(0x912b, 0xaec2, 0x3e20, 0x4cda, 0x795, 0xd556, 0x1, 0x0);
        gbc.writeMem(0x912b, { 0x72 });
        gbc.writeMem(0xd556, { 0x0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xaec2, gbc.sp());
        EXPECT(0x912c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x912b));
        EXPECT(0x7, gbc.readMem(0xd556));
        // 72 008F
        gbc.setState(0x9ceb, 0x228d, 0x6730, 0xfbc3, 0x5631, 0xc1f0, 0x0, 0x0);
        gbc.writeMem(0x9ceb, { 0x72 });
        gbc.writeMem(0xc1f0, { 0x0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x228d, gbc.sp());
        EXPECT(0x9cec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x9ceb));
        EXPECT(0x56, gbc.readMem(0xc1f0));
        // 72 0090
        gbc.setState(0x4e27, 0x5002, 0xb900, 0xbf13, 0x7320, 0xc304, 0x0, 0x1);
        gbc.writeMem(0x4e27, { 0x72 });
        gbc.writeMem(0xc304, { 0x0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x5002, gbc.sp());
        EXPECT(0x4e28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xc304));
        // 72 0091
        gbc.setState(0xd1d, 0x9dd3, 0x1400, 0xc26e, 0xb05a, 0xdb21, 0x1, 0x1);
        gbc.writeMem(0xd1d, { 0x72 });
        gbc.writeMem(0xdb21, { 0x0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x9dd3, gbc.sp());
        EXPECT(0xd1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xdb21));
        // 72 0093
        gbc.setState(0x6ca7, 0x2bef, 0x4b10, 0xafc5, 0xe7b0, 0xd469, 0x0, 0x0);
        gbc.writeMem(0x6ca7, { 0x72 });
        gbc.writeMem(0xd469, { 0x0 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x2bef, gbc.sp());
        EXPECT(0x6ca8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xd469));
        // 72 0098
        gbc.setState(0x4043, 0x4e51, 0x1130, 0xa6bf, 0x3449, 0x999d, 0x1, 0x0);
        gbc.writeMem(0x4043, { 0x72 });
        gbc.writeMem(0x999d, { 0x0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x4e51, gbc.sp());
        EXPECT(0x4044, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x999d));
        // 72 0099
        gbc.setState(0xa9bf, 0xf793, 0xd610, 0x46ee, 0x7f6c, 0xa8cd, 0x0, 0x0);
        gbc.writeMem(0xa8cd, { 0x0 });
        gbc.writeMem(0xa9bf, { 0x72 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xf793, gbc.sp());
        EXPECT(0xa9c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xa8cd));
        EXPECT(0x72, gbc.readMem(0xa9bf));
        // 72 009D
        gbc.setState(0xc2ca, 0xbae1, 0x48c0, 0x4250, 0xcb05, 0xde3a, 0x1, 0x0);
        gbc.writeMem(0xc2ca, { 0x72 });
        gbc.writeMem(0xde3a, { 0x0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xbae1, gbc.sp());
        EXPECT(0xc2cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xc2ca));
        EXPECT(0xcb, gbc.readMem(0xde3a));
        // 72 009E
        gbc.setState(0x950e, 0xcf77, 0x5b0, 0x49d6, 0x567f, 0xdf6e, 0x0, 0x1);
        gbc.writeMem(0x950e, { 0x72 });
        gbc.writeMem(0xdf6e, { 0x0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xcf77, gbc.sp());
        EXPECT(0x950f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x950e));
        EXPECT(0x56, gbc.readMem(0xdf6e));
        // 72 00A2
        gbc.setState(0x6fe3, 0x374d, 0x70b0, 0xa913, 0xfe96, 0xcc6d, 0x0, 0x1);
        gbc.writeMem(0x6fe3, { 0x72 });
        gbc.writeMem(0xcc6d, { 0x0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x374d, gbc.sp());
        EXPECT(0x6fe4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xcc6d));
        // 72 00A4
        gbc.setState(0xa54c, 0x33fe, 0xa830, 0x72b9, 0xa1cb, 0xf907, 0x1, 0x0);
        gbc.writeMem(0xa54c, { 0x72 });
        gbc.writeMem(0xf907, { 0x0 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x33fe, gbc.sp());
        EXPECT(0xa54d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xa54c));
        EXPECT(0xa1, gbc.readMem(0xf907));
        // 72 00A5
        gbc.setState(0x768, 0x6997, 0x5a60, 0xe83, 0xde87, 0x8bb0, 0x1, 0x0);
        gbc.writeMem(0x768, { 0x72 });
        gbc.writeMem(0x8bb0, { 0x0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x6997, gbc.sp());
        EXPECT(0x769, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0x8bb0));
        // 72 00A9
        gbc.setState(0x5ff6, 0x7509, 0xe1c0, 0xfa26, 0x25cf, 0x8571, 0x0, 0x1);
        gbc.writeMem(0x5ff6, { 0x72 });
        gbc.writeMem(0x8571, { 0x0 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x7509, gbc.sp());
        EXPECT(0x5ff7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x8571));
        // 72 00AA
        gbc.setState(0x8ebe, 0xe024, 0x3b10, 0xc2e2, 0x9528, 0xdb17, 0x1, 0x0);
        gbc.writeMem(0x8ebe, { 0x72 });
        gbc.writeMem(0xdb17, { 0x0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xe024, gbc.sp());
        EXPECT(0x8ebf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x8ebe));
        EXPECT(0x95, gbc.readMem(0xdb17));
        // 72 00AB
        gbc.setState(0xc82c, 0x6714, 0x6960, 0xaf89, 0xe580, 0xe56f, 0x0, 0x0);
        gbc.writeMem(0xc82c, { 0x72 });
        gbc.writeMem(0xe56f, { 0x0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x6714, gbc.sp());
        EXPECT(0xc82d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xc82c));
        EXPECT(0xe5, gbc.readMem(0xe56f));
        // 72 00AC
        gbc.setState(0x4c3c, 0xae23, 0x4700, 0xf10a, 0x6e6d, 0x8a32, 0x1, 0x0);
        gbc.writeMem(0x4c3c, { 0x72 });
        gbc.writeMem(0x8a32, { 0x0 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xae23, gbc.sp());
        EXPECT(0x4c3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x8a32));
        // 72 00B0
        gbc.setState(0xdcfc, 0x84f0, 0x4770, 0xe031, 0x8492, 0xb549, 0x0, 0x1);
        gbc.writeMem(0xb549, { 0x0 });
        gbc.writeMem(0xdcfc, { 0x72 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x84f0, gbc.sp());
        EXPECT(0xdcfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0xb549));
        EXPECT(0x72, gbc.readMem(0xdcfc));
        // 72 00B1
        gbc.setState(0xd3ad, 0xc019, 0xf010, 0x959a, 0x8263, 0xae74, 0x0, 0x1);
        gbc.writeMem(0xae74, { 0x0 });
        gbc.writeMem(0xd3ad, { 0x72 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xc019, gbc.sp());
        EXPECT(0xd3ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xae74));
        EXPECT(0x72, gbc.readMem(0xd3ad));
        // 72 00B3
        gbc.setState(0xc15b, 0x4797, 0xaaa0, 0xc371, 0x2902, 0xbdff, 0x1, 0x0);
        gbc.writeMem(0xbdff, { 0x0 });
        gbc.writeMem(0xc15b, { 0x72 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x4797, gbc.sp());
        EXPECT(0xc15c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xbdff));
        EXPECT(0x72, gbc.readMem(0xc15b));
        // 72 00B4
        gbc.setState(0x9604, 0x8d00, 0x92f0, 0xbe74, 0xacb, 0xc5a1, 0x0, 0x0);
        gbc.writeMem(0x9604, { 0x72 });
        gbc.writeMem(0xc5a1, { 0x0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x8d00, gbc.sp());
        EXPECT(0x9605, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x9604));
        EXPECT(0xa, gbc.readMem(0xc5a1));
        // 72 00B6
        gbc.setState(0xbc5e, 0x7b22, 0x9eb0, 0x92c, 0x5ab6, 0x818c, 0x0, 0x1);
        gbc.writeMem(0x818c, { 0x0 });
        gbc.writeMem(0xbc5e, { 0x72 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x7b22, gbc.sp());
        EXPECT(0xbc5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0x818c));
        EXPECT(0x72, gbc.readMem(0xbc5e));
        // 72 00B8
        gbc.setState(0x996c, 0x2637, 0xd980, 0xd8a5, 0x276a, 0xf235, 0x0, 0x1);
        gbc.writeMem(0x996c, { 0x72 });
        gbc.writeMem(0xf235, { 0x0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x2637, gbc.sp());
        EXPECT(0x996d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x996c));
        EXPECT(0x27, gbc.readMem(0xf235));
        // 72 00B9
        gbc.setState(0x3cde, 0x5a7a, 0xad20, 0xcdc6, 0xf5c0, 0xb6aa, 0x1, 0x0);
        gbc.writeMem(0x3cde, { 0x72 });
        gbc.writeMem(0xb6aa, { 0x0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x5a7a, gbc.sp());
        EXPECT(0x3cdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xb6aa));
        // 72 00BC
        gbc.setState(0x2a81, 0xcfd8, 0x1b40, 0xd516, 0x3d61, 0xecf4, 0x0, 0x1);
        gbc.writeMem(0x2a81, { 0x72 });
        gbc.writeMem(0xecf4, { 0x0 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xcfd8, gbc.sp());
        EXPECT(0x2a82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0xecf4));
        // 72 00BD
        gbc.setState(0xc76e, 0x3e9d, 0xf7a0, 0xd63e, 0x930e, 0xbebf, 0x0, 0x0);
        gbc.writeMem(0xbebf, { 0x0 });
        gbc.writeMem(0xc76e, { 0x72 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x3e9d, gbc.sp());
        EXPECT(0xc76f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xbebf));
        EXPECT(0x72, gbc.readMem(0xc76e));
        // 72 00BE
        gbc.setState(0x6c2b, 0xc68f, 0x7a30, 0xf298, 0xa0b7, 0xe2ab, 0x0, 0x1);
        gbc.writeMem(0x6c2b, { 0x72 });
        gbc.writeMem(0xe2ab, { 0x0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xc68f, gbc.sp());
        EXPECT(0x6c2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xe2ab));
        // 72 00BF
        gbc.setState(0x777, 0x321c, 0x6360, 0xdbab, 0xa00e, 0xc3d5, 0x1, 0x0);
        gbc.writeMem(0x777, { 0x72 });
        gbc.writeMem(0xc3d5, { 0x0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x321c, gbc.sp());
        EXPECT(0x778, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xc3d5));
        // 72 00C0
        gbc.setState(0x11d2, 0x943, 0xdcb0, 0xdb50, 0x592a, 0xce2e, 0x1, 0x1);
        gbc.writeMem(0x11d2, { 0x72 });
        gbc.writeMem(0xce2e, { 0x0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x943, gbc.sp());
        EXPECT(0x11d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0xce2e));
        // 72 00C1
        gbc.setState(0x1996, 0xa744, 0x2160, 0xc3d5, 0x4851, 0xc709, 0x0, 0x1);
        gbc.writeMem(0x1996, { 0x72 });
        gbc.writeMem(0xc709, { 0x0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa744, gbc.sp());
        EXPECT(0x1997, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xc709));
        // 72 00C3
        gbc.setState(0x3c6d, 0xcba7, 0xaa20, 0x59fb, 0xecc0, 0x86a5, 0x0, 0x0);
        gbc.writeMem(0x3c6d, { 0x72 });
        gbc.writeMem(0x86a5, { 0x0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xcba7, gbc.sp());
        EXPECT(0x3c6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0x86a5));
        // 72 00C4
        gbc.setState(0x7b56, 0xf4e5, 0xd120, 0x7314, 0x7ccf, 0x9e50, 0x1, 0x1);
        gbc.writeMem(0x7b56, { 0x72 });
        gbc.writeMem(0x9e50, { 0x0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xf4e5, gbc.sp());
        EXPECT(0x7b57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0x9e50));
        // 72 00C5
        gbc.setState(0xcf3d, 0x5924, 0xdf60, 0x5227, 0x88af, 0xe016, 0x1, 0x1);
        gbc.writeMem(0xcf3d, { 0x72 });
        gbc.writeMem(0xe016, { 0x0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x5924, gbc.sp());
        EXPECT(0xcf3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xcf3d));
        EXPECT(0x88, gbc.readMem(0xe016));
        // 72 00C6
        gbc.setState(0x56d0, 0x518c, 0xc70, 0x4ba, 0x50ea, 0x8765, 0x1, 0x1);
        gbc.writeMem(0x56d0, { 0x72 });
        gbc.writeMem(0x8765, { 0x0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x518c, gbc.sp());
        EXPECT(0x56d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x8765));
        // 72 00C7
        gbc.setState(0x9c24, 0x94a3, 0xd180, 0x65dd, 0xec4d, 0xe52e, 0x1, 0x1);
        gbc.writeMem(0x9c24, { 0x72 });
        gbc.writeMem(0xe52e, { 0x0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x94a3, gbc.sp());
        EXPECT(0x9c25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x9c24));
        EXPECT(0xec, gbc.readMem(0xe52e));
        // 72 00CA
        gbc.setState(0xd7a2, 0x293d, 0x17e0, 0xbe83, 0x79ea, 0x87b4, 0x1, 0x1);
        gbc.writeMem(0x87b4, { 0x0 });
        gbc.writeMem(0xd7a2, { 0x72 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x293d, gbc.sp());
        EXPECT(0xd7a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x87b4));
        EXPECT(0x72, gbc.readMem(0xd7a2));
        // 72 00CB
        gbc.setState(0x51c9, 0x2756, 0xb180, 0x523e, 0x55d, 0x99b5, 0x1, 0x0);
        gbc.writeMem(0x51c9, { 0x72 });
        gbc.writeMem(0x99b5, { 0x0 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2756, gbc.sp());
        EXPECT(0x51ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x99b5));
        // 72 00CD
        gbc.setState(0x80d6, 0x5fd4, 0xe860, 0x2c7, 0x6fca, 0x8c1f, 0x0, 0x1);
        gbc.writeMem(0x80d6, { 0x72 });
        gbc.writeMem(0x8c1f, { 0x0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x5fd4, gbc.sp());
        EXPECT(0x80d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x80d6));
        EXPECT(0x6f, gbc.readMem(0x8c1f));
        // 72 00CE
        gbc.setState(0xd124, 0xdfb0, 0x6c40, 0xb411, 0x4961, 0xe1ba, 0x0, 0x0);
        gbc.writeMem(0xd124, { 0x72 });
        gbc.writeMem(0xe1ba, { 0x0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xdfb0, gbc.sp());
        EXPECT(0xd125, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xd124));
        EXPECT(0x49, gbc.readMem(0xe1ba));
        // 72 00D2
        gbc.setState(0x476c, 0x939, 0xeb60, 0xafe0, 0xf83f, 0x9ad6, 0x0, 0x1);
        gbc.writeMem(0x476c, { 0x72 });
        gbc.writeMem(0x9ad6, { 0x0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x939, gbc.sp());
        EXPECT(0x476d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x9ad6));
        // 72 00D3
        gbc.setState(0x2fb2, 0x5fb6, 0x9ed0, 0x7197, 0xb62a, 0xb18d, 0x0, 0x1);
        gbc.writeMem(0x2fb2, { 0x72 });
        gbc.writeMem(0xb18d, { 0x0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x5fb6, gbc.sp());
        EXPECT(0x2fb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xb18d));
        // 72 00D4
        gbc.setState(0x8b76, 0xd49d, 0x850, 0x2ea7, 0x7648, 0xc433, 0x0, 0x1);
        gbc.writeMem(0x8b76, { 0x72 });
        gbc.writeMem(0xc433, { 0x0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xd49d, gbc.sp());
        EXPECT(0x8b77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x8b76));
        EXPECT(0x76, gbc.readMem(0xc433));
        // 72 00D5
        gbc.setState(0x5032, 0x6158, 0xba50, 0x6d87, 0xd119, 0x8220, 0x0, 0x0);
        gbc.writeMem(0x5032, { 0x72 });
        gbc.writeMem(0x8220, { 0x0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x6158, gbc.sp());
        EXPECT(0x5033, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0x8220));
        // 72 00D6
        gbc.setState(0xb295, 0xaadc, 0x9440, 0x96e1, 0x422f, 0xe00e, 0x1, 0x0);
        gbc.writeMem(0xb295, { 0x72 });
        gbc.writeMem(0xe00e, { 0x0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xaadc, gbc.sp());
        EXPECT(0xb296, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xb295));
        EXPECT(0x42, gbc.readMem(0xe00e));
        // 72 00DB
        gbc.setState(0x9c5a, 0xeeed, 0xa080, 0x9b74, 0xec0e, 0xfcf3, 0x0, 0x1);
        gbc.writeMem(0x9c5a, { 0x72 });
        gbc.writeMem(0xfcf3, { 0x0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xeeed, gbc.sp());
        EXPECT(0x9c5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x9c5a));
        EXPECT(0xec, gbc.readMem(0xfcf3));
        // 72 00DD
        gbc.setState(0x924d, 0x487b, 0x82e0, 0xf3ac, 0x62c2, 0xa4a0, 0x1, 0x1);
        gbc.writeMem(0x924d, { 0x72 });
        gbc.writeMem(0xa4a0, { 0x0 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x487b, gbc.sp());
        EXPECT(0x924e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x924d));
        EXPECT(0x62, gbc.readMem(0xa4a0));
        // 72 00DF
        gbc.setState(0xd9a4, 0x3b27, 0x2d90, 0x9024, 0x9506, 0xd5ba, 0x0, 0x0);
        gbc.writeMem(0xd5ba, { 0x0 });
        gbc.writeMem(0xd9a4, { 0x72 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x3b27, gbc.sp());
        EXPECT(0xd9a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xd5ba));
        EXPECT(0x72, gbc.readMem(0xd9a4));
        // 72 00E1
        gbc.setState(0xe898, 0xee15, 0x54f0, 0x2efb, 0xe2, 0x8d21, 0x0, 0x1);
        gbc.writeMem(0x8d21, { 0x0 });
        gbc.writeMem(0xe898, { 0x72 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xee15, gbc.sp());
        EXPECT(0xe899, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x8d21));
        EXPECT(0x72, gbc.readMem(0xe898));
        // 72 00E2
        gbc.setState(0x2a8, 0x7a51, 0x12f0, 0x903c, 0x9e09, 0xb025, 0x1, 0x1);
        gbc.writeMem(0x2a8, { 0x72 });
        gbc.writeMem(0xb025, { 0x0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x7a51, gbc.sp());
        EXPECT(0x2a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xb025));
        // 72 00E3
        gbc.setState(0x8915, 0x87e, 0xa7d0, 0xff5a, 0xffc6, 0x8efd, 0x0, 0x1);
        gbc.writeMem(0x8915, { 0x72 });
        gbc.writeMem(0x8efd, { 0x0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x87e, gbc.sp());
        EXPECT(0x8916, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x8915));
        EXPECT(0xff, gbc.readMem(0x8efd));
        // 72 00E9
        gbc.setState(0x3125, 0xbfd6, 0xcef0, 0x33c1, 0xef6b, 0xa4ce, 0x0, 0x0);
        gbc.writeMem(0x3125, { 0x72 });
        gbc.writeMem(0xa4ce, { 0x0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xbfd6, gbc.sp());
        EXPECT(0x3126, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xa4ce));
        // 72 00ED
        gbc.setState(0xbbe7, 0x6bc5, 0x4350, 0x573, 0xec06, 0xad78, 0x0, 0x1);
        gbc.writeMem(0xad78, { 0x0 });
        gbc.writeMem(0xbbe7, { 0x72 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x6bc5, gbc.sp());
        EXPECT(0xbbe8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xad78));
        EXPECT(0x72, gbc.readMem(0xbbe7));
        // 72 00EE
        gbc.setState(0x596d, 0xd65, 0x9650, 0x7b1b, 0x2407, 0xa671, 0x1, 0x0);
        gbc.writeMem(0x596d, { 0x72 });
        gbc.writeMem(0xa671, { 0x0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd65, gbc.sp());
        EXPECT(0x596e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xa671));
        // 72 00F0
        gbc.setState(0xc650, 0xdf67, 0xa2e0, 0xe41c, 0xb55a, 0xd8bc, 0x0, 0x1);
        gbc.writeMem(0xc650, { 0x72 });
        gbc.writeMem(0xd8bc, { 0x0 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xdf67, gbc.sp());
        EXPECT(0xc651, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xc650));
        EXPECT(0xb5, gbc.readMem(0xd8bc));
        // 72 00F1
        gbc.setState(0x5eea, 0xa673, 0xc3a0, 0x2757, 0xf52f, 0xf381, 0x0, 0x0);
        gbc.writeMem(0x5eea, { 0x72 });
        gbc.writeMem(0xf381, { 0x0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa673, gbc.sp());
        EXPECT(0x5eeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xf381));
        // 72 00F2
        gbc.setState(0x9769, 0x3287, 0xe80, 0x811b, 0x4479, 0xd786, 0x1, 0x1);
        gbc.writeMem(0x9769, { 0x72 });
        gbc.writeMem(0xd786, { 0x0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x3287, gbc.sp());
        EXPECT(0x976a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x9769));
        EXPECT(0x44, gbc.readMem(0xd786));
        // 72 00F3
        gbc.setState(0x157c, 0x1984, 0x9770, 0xe825, 0x285, 0x8ce7, 0x1, 0x0);
        gbc.writeMem(0x157c, { 0x72 });
        gbc.writeMem(0x8ce7, { 0x0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x1984, gbc.sp());
        EXPECT(0x157d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0x8ce7));
        // 72 00F5
        gbc.setState(0x35c9, 0x550f, 0x7830, 0x4c3e, 0xf049, 0xa895, 0x1, 0x1);
        gbc.writeMem(0x35c9, { 0x72 });
        gbc.writeMem(0xa895, { 0x0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x550f, gbc.sp());
        EXPECT(0x35ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xa895));
        // 72 00F6
        gbc.setState(0x3776, 0x1801, 0xd190, 0xbb46, 0x8662, 0xd89c, 0x0, 0x0);
        gbc.writeMem(0x3776, { 0x72 });
        gbc.writeMem(0xd89c, { 0x0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x1801, gbc.sp());
        EXPECT(0x3777, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xd89c));
        // 72 00F7
        gbc.setState(0x12a6, 0x7ac5, 0xbda0, 0x6209, 0xba8c, 0xd909, 0x1, 0x1);
        gbc.writeMem(0x12a6, { 0x72 });
        gbc.writeMem(0xd909, { 0x0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x7ac5, gbc.sp());
        EXPECT(0x12a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xd909));
        // 72 00F8
        gbc.setState(0xdb24, 0xc1e0, 0x9f0, 0x72b, 0x447b, 0xd808, 0x0, 0x1);
        gbc.writeMem(0xd808, { 0x0 });
        gbc.writeMem(0xdb24, { 0x72 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xc1e0, gbc.sp());
        EXPECT(0xdb25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xd808));
        EXPECT(0x72, gbc.readMem(0xdb24));
        // 72 00F9
        gbc.setState(0x7377, 0xdad5, 0x1f40, 0x45ae, 0xa88, 0xc9e3, 0x1, 0x1);
        gbc.writeMem(0x7377, { 0x72 });
        gbc.writeMem(0xc9e3, { 0x0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xdad5, gbc.sp());
        EXPECT(0x7378, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xc9e3));
        // 72 00FA
        gbc.setState(0x24c2, 0xe198, 0x4bb0, 0xfa1d, 0xbc31, 0xbf91, 0x0, 0x0);
        gbc.writeMem(0x24c2, { 0x72 });
        gbc.writeMem(0xbf91, { 0x0 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xe198, gbc.sp());
        EXPECT(0x24c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xbf91));
        // 72 00FC
        gbc.setState(0x6489, 0x8c1a, 0xa3f0, 0xecbb, 0x637, 0xf0d2, 0x0, 0x0);
        gbc.writeMem(0x6489, { 0x72 });
        gbc.writeMem(0xf0d2, { 0x0 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x8c1a, gbc.sp());
        EXPECT(0x648a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xf0d2));
        // 72 00FD
        gbc.setState(0x276b, 0x376c, 0xd350, 0x644, 0xd3f3, 0xad5b, 0x1, 0x1);
        gbc.writeMem(0x276b, { 0x72 });
        gbc.writeMem(0xad5b, { 0x0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x376c, gbc.sp());
        EXPECT(0x276c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xad5b));
        // 72 0101
        gbc.setState(0x4d41, 0xf034, 0x9af0, 0x371f, 0x796, 0xe340, 0x1, 0x0);
        gbc.writeMem(0x4d41, { 0x72 });
        gbc.writeMem(0xe340, { 0x0 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xf034, gbc.sp());
        EXPECT(0x4d42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xe340));
        // 72 0102
        gbc.setState(0xea4c, 0xe299, 0xf2a0, 0x87a8, 0xd79c, 0xe3a4, 0x1, 0x1);
        gbc.writeMem(0xe3a4, { 0x0 });
        gbc.writeMem(0xea4c, { 0x72 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xe299, gbc.sp());
        EXPECT(0xea4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xe3a4));
        EXPECT(0x72, gbc.readMem(0xea4c));
        // 72 0103
        gbc.setState(0xab03, 0x450d, 0xfbc0, 0xae6, 0xdc9e, 0x807d, 0x1, 0x1);
        gbc.writeMem(0x807d, { 0x0 });
        gbc.writeMem(0xab03, { 0x72 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x450d, gbc.sp());
        EXPECT(0xab04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0x807d));
        EXPECT(0x72, gbc.readMem(0xab03));
        // 72 0104
        gbc.setState(0x33f0, 0x7e9a, 0x8af0, 0x4d2, 0x549, 0xedec, 0x1, 0x1);
        gbc.writeMem(0x33f0, { 0x72 });
        gbc.writeMem(0xedec, { 0x0 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x7e9a, gbc.sp());
        EXPECT(0x33f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xedec));
        // 72 0107
        gbc.setState(0xd4ed, 0x9761, 0x6b70, 0xe3e, 0x787f, 0x9030, 0x0, 0x0);
        gbc.writeMem(0x9030, { 0x0 });
        gbc.writeMem(0xd4ed, { 0x72 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x9761, gbc.sp());
        EXPECT(0xd4ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x9030));
        EXPECT(0x72, gbc.readMem(0xd4ed));
        // 72 0108
        gbc.setState(0x3274, 0x3a92, 0x3890, 0xf973, 0x8e17, 0xcf85, 0x1, 0x1);
        gbc.writeMem(0x3274, { 0x72 });
        gbc.writeMem(0xcf85, { 0x0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x3a92, gbc.sp());
        EXPECT(0x3275, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xcf85));
        // 72 0109
        gbc.setState(0x3773, 0x782a, 0x36f0, 0x5e53, 0xdd66, 0xe11d, 0x1, 0x1);
        gbc.writeMem(0x3773, { 0x72 });
        gbc.writeMem(0xe11d, { 0x0 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x782a, gbc.sp());
        EXPECT(0x3774, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xe11d));
        // 72 010C
        gbc.setState(0x381f, 0x57e9, 0x2540, 0x1a1e, 0xd9b6, 0xc329, 0x0, 0x0);
        gbc.writeMem(0x381f, { 0x72 });
        gbc.writeMem(0xc329, { 0x0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x57e9, gbc.sp());
        EXPECT(0x3820, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xc329));
        // 72 010D
        gbc.setState(0x50d8, 0xb34d, 0x54f0, 0xa64c, 0x9965, 0x8e00, 0x1, 0x1);
        gbc.writeMem(0x50d8, { 0x72 });
        gbc.writeMem(0x8e00, { 0x0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xb34d, gbc.sp());
        EXPECT(0x50d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8e00));
        // 72 010E
        gbc.setState(0x4cdf, 0xc659, 0xc800, 0xdb25, 0x3aa1, 0xaf80, 0x0, 0x1);
        gbc.writeMem(0x4cdf, { 0x72 });
        gbc.writeMem(0xaf80, { 0x0 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xc659, gbc.sp());
        EXPECT(0x4ce0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0xaf80));
        // 72 0110
        gbc.setState(0xa18c, 0xe7ea, 0xda90, 0x2a2f, 0x5b53, 0xa44a, 0x1, 0x0);
        gbc.writeMem(0xa18c, { 0x72 });
        gbc.writeMem(0xa44a, { 0x0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xe7ea, gbc.sp());
        EXPECT(0xa18d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xa18c));
        EXPECT(0x5b, gbc.readMem(0xa44a));
        // 72 0112
        gbc.setState(0xa4d4, 0x82af, 0xd1a0, 0x7160, 0x4ec3, 0xc88a, 0x0, 0x0);
        gbc.writeMem(0xa4d4, { 0x72 });
        gbc.writeMem(0xc88a, { 0x0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x82af, gbc.sp());
        EXPECT(0xa4d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xa4d4));
        EXPECT(0x4e, gbc.readMem(0xc88a));
        // 72 0115
        gbc.setState(0x9a7d, 0x6402, 0x8bd0, 0x3b0f, 0xe25c, 0xa206, 0x0, 0x0);
        gbc.writeMem(0x9a7d, { 0x72 });
        gbc.writeMem(0xa206, { 0x0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x6402, gbc.sp());
        EXPECT(0x9a7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x9a7d));
        EXPECT(0xe2, gbc.readMem(0xa206));
        // 72 0116
        gbc.setState(0x510a, 0xef84, 0x7a00, 0xdd24, 0xae1a, 0xeff4, 0x1, 0x0);
        gbc.writeMem(0x510a, { 0x72 });
        gbc.writeMem(0xeff4, { 0x0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xef84, gbc.sp());
        EXPECT(0x510b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xeff4));
        // 72 0118
        gbc.setState(0xa2b4, 0xa8d0, 0x6480, 0xff8a, 0xf465, 0xaf15, 0x0, 0x0);
        gbc.writeMem(0xa2b4, { 0x72 });
        gbc.writeMem(0xaf15, { 0x0 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xa8d0, gbc.sp());
        EXPECT(0xa2b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xa2b4));
        EXPECT(0xf4, gbc.readMem(0xaf15));
        // 72 0119
        gbc.setState(0x7ac3, 0x2937, 0x1f30, 0x26f2, 0xb519, 0x9929, 0x1, 0x1);
        gbc.writeMem(0x7ac3, { 0x72 });
        gbc.writeMem(0x9929, { 0x0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x2937, gbc.sp());
        EXPECT(0x7ac4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x9929));
        // 72 011C
        gbc.setState(0xe578, 0x91d7, 0x5bb0, 0x7d71, 0x2b51, 0xc8b3, 0x0, 0x0);
        gbc.writeMem(0xc8b3, { 0x0 });
        gbc.writeMem(0xe578, { 0x72 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x91d7, gbc.sp());
        EXPECT(0xe579, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xc8b3));
        EXPECT(0x72, gbc.readMem(0xe578));
        // 72 011D
        gbc.setState(0xc2eb, 0x87fa, 0xa70, 0x5513, 0x9c76, 0xf0f5, 0x1, 0x0);
        gbc.writeMem(0xc2eb, { 0x72 });
        gbc.writeMem(0xf0f5, { 0x0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x87fa, gbc.sp());
        EXPECT(0xc2ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xc2eb));
        EXPECT(0x9c, gbc.readMem(0xf0f5));
        // 72 011E
        gbc.setState(0xcb75, 0x251a, 0xb200, 0xc088, 0xd02b, 0x8507, 0x0, 0x1);
        gbc.writeMem(0x8507, { 0x0 });
        gbc.writeMem(0xcb75, { 0x72 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x251a, gbc.sp());
        EXPECT(0xcb76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x8507));
        EXPECT(0x72, gbc.readMem(0xcb75));
        // 72 011F
        gbc.setState(0xc45b, 0x6d56, 0x98b0, 0x9d8c, 0xd497, 0xa817, 0x1, 0x0);
        gbc.writeMem(0xa817, { 0x0 });
        gbc.writeMem(0xc45b, { 0x72 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x6d56, gbc.sp());
        EXPECT(0xc45c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xa817));
        EXPECT(0x72, gbc.readMem(0xc45b));
        // 72 0120
        gbc.setState(0x2f64, 0xf724, 0xab40, 0xf8e8, 0x74d3, 0xeda5, 0x0, 0x0);
        gbc.writeMem(0x2f64, { 0x72 });
        gbc.writeMem(0xeda5, { 0x0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xf724, gbc.sp());
        EXPECT(0x2f65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xeda5));
        // 72 0121
        gbc.setState(0x1c86, 0xaf67, 0xfed0, 0xdf, 0xd0db, 0x8b5f, 0x1, 0x1);
        gbc.writeMem(0x1c86, { 0x72 });
        gbc.writeMem(0x8b5f, { 0x0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xaf67, gbc.sp());
        EXPECT(0x1c87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x8b5f));
        // 72 0122
        gbc.setState(0xbc4f, 0x6a9, 0x3640, 0x2474, 0x35c9, 0x8d33, 0x0, 0x1);
        gbc.writeMem(0x8d33, { 0x0 });
        gbc.writeMem(0xbc4f, { 0x72 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x6a9, gbc.sp());
        EXPECT(0xbc50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x8d33));
        EXPECT(0x72, gbc.readMem(0xbc4f));
        // 72 0126
        gbc.setState(0x6b31, 0x1bf4, 0xfb0, 0x3b94, 0x45a, 0xb324, 0x1, 0x0);
        gbc.writeMem(0x6b31, { 0x72 });
        gbc.writeMem(0xb324, { 0x0 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x1bf4, gbc.sp());
        EXPECT(0x6b32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xb324));
        // 72 0128
        gbc.setState(0xb4dc, 0x6d8, 0xae20, 0xf8be, 0xe367, 0xa9eb, 0x1, 0x0);
        gbc.writeMem(0xa9eb, { 0x0 });
        gbc.writeMem(0xb4dc, { 0x72 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x6d8, gbc.sp());
        EXPECT(0xb4dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0xa9eb));
        EXPECT(0x72, gbc.readMem(0xb4dc));
        // 72 0129
        gbc.setState(0xa13a, 0x8314, 0xe500, 0x31e8, 0x10bc, 0x8e91, 0x1, 0x0);
        gbc.writeMem(0x8e91, { 0x0 });
        gbc.writeMem(0xa13a, { 0x72 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x8314, gbc.sp());
        EXPECT(0xa13b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x8e91));
        EXPECT(0x72, gbc.readMem(0xa13a));
        // 72 012A
        gbc.setState(0x7b4d, 0xdd26, 0xdd10, 0xc09a, 0x4237, 0xa80e, 0x0, 0x1);
        gbc.writeMem(0x7b4d, { 0x72 });
        gbc.writeMem(0xa80e, { 0x0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xdd26, gbc.sp());
        EXPECT(0x7b4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xa80e));
        // 72 012C
        gbc.setState(0xa6be, 0x91a8, 0xb330, 0xd52f, 0x7910, 0x8acb, 0x0, 0x0);
        gbc.writeMem(0x8acb, { 0x0 });
        gbc.writeMem(0xa6be, { 0x72 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x91a8, gbc.sp());
        EXPECT(0xa6bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x8acb));
        EXPECT(0x72, gbc.readMem(0xa6be));
        // 72 012F
        gbc.setState(0x37d8, 0x2026, 0x6820, 0x3e9c, 0xaf7f, 0xa5f7, 0x1, 0x0);
        gbc.writeMem(0x37d8, { 0x72 });
        gbc.writeMem(0xa5f7, { 0x0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x2026, gbc.sp());
        EXPECT(0x37d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0xa5f7));
        // 72 0130
        gbc.setState(0x5103, 0x67e7, 0x5c30, 0xce81, 0x91e5, 0xa5c8, 0x1, 0x0);
        gbc.writeMem(0x5103, { 0x72 });
        gbc.writeMem(0xa5c8, { 0x0 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x67e7, gbc.sp());
        EXPECT(0x5104, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xa5c8));
        // 72 0133
        gbc.setState(0x7562, 0x3769, 0x6c00, 0x97b8, 0x4c12, 0x8e3a, 0x0, 0x0);
        gbc.writeMem(0x7562, { 0x72 });
        gbc.writeMem(0x8e3a, { 0x0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x3769, gbc.sp());
        EXPECT(0x7563, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x8e3a));
        // 72 0137
        gbc.setState(0x37fa, 0x2928, 0xdcf0, 0x92b1, 0x7625, 0xed5f, 0x0, 0x0);
        gbc.writeMem(0x37fa, { 0x72 });
        gbc.writeMem(0xed5f, { 0x0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x2928, gbc.sp());
        EXPECT(0x37fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xed5f));
        // 72 013D
        gbc.setState(0x72f2, 0xc50a, 0x27b0, 0x5c2b, 0xeff9, 0xb734, 0x0, 0x1);
        gbc.writeMem(0x72f2, { 0x72 });
        gbc.writeMem(0xb734, { 0x0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc50a, gbc.sp());
        EXPECT(0x72f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xb734));
        // 72 013F
        gbc.setState(0x60e7, 0x1b2d, 0x9d30, 0x1445, 0x77f6, 0xefef, 0x1, 0x1);
        gbc.writeMem(0x60e7, { 0x72 });
        gbc.writeMem(0xefef, { 0x0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x1b2d, gbc.sp());
        EXPECT(0x60e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xefef));
        // 72 0140
        gbc.setState(0x8998, 0xc52e, 0x81e0, 0xb8aa, 0xb0bf, 0x886e, 0x1, 0x1);
        gbc.writeMem(0x886e, { 0x0 });
        gbc.writeMem(0x8998, { 0x72 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xc52e, gbc.sp());
        EXPECT(0x8999, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x886e));
        EXPECT(0x72, gbc.readMem(0x8998));
        // 72 0144
        gbc.setState(0x4cd3, 0x6a42, 0x70c0, 0x923a, 0xb6ac, 0xa324, 0x0, 0x0);
        gbc.writeMem(0x4cd3, { 0x72 });
        gbc.writeMem(0xa324, { 0x0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x6a42, gbc.sp());
        EXPECT(0x4cd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xa324));
        // 72 0146
        gbc.setState(0x9054, 0xbf81, 0x17b0, 0x8ba3, 0x11c2, 0xc6d4, 0x0, 0x0);
        gbc.writeMem(0x9054, { 0x72 });
        gbc.writeMem(0xc6d4, { 0x0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xbf81, gbc.sp());
        EXPECT(0x9055, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x9054));
        EXPECT(0x11, gbc.readMem(0xc6d4));
        // 72 0149
        gbc.setState(0x9d17, 0x3ecd, 0x1b30, 0xa582, 0xf4b0, 0xe758, 0x0, 0x0);
        gbc.writeMem(0x9d17, { 0x72 });
        gbc.writeMem(0xe758, { 0x0 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x3ecd, gbc.sp());
        EXPECT(0x9d18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x9d17));
        EXPECT(0xf4, gbc.readMem(0xe758));
        // 72 0152
        gbc.setState(0x8cc0, 0xe2bf, 0xa400, 0xbac7, 0xa5a5, 0xa57a, 0x0, 0x0);
        gbc.writeMem(0x8cc0, { 0x72 });
        gbc.writeMem(0xa57a, { 0x0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xe2bf, gbc.sp());
        EXPECT(0x8cc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x8cc0));
        EXPECT(0xa5, gbc.readMem(0xa57a));
        // 72 0153
        gbc.setState(0xa241, 0xa896, 0x86d0, 0x2ba6, 0x899d, 0xac2a, 0x0, 0x1);
        gbc.writeMem(0xa241, { 0x72 });
        gbc.writeMem(0xac2a, { 0x0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xa896, gbc.sp());
        EXPECT(0xa242, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xa241));
        EXPECT(0x89, gbc.readMem(0xac2a));
        // 72 0155
        gbc.setState(0xdb60, 0x3239, 0x8e50, 0xd969, 0x5145, 0xaa5e, 0x1, 0x0);
        gbc.writeMem(0xaa5e, { 0x0 });
        gbc.writeMem(0xdb60, { 0x72 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x3239, gbc.sp());
        EXPECT(0xdb61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xaa5e));
        EXPECT(0x72, gbc.readMem(0xdb60));
        // 72 0157
        gbc.setState(0xd433, 0x60f2, 0x9240, 0x5241, 0xcb19, 0xccda, 0x1, 0x0);
        gbc.writeMem(0xccda, { 0x0 });
        gbc.writeMem(0xd433, { 0x72 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x60f2, gbc.sp());
        EXPECT(0xd434, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccda));
        EXPECT(0x72, gbc.readMem(0xd433));
        // 72 0159
        gbc.setState(0x31fe, 0x89c4, 0x3010, 0xe70, 0x5796, 0xab54, 0x0, 0x0);
        gbc.writeMem(0x31fe, { 0x72 });
        gbc.writeMem(0xab54, { 0x0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x89c4, gbc.sp());
        EXPECT(0x31ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xab54));
        // 72 015A
        gbc.setState(0x6561, 0x5c7f, 0x3f30, 0x8eb7, 0x2c00, 0x92a9, 0x0, 0x1);
        gbc.writeMem(0x6561, { 0x72 });
        gbc.writeMem(0x92a9, { 0x0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x5c7f, gbc.sp());
        EXPECT(0x6562, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x92a9));
        // 72 015C
        gbc.setState(0x43f, 0xafaf, 0xe3a0, 0x13d3, 0x4cb1, 0xbc11, 0x1, 0x0);
        gbc.writeMem(0x43f, { 0x72 });
        gbc.writeMem(0xbc11, { 0x0 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xafaf, gbc.sp());
        EXPECT(0x440, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xbc11));
        // 72 015F
        gbc.setState(0xe8d9, 0x5566, 0x7570, 0xd1de, 0x3b4, 0xfd09, 0x1, 0x1);
        gbc.writeMem(0xe8d9, { 0x72 });
        gbc.writeMem(0xfd09, { 0x0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x5566, gbc.sp());
        EXPECT(0xe8da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xe8d9));
        EXPECT(0x3, gbc.readMem(0xfd09));
        // 72 0163
        gbc.setState(0x76c6, 0xa5c, 0x63a0, 0x7f47, 0x8b09, 0xdbc2, 0x1, 0x1);
        gbc.writeMem(0x76c6, { 0x72 });
        gbc.writeMem(0xdbc2, { 0x0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xa5c, gbc.sp());
        EXPECT(0x76c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xdbc2));
        // 72 0164
        gbc.setState(0x5b00, 0xd000, 0xfec0, 0x339b, 0xa71e, 0xf4b1, 0x0, 0x1);
        gbc.writeMem(0x5b00, { 0x72 });
        gbc.writeMem(0xf4b1, { 0x0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xd000, gbc.sp());
        EXPECT(0x5b01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xf4b1));
        // 72 0165
        gbc.setState(0x5df1, 0x5cb7, 0xf330, 0x1069, 0x91c4, 0x8d44, 0x0, 0x1);
        gbc.writeMem(0x5df1, { 0x72 });
        gbc.writeMem(0x8d44, { 0x0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x5cb7, gbc.sp());
        EXPECT(0x5df2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x8d44));
        // 72 0168
        gbc.setState(0x7418, 0x9575, 0x3a90, 0x2b70, 0xed75, 0xb1e4, 0x0, 0x1);
        gbc.writeMem(0x7418, { 0x72 });
        gbc.writeMem(0xb1e4, { 0x0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x9575, gbc.sp());
        EXPECT(0x7419, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xb1e4));
        // 72 0169
        gbc.setState(0xa3a4, 0xcf62, 0x4020, 0xf027, 0xdbc6, 0x9df1, 0x1, 0x1);
        gbc.writeMem(0x9df1, { 0x0 });
        gbc.writeMem(0xa3a4, { 0x72 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xcf62, gbc.sp());
        EXPECT(0xa3a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0x9df1));
        EXPECT(0x72, gbc.readMem(0xa3a4));
        // 72 016A
        gbc.setState(0xdf29, 0x1551, 0x9020, 0x3b84, 0x49a0, 0xeafe, 0x1, 0x1);
        gbc.writeMem(0xdf29, { 0x72 });
        gbc.writeMem(0xeafe, { 0x0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x1551, gbc.sp());
        EXPECT(0xdf2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xdf29));
        EXPECT(0x49, gbc.readMem(0xeafe));
        // 72 016B
        gbc.setState(0x5753, 0x3197, 0xd460, 0xbf96, 0x3c83, 0xe898, 0x0, 0x1);
        gbc.writeMem(0x5753, { 0x72 });
        gbc.writeMem(0xe898, { 0x0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x3197, gbc.sp());
        EXPECT(0x5754, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xe898));
        // 72 016D
        gbc.setState(0xebe4, 0x7e3e, 0x5c70, 0xe957, 0x177, 0xc691, 0x1, 0x0);
        gbc.writeMem(0xc691, { 0x0 });
        gbc.writeMem(0xebe4, { 0x72 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x7e3e, gbc.sp());
        EXPECT(0xebe5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0xc691));
        EXPECT(0x72, gbc.readMem(0xebe4));
        // 72 0175
        gbc.setState(0x3890, 0x638f, 0x3730, 0xd8d4, 0xa14b, 0xe204, 0x1, 0x0);
        gbc.writeMem(0x3890, { 0x72 });
        gbc.writeMem(0xe204, { 0x0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x638f, gbc.sp());
        EXPECT(0x3891, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xe204));
        // 72 0176
        gbc.setState(0xbe85, 0xdb9a, 0xcdd0, 0x96c3, 0x611a, 0xd556, 0x1, 0x1);
        gbc.writeMem(0xbe85, { 0x72 });
        gbc.writeMem(0xd556, { 0x0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xdb9a, gbc.sp());
        EXPECT(0xbe86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xbe85));
        EXPECT(0x61, gbc.readMem(0xd556));
        // 72 0177
        gbc.setState(0x3336, 0x4c8a, 0x3c0, 0x365d, 0x19f, 0x8d21, 0x1, 0x1);
        gbc.writeMem(0x3336, { 0x72 });
        gbc.writeMem(0x8d21, { 0x0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x4c8a, gbc.sp());
        EXPECT(0x3337, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0x8d21));
        // 72 0179
        gbc.setState(0x9521, 0x253f, 0x8af0, 0x6538, 0xb30a, 0x98c2, 0x1, 0x1);
        gbc.writeMem(0x9521, { 0x72 });
        gbc.writeMem(0x98c2, { 0x0 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x253f, gbc.sp());
        EXPECT(0x9522, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x9521));
        EXPECT(0xb3, gbc.readMem(0x98c2));
        // 72 017A
        gbc.setState(0xa0a4, 0x4ec8, 0x11d0, 0x8c73, 0xdbdb, 0xc07d, 0x0, 0x1);
        gbc.writeMem(0xa0a4, { 0x72 });
        gbc.writeMem(0xc07d, { 0x0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x4ec8, gbc.sp());
        EXPECT(0xa0a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xa0a4));
        EXPECT(0xdb, gbc.readMem(0xc07d));
        // 72 017C
        gbc.setState(0x999b, 0x6347, 0xea50, 0xc3f, 0x6763, 0xfec3, 0x1, 0x1);
        gbc.writeMem(0x999b, { 0x72 });
        gbc.writeMem(0xfec3, { 0x0 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x6347, gbc.sp());
        EXPECT(0x999c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x999b));
        EXPECT(0x67, gbc.readMem(0xfec3));
        // 72 017E
        gbc.setState(0x1d10, 0x6c48, 0x2ca0, 0xdf4b, 0x107f, 0xa82f, 0x1, 0x0);
        gbc.writeMem(0x1d10, { 0x72 });
        gbc.writeMem(0xa82f, { 0x0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x6c48, gbc.sp());
        EXPECT(0x1d11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xa82f));
        // 72 0188
        gbc.setState(0x9008, 0x2960, 0xf150, 0x52a7, 0x2690, 0xa50f, 0x1, 0x0);
        gbc.writeMem(0x9008, { 0x72 });
        gbc.writeMem(0xa50f, { 0x0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x2960, gbc.sp());
        EXPECT(0x9009, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x9008));
        EXPECT(0x26, gbc.readMem(0xa50f));
        // 72 018B
        gbc.setState(0xe216, 0x4fff, 0xa970, 0xb760, 0x4731, 0xa762, 0x1, 0x0);
        gbc.writeMem(0xa762, { 0x0 });
        gbc.writeMem(0xe216, { 0x72 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x4fff, gbc.sp());
        EXPECT(0xe217, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xa762));
        EXPECT(0x72, gbc.readMem(0xe216));
        // 72 018F
        gbc.setState(0x137, 0x9996, 0x2de0, 0x93c7, 0x4123, 0x9331, 0x1, 0x0);
        gbc.writeMem(0x137, { 0x72 });
        gbc.writeMem(0x9331, { 0x0 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x9996, gbc.sp());
        EXPECT(0x138, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0x9331));
        // 72 0192
        gbc.setState(0xe0e7, 0x30ae, 0x9c20, 0xca2e, 0xcd98, 0x89f7, 0x0, 0x0);
        gbc.writeMem(0x89f7, { 0x0 });
        gbc.writeMem(0xe0e7, { 0x72 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x30ae, gbc.sp());
        EXPECT(0xe0e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0x89f7));
        EXPECT(0x72, gbc.readMem(0xe0e7));
        // 72 0193
        gbc.setState(0x7e77, 0xc272, 0x33d0, 0x450, 0x558b, 0xb76c, 0x1, 0x1);
        gbc.writeMem(0x7e77, { 0x72 });
        gbc.writeMem(0xb76c, { 0x0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xc272, gbc.sp());
        EXPECT(0x7e78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xb76c));
        // 72 0194
        gbc.setState(0x316b, 0xdf09, 0xc1c0, 0x1b40, 0xd5fe, 0xbf97, 0x0, 0x0);
        gbc.writeMem(0x316b, { 0x72 });
        gbc.writeMem(0xbf97, { 0x0 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xdf09, gbc.sp());
        EXPECT(0x316c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xbf97));
        // 72 0195
        gbc.setState(0x8b2f, 0x55bd, 0x9600, 0xeda6, 0x58e2, 0xceec, 0x1, 0x0);
        gbc.writeMem(0x8b2f, { 0x72 });
        gbc.writeMem(0xceec, { 0x0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x55bd, gbc.sp());
        EXPECT(0x8b30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x8b2f));
        EXPECT(0x58, gbc.readMem(0xceec));
        // 72 0198
        gbc.setState(0x6470, 0x915e, 0xe8b0, 0x7460, 0x4f84, 0xfe09, 0x1, 0x0);
        gbc.writeMem(0x6470, { 0x72 });
        gbc.writeMem(0xfe09, { 0x0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x915e, gbc.sp());
        EXPECT(0x6471, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0xfe09));
        // 72 0199
        gbc.setState(0xac01, 0x3e29, 0xf830, 0x23f1, 0x2745, 0xa442, 0x1, 0x0);
        gbc.writeMem(0xa442, { 0x0 });
        gbc.writeMem(0xac01, { 0x72 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x3e29, gbc.sp());
        EXPECT(0xac02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xa442));
        EXPECT(0x72, gbc.readMem(0xac01));
        // 72 019B
        gbc.setState(0x4e8e, 0xbd17, 0xafe0, 0x12c3, 0x6452, 0xe9eb, 0x1, 0x0);
        gbc.writeMem(0x4e8e, { 0x72 });
        gbc.writeMem(0xe9eb, { 0x0 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xbd17, gbc.sp());
        EXPECT(0x4e8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xe9eb));
        // 72 019D
        gbc.setState(0x2638, 0xd9fa, 0x5540, 0xb118, 0x71e, 0xb9b0, 0x0, 0x0);
        gbc.writeMem(0x2638, { 0x72 });
        gbc.writeMem(0xb9b0, { 0x0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xd9fa, gbc.sp());
        EXPECT(0x2639, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xb9b0));
        // 72 019E
        gbc.setState(0x288e, 0x8c16, 0x2150, 0xcca7, 0xe201, 0xbb32, 0x0, 0x0);
        gbc.writeMem(0x288e, { 0x72 });
        gbc.writeMem(0xbb32, { 0x0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x8c16, gbc.sp());
        EXPECT(0x288f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xbb32));
        // 72 019F
        gbc.setState(0x28a0, 0x2690, 0x1280, 0x5f79, 0x18d3, 0xe822, 0x1, 0x1);
        gbc.writeMem(0x28a0, { 0x72 });
        gbc.writeMem(0xe822, { 0x0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x2690, gbc.sp());
        EXPECT(0x28a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xe822));
        // 72 01A3
        gbc.setState(0x1a34, 0x7c2d, 0xb940, 0xd445, 0x6ac0, 0x85c8, 0x1, 0x1);
        gbc.writeMem(0x1a34, { 0x72 });
        gbc.writeMem(0x85c8, { 0x0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x7c2d, gbc.sp());
        EXPECT(0x1a35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x85c8));
        // 72 01A5
        gbc.setState(0x8cea, 0xdc6d, 0x9290, 0x15e4, 0x710e, 0xacd4, 0x0, 0x1);
        gbc.writeMem(0x8cea, { 0x72 });
        gbc.writeMem(0xacd4, { 0x0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xdc6d, gbc.sp());
        EXPECT(0x8ceb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x8cea));
        EXPECT(0x71, gbc.readMem(0xacd4));
        // 72 01A6
        gbc.setState(0x42f7, 0xc496, 0x6500, 0xd470, 0x2fb6, 0x9001, 0x1, 0x0);
        gbc.writeMem(0x42f7, { 0x72 });
        gbc.writeMem(0x9001, { 0x0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xc496, gbc.sp());
        EXPECT(0x42f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x9001));
        // 72 01A7
        gbc.setState(0x98f5, 0x4575, 0xc890, 0x19e1, 0x58a, 0xb160, 0x0, 0x0);
        gbc.writeMem(0x98f5, { 0x72 });
        gbc.writeMem(0xb160, { 0x0 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x4575, gbc.sp());
        EXPECT(0x98f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x98f5));
        EXPECT(0x5, gbc.readMem(0xb160));
        // 72 01AB
        gbc.setState(0xeda6, 0x969e, 0xb290, 0xbefc, 0xdf88, 0xaa5f, 0x1, 0x1);
        gbc.writeMem(0xaa5f, { 0x0 });
        gbc.writeMem(0xeda6, { 0x72 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x969e, gbc.sp());
        EXPECT(0xeda7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xaa5f));
        EXPECT(0x72, gbc.readMem(0xeda6));
        // 72 01AD
        gbc.setState(0x5cba, 0x5595, 0x7260, 0x8d08, 0xb6ed, 0x84c2, 0x1, 0x0);
        gbc.writeMem(0x5cba, { 0x72 });
        gbc.writeMem(0x84c2, { 0x0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x5595, gbc.sp());
        EXPECT(0x5cbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x84c2));
        // 72 01B3
        gbc.setState(0x4687, 0x3234, 0x75e0, 0x5546, 0xc1d8, 0xad0b, 0x1, 0x0);
        gbc.writeMem(0x4687, { 0x72 });
        gbc.writeMem(0xad0b, { 0x0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x3234, gbc.sp());
        EXPECT(0x4688, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xad0b));
        // 72 01B7
        gbc.setState(0x1c87, 0x54fd, 0x7920, 0xaf6f, 0xad2b, 0xd1e1, 0x1, 0x0);
        gbc.writeMem(0x1c87, { 0x72 });
        gbc.writeMem(0xd1e1, { 0x0 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x54fd, gbc.sp());
        EXPECT(0x1c88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xd1e1));
        // 72 01B8
        gbc.setState(0x90e6, 0x7dd5, 0xb310, 0xa1a5, 0x4e44, 0x8a6d, 0x1, 0x0);
        gbc.writeMem(0x8a6d, { 0x0 });
        gbc.writeMem(0x90e6, { 0x72 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x7dd5, gbc.sp());
        EXPECT(0x90e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x8a6d));
        EXPECT(0x72, gbc.readMem(0x90e6));
        // 72 01BA
        gbc.setState(0xedf7, 0x66ca, 0xf490, 0x6858, 0x5d20, 0xda5b, 0x0, 0x0);
        gbc.writeMem(0xda5b, { 0x0 });
        gbc.writeMem(0xedf7, { 0x72 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x66ca, gbc.sp());
        EXPECT(0xedf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xda5b));
        EXPECT(0x72, gbc.readMem(0xedf7));
        // 72 01BD
        gbc.setState(0x71e0, 0xd580, 0xf150, 0x65d0, 0x20f5, 0xca21, 0x1, 0x1);
        gbc.writeMem(0x71e0, { 0x72 });
        gbc.writeMem(0xca21, { 0x0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xd580, gbc.sp());
        EXPECT(0x71e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xca21));
        // 72 01BF
        gbc.setState(0xd775, 0x27c6, 0x23f0, 0x5402, 0x8b36, 0xb968, 0x0, 0x1);
        gbc.writeMem(0xb968, { 0x0 });
        gbc.writeMem(0xd775, { 0x72 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x27c6, gbc.sp());
        EXPECT(0xd776, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xb968));
        EXPECT(0x72, gbc.readMem(0xd775));
        // 72 01C0
        gbc.setState(0x89ca, 0xe356, 0x2370, 0x60aa, 0x227c, 0xa685, 0x0, 0x0);
        gbc.writeMem(0x89ca, { 0x72 });
        gbc.writeMem(0xa685, { 0x0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xe356, gbc.sp());
        EXPECT(0x89cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x89ca));
        EXPECT(0x22, gbc.readMem(0xa685));
        // 72 01C5
        gbc.setState(0xba4d, 0xbce1, 0x1d30, 0x3397, 0xa86d, 0xdeb2, 0x0, 0x1);
        gbc.writeMem(0xba4d, { 0x72 });
        gbc.writeMem(0xdeb2, { 0x0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xbce1, gbc.sp());
        EXPECT(0xba4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xba4d));
        EXPECT(0xa8, gbc.readMem(0xdeb2));
        // 72 01C8
        gbc.setState(0x3b17, 0x4cf5, 0xf880, 0xa103, 0x6e63, 0x994d, 0x1, 0x1);
        gbc.writeMem(0x3b17, { 0x72 });
        gbc.writeMem(0x994d, { 0x0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x4cf5, gbc.sp());
        EXPECT(0x3b18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x994d));
        // 72 01CA
        gbc.setState(0xec9c, 0x1982, 0xbb0, 0x532a, 0x42d4, 0x8af3, 0x1, 0x0);
        gbc.writeMem(0x8af3, { 0x0 });
        gbc.writeMem(0xec9c, { 0x72 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x1982, gbc.sp());
        EXPECT(0xec9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x8af3));
        EXPECT(0x72, gbc.readMem(0xec9c));
        // 72 01CB
        gbc.setState(0x239a, 0xcfcc, 0x59b0, 0x406f, 0xc1af, 0xa080, 0x1, 0x0);
        gbc.writeMem(0x239a, { 0x72 });
        gbc.writeMem(0xa080, { 0x0 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xcfcc, gbc.sp());
        EXPECT(0x239b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xa080));
        // 72 01CE
        gbc.setState(0x7a7b, 0xc752, 0x34f0, 0x6cbf, 0xd269, 0x960b, 0x0, 0x1);
        gbc.writeMem(0x7a7b, { 0x72 });
        gbc.writeMem(0x960b, { 0x0 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xc752, gbc.sp());
        EXPECT(0x7a7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0x960b));
        // 72 01CF
        gbc.setState(0xdd67, 0x5de3, 0x3830, 0x39ce, 0x678, 0xc010, 0x1, 0x0);
        gbc.writeMem(0xc010, { 0x0 });
        gbc.writeMem(0xdd67, { 0x72 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x5de3, gbc.sp());
        EXPECT(0xdd68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xc010));
        EXPECT(0x72, gbc.readMem(0xdd67));
        // 72 01D0
        gbc.setState(0xb203, 0x36e2, 0x5bf0, 0x98a3, 0x194a, 0x9ba5, 0x0, 0x1);
        gbc.writeMem(0x9ba5, { 0x0 });
        gbc.writeMem(0xb203, { 0x72 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x36e2, gbc.sp());
        EXPECT(0xb204, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x9ba5));
        EXPECT(0x72, gbc.readMem(0xb203));
        // 72 01D1
        gbc.setState(0x6460, 0xddd6, 0x9580, 0x83fc, 0x4b57, 0xb083, 0x0, 0x1);
        gbc.writeMem(0x6460, { 0x72 });
        gbc.writeMem(0xb083, { 0x0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xddd6, gbc.sp());
        EXPECT(0x6461, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xb083));
        // 72 01D2
        gbc.setState(0x5297, 0x4733, 0x6b00, 0xc544, 0x2f42, 0xfde3, 0x1, 0x1);
        gbc.writeMem(0x5297, { 0x72 });
        gbc.writeMem(0xfde3, { 0x0 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x4733, gbc.sp());
        EXPECT(0x5298, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xfde3));
        // 72 01D3
        gbc.setState(0xe7cf, 0x6d65, 0x5320, 0xdb0a, 0xd746, 0x8c7e, 0x0, 0x0);
        gbc.writeMem(0x8c7e, { 0x0 });
        gbc.writeMem(0xe7cf, { 0x72 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x6d65, gbc.sp());
        EXPECT(0xe7d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0x8c7e));
        EXPECT(0x72, gbc.readMem(0xe7cf));
        // 72 01D4
        gbc.setState(0xaf8f, 0xb09f, 0x4c30, 0xccb6, 0x727b, 0xdc7f, 0x0, 0x1);
        gbc.writeMem(0xaf8f, { 0x72 });
        gbc.writeMem(0xdc7f, { 0x0 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xb09f, gbc.sp());
        EXPECT(0xaf90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xaf8f));
        EXPECT(0x72, gbc.readMem(0xdc7f));
        // 72 01D6
        gbc.setState(0x6a1, 0x39fe, 0xc210, 0x3215, 0x9321, 0xb6a0, 0x1, 0x1);
        gbc.writeMem(0x6a1, { 0x72 });
        gbc.writeMem(0xb6a0, { 0x0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x39fe, gbc.sp());
        EXPECT(0x6a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xb6a0));
        // 72 01D7
        gbc.setState(0x321e, 0x2a92, 0xbe0, 0x22f8, 0xe329, 0x96b4, 0x1, 0x0);
        gbc.writeMem(0x321e, { 0x72 });
        gbc.writeMem(0x96b4, { 0x0 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x2a92, gbc.sp());
        EXPECT(0x321f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0x96b4));
        // 72 01DB
        gbc.setState(0x1fac, 0xded3, 0xd800, 0x9910, 0x557, 0x96e8, 0x0, 0x0);
        gbc.writeMem(0x1fac, { 0x72 });
        gbc.writeMem(0x96e8, { 0x0 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xded3, gbc.sp());
        EXPECT(0x1fad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x96e8));
        // 72 01DD
        gbc.setState(0x3d3, 0x69ce, 0x40e0, 0x833d, 0x37b2, 0x98e5, 0x1, 0x0);
        gbc.writeMem(0x3d3, { 0x72 });
        gbc.writeMem(0x98e5, { 0x0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x69ce, gbc.sp());
        EXPECT(0x3d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x98e5));
        // 72 01DE
        gbc.setState(0x8ca0, 0x592a, 0xf320, 0x946d, 0xaa1e, 0xbb19, 0x1, 0x1);
        gbc.writeMem(0x8ca0, { 0x72 });
        gbc.writeMem(0xbb19, { 0x0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x592a, gbc.sp());
        EXPECT(0x8ca1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x8ca0));
        EXPECT(0xaa, gbc.readMem(0xbb19));
        // 72 01E0
        gbc.setState(0x41cf, 0xa4ce, 0x8a80, 0x47f2, 0xc902, 0xf32e, 0x1, 0x1);
        gbc.writeMem(0x41cf, { 0x72 });
        gbc.writeMem(0xf32e, { 0x0 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xa4ce, gbc.sp());
        EXPECT(0x41d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xf32e));
        // 72 01E4
        gbc.setState(0x6be4, 0xdd82, 0x9150, 0x630d, 0x2afd, 0xda97, 0x0, 0x1);
        gbc.writeMem(0x6be4, { 0x72 });
        gbc.writeMem(0xda97, { 0x0 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xdd82, gbc.sp());
        EXPECT(0x6be5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xda97));
        // 72 01E5
        gbc.setState(0x1b6f, 0x3dc9, 0x1f50, 0x8849, 0x68be, 0xc388, 0x0, 0x1);
        gbc.writeMem(0x1b6f, { 0x72 });
        gbc.writeMem(0xc388, { 0x0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x3dc9, gbc.sp());
        EXPECT(0x1b70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xc388));
        // 72 01E9
        gbc.setState(0x743d, 0x28c2, 0x8b40, 0x65b3, 0xee0a, 0xa194, 0x0, 0x0);
        gbc.writeMem(0x743d, { 0x72 });
        gbc.writeMem(0xa194, { 0x0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x28c2, gbc.sp());
        EXPECT(0x743e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xa194));
        // 72 01EE
        gbc.setState(0x1e4c, 0x85f2, 0x48e0, 0xed73, 0xa0f, 0xca6d, 0x0, 0x0);
        gbc.writeMem(0x1e4c, { 0x72 });
        gbc.writeMem(0xca6d, { 0x0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x85f2, gbc.sp());
        EXPECT(0x1e4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xca6d));
        // 72 01EF
        gbc.setState(0x5a5f, 0x7fed, 0xf600, 0x5f61, 0xef4c, 0x964b, 0x1, 0x0);
        gbc.writeMem(0x5a5f, { 0x72 });
        gbc.writeMem(0x964b, { 0x0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x7fed, gbc.sp());
        EXPECT(0x5a60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0x964b));
        // 72 01F0
        gbc.setState(0x44db, 0xc7d5, 0x2d20, 0x5d0d, 0x6cd8, 0xaf86, 0x1, 0x1);
        gbc.writeMem(0x44db, { 0x72 });
        gbc.writeMem(0xaf86, { 0x0 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xc7d5, gbc.sp());
        EXPECT(0x44dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xaf86));
        // 72 01F4
        gbc.setState(0x929d, 0x59a7, 0x3da0, 0xab5e, 0x44e6, 0xb45b, 0x1, 0x0);
        gbc.writeMem(0x929d, { 0x72 });
        gbc.writeMem(0xb45b, { 0x0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x59a7, gbc.sp());
        EXPECT(0x929e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x929d));
        EXPECT(0x44, gbc.readMem(0xb45b));
        // 72 01F7
        gbc.setState(0xbb4, 0x9b3d, 0xba60, 0x81dc, 0x3f86, 0xa35a, 0x0, 0x1);
        gbc.writeMem(0xbb4, { 0x72 });
        gbc.writeMem(0xa35a, { 0x0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x9b3d, gbc.sp());
        EXPECT(0xbb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xa35a));
        // 72 01F9
        gbc.setState(0x5d89, 0x25a7, 0x55f0, 0x8bf1, 0xc7c7, 0xc93a, 0x0, 0x0);
        gbc.writeMem(0x5d89, { 0x72 });
        gbc.writeMem(0xc93a, { 0x0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x25a7, gbc.sp());
        EXPECT(0x5d8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xc93a));
        // 72 0201
        gbc.setState(0x3d04, 0x19a4, 0xe0f0, 0xc06, 0x3ce0, 0xae24, 0x1, 0x1);
        gbc.writeMem(0x3d04, { 0x72 });
        gbc.writeMem(0xae24, { 0x0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x19a4, gbc.sp());
        EXPECT(0x3d05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xae24));
        // 72 0202
        gbc.setState(0x50d0, 0xd68, 0x65b0, 0x3c50, 0x8f05, 0xdea0, 0x1, 0x1);
        gbc.writeMem(0x50d0, { 0x72 });
        gbc.writeMem(0xdea0, { 0x0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xd68, gbc.sp());
        EXPECT(0x50d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xdea0));
        // 72 0203
        gbc.setState(0xadfd, 0x70be, 0x2460, 0xd815, 0x5237, 0xd405, 0x1, 0x0);
        gbc.writeMem(0xadfd, { 0x72 });
        gbc.writeMem(0xd405, { 0x0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x70be, gbc.sp());
        EXPECT(0xadfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xadfd));
        EXPECT(0x52, gbc.readMem(0xd405));
        // 72 0204
        gbc.setState(0x3734, 0x117d, 0x37c0, 0x66ad, 0x3c90, 0xff04, 0x0, 0x0);
        gbc.writeMem(0x3734, { 0x72 });
        gbc.writeMem(0xff04, { 0x0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x117d, gbc.sp());
        EXPECT(0x3735, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xff04));
        // 72 0205
        gbc.setState(0x20a2, 0xc8f4, 0x6000, 0x4e1d, 0x6781, 0xb115, 0x1, 0x0);
        gbc.writeMem(0x20a2, { 0x72 });
        gbc.writeMem(0xb115, { 0x0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xc8f4, gbc.sp());
        EXPECT(0x20a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0xb115));
        // 72 0206
        gbc.setState(0x8e29, 0x4913, 0x630, 0x13df, 0x4628, 0xc9bb, 0x0, 0x1);
        gbc.writeMem(0x8e29, { 0x72 });
        gbc.writeMem(0xc9bb, { 0x0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x4913, gbc.sp());
        EXPECT(0x8e2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x8e29));
        EXPECT(0x46, gbc.readMem(0xc9bb));
        // 72 0207
        gbc.setState(0x76e0, 0xe9f3, 0xf7e0, 0xe7dc, 0xd8d, 0xda55, 0x0, 0x0);
        gbc.writeMem(0x76e0, { 0x72 });
        gbc.writeMem(0xda55, { 0x0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xe9f3, gbc.sp());
        EXPECT(0x76e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xda55));
        // 72 0208
        gbc.setState(0x3a7f, 0x8cf1, 0xee80, 0x20b0, 0x6458, 0xcfa0, 0x0, 0x1);
        gbc.writeMem(0x3a7f, { 0x72 });
        gbc.writeMem(0xcfa0, { 0x0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x8cf1, gbc.sp());
        EXPECT(0x3a80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xcfa0));
        // 72 020C
        gbc.setState(0xe509, 0x97a, 0x9810, 0xd169, 0xf52b, 0xb4d0, 0x0, 0x0);
        gbc.writeMem(0xb4d0, { 0x0 });
        gbc.writeMem(0xe509, { 0x72 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x97a, gbc.sp());
        EXPECT(0xe50a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xb4d0));
        EXPECT(0x72, gbc.readMem(0xe509));
        // 72 020E
        gbc.setState(0xc5b5, 0x9691, 0xba10, 0xa124, 0xe8a8, 0x97ed, 0x0, 0x0);
        gbc.writeMem(0x97ed, { 0x0 });
        gbc.writeMem(0xc5b5, { 0x72 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x9691, gbc.sp());
        EXPECT(0xc5b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0x97ed));
        EXPECT(0x72, gbc.readMem(0xc5b5));
        // 72 0211
        gbc.setState(0x4d3a, 0x60ad, 0xca10, 0xaa0a, 0x5e23, 0xaa6e, 0x1, 0x1);
        gbc.writeMem(0x4d3a, { 0x72 });
        gbc.writeMem(0xaa6e, { 0x0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x60ad, gbc.sp());
        EXPECT(0x4d3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xaa6e));
        // 72 0216
        gbc.setState(0x793e, 0xa4ac, 0xf30, 0xc1cf, 0x141f, 0xa9cc, 0x1, 0x1);
        gbc.writeMem(0x793e, { 0x72 });
        gbc.writeMem(0xa9cc, { 0x0 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xa4ac, gbc.sp());
        EXPECT(0x793f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xa9cc));
        // 72 0219
        gbc.setState(0xcd73, 0x904, 0x2f60, 0x3e18, 0xd6f3, 0xee7b, 0x0, 0x1);
        gbc.writeMem(0xcd73, { 0x72 });
        gbc.writeMem(0xee7b, { 0x0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x904, gbc.sp());
        EXPECT(0xcd74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xcd73));
        EXPECT(0xd6, gbc.readMem(0xee7b));
        // 72 021A
        gbc.setState(0x6ba2, 0x60a9, 0x9800, 0xd642, 0xbf77, 0xd3fc, 0x0, 0x0);
        gbc.writeMem(0x6ba2, { 0x72 });
        gbc.writeMem(0xd3fc, { 0x0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x60a9, gbc.sp());
        EXPECT(0x6ba3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xd3fc));
        // 72 021B
        gbc.setState(0xd9b6, 0xd844, 0x3750, 0xa2cb, 0x33a6, 0xd702, 0x1, 0x1);
        gbc.writeMem(0xd702, { 0x0 });
        gbc.writeMem(0xd9b6, { 0x72 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xd844, gbc.sp());
        EXPECT(0xd9b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xd702));
        EXPECT(0x72, gbc.readMem(0xd9b6));
        // 72 021F
        gbc.setState(0x3782, 0x2752, 0x6480, 0x8b23, 0xab43, 0xaa7a, 0x0, 0x0);
        gbc.writeMem(0x3782, { 0x72 });
        gbc.writeMem(0xaa7a, { 0x0 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x2752, gbc.sp());
        EXPECT(0x3783, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xaa7a));
        // 72 0222
        gbc.setState(0x2542, 0xb121, 0x5810, 0x6bc6, 0x25a1, 0x9938, 0x1, 0x1);
        gbc.writeMem(0x2542, { 0x72 });
        gbc.writeMem(0x9938, { 0x0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xb121, gbc.sp());
        EXPECT(0x2543, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x9938));
        // 72 0223
        gbc.setState(0x59ac, 0xee8a, 0x5700, 0x79b9, 0xa26f, 0xb2fe, 0x0, 0x1);
        gbc.writeMem(0x59ac, { 0x72 });
        gbc.writeMem(0xb2fe, { 0x0 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xee8a, gbc.sp());
        EXPECT(0x59ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xb2fe));
        // 72 0225
        gbc.setState(0x1f87, 0x7277, 0xe740, 0x30a, 0xd96f, 0x8969, 0x0, 0x1);
        gbc.writeMem(0x1f87, { 0x72 });
        gbc.writeMem(0x8969, { 0x0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x7277, gbc.sp());
        EXPECT(0x1f88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x8969));
        // 72 0226
        gbc.setState(0x836b, 0xc18a, 0x830, 0xcbea, 0xb94f, 0xa4f9, 0x1, 0x0);
        gbc.writeMem(0x836b, { 0x72 });
        gbc.writeMem(0xa4f9, { 0x0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xc18a, gbc.sp());
        EXPECT(0x836c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x836b));
        EXPECT(0xb9, gbc.readMem(0xa4f9));
        // 72 0227
        gbc.setState(0xa48c, 0x5ce1, 0x6bb0, 0x7efd, 0xd014, 0xeba7, 0x0, 0x1);
        gbc.writeMem(0xa48c, { 0x72 });
        gbc.writeMem(0xeba7, { 0x0 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x5ce1, gbc.sp());
        EXPECT(0xa48d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xa48c));
        EXPECT(0xd0, gbc.readMem(0xeba7));
        // 72 0228
        gbc.setState(0x6972, 0xd641, 0x8750, 0x1de1, 0x9b8f, 0xaf84, 0x0, 0x1);
        gbc.writeMem(0x6972, { 0x72 });
        gbc.writeMem(0xaf84, { 0x0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xd641, gbc.sp());
        EXPECT(0x6973, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xaf84));
        // 72 022A
        gbc.setState(0xddd7, 0xdcbc, 0x5560, 0x4382, 0xd957, 0x97b4, 0x0, 0x1);
        gbc.writeMem(0x97b4, { 0x0 });
        gbc.writeMem(0xddd7, { 0x72 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xdcbc, gbc.sp());
        EXPECT(0xddd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x97b4));
        EXPECT(0x72, gbc.readMem(0xddd7));
        // 72 022F
        gbc.setState(0x699a, 0x746a, 0xf050, 0xceec, 0xe99c, 0x95bf, 0x0, 0x1);
        gbc.writeMem(0x699a, { 0x72 });
        gbc.writeMem(0x95bf, { 0x0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x746a, gbc.sp());
        EXPECT(0x699b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x95bf));
        // 72 0230
        gbc.setState(0x3f8f, 0x51d8, 0x8800, 0xf7fb, 0x2466, 0xfd94, 0x0, 0x0);
        gbc.writeMem(0x3f8f, { 0x72 });
        gbc.writeMem(0xfd94, { 0x0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x51d8, gbc.sp());
        EXPECT(0x3f90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xfd94));
        // 72 0233
        gbc.setState(0x2241, 0x1bbe, 0x7e20, 0x5d5b, 0xe8a1, 0x9fe9, 0x0, 0x0);
        gbc.writeMem(0x2241, { 0x72 });
        gbc.writeMem(0x9fe9, { 0x0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x1bbe, gbc.sp());
        EXPECT(0x2242, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0x9fe9));
        // 72 0234
        gbc.setState(0x686b, 0xea0a, 0x9330, 0xe159, 0x90e5, 0x843b, 0x0, 0x1);
        gbc.writeMem(0x686b, { 0x72 });
        gbc.writeMem(0x843b, { 0x0 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xea0a, gbc.sp());
        EXPECT(0x686c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0x843b));
        // 72 0238
        gbc.setState(0xc1c, 0xc790, 0x3ea0, 0x3c, 0xf6ae, 0x91f9, 0x1, 0x0);
        gbc.writeMem(0xc1c, { 0x72 });
        gbc.writeMem(0x91f9, { 0x0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xc790, gbc.sp());
        EXPECT(0xc1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0x91f9));
        // 72 0239
        gbc.setState(0xa35d, 0x96fd, 0x98c0, 0x3750, 0x2d75, 0xb098, 0x1, 0x0);
        gbc.writeMem(0xa35d, { 0x72 });
        gbc.writeMem(0xb098, { 0x0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x96fd, gbc.sp());
        EXPECT(0xa35e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xa35d));
        EXPECT(0x2d, gbc.readMem(0xb098));
        // 72 023A
        gbc.setState(0x617b, 0xdabf, 0x60d0, 0x3ff8, 0x39e7, 0x8c7c, 0x1, 0x1);
        gbc.writeMem(0x617b, { 0x72 });
        gbc.writeMem(0x8c7c, { 0x0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xdabf, gbc.sp());
        EXPECT(0x617c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0x8c7c));
        // 72 023D
        gbc.setState(0x77c7, 0x86, 0x4170, 0x6a3c, 0xa6ec, 0xa54b, 0x1, 0x0);
        gbc.writeMem(0x77c7, { 0x72 });
        gbc.writeMem(0xa54b, { 0x0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x86, gbc.sp());
        EXPECT(0x77c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xa54b));
        // 72 023F
        gbc.setState(0x48eb, 0xe549, 0x9010, 0xb3ae, 0x6761, 0x9f42, 0x1, 0x0);
        gbc.writeMem(0x48eb, { 0x72 });
        gbc.writeMem(0x9f42, { 0x0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xe549, gbc.sp());
        EXPECT(0x48ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0x9f42));
        // 72 0242
        gbc.setState(0xd1d6, 0x7393, 0xc300, 0xfb29, 0x562f, 0xbebb, 0x0, 0x0);
        gbc.writeMem(0xbebb, { 0x0 });
        gbc.writeMem(0xd1d6, { 0x72 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x7393, gbc.sp());
        EXPECT(0xd1d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xbebb));
        EXPECT(0x72, gbc.readMem(0xd1d6));
        // 72 0244
        gbc.setState(0xe360, 0x78bc, 0xafd0, 0x5bae, 0xe08d, 0xb406, 0x1, 0x1);
        gbc.writeMem(0xb406, { 0x0 });
        gbc.writeMem(0xe360, { 0x72 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x78bc, gbc.sp());
        EXPECT(0xe361, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xb406));
        EXPECT(0x72, gbc.readMem(0xe360));
        // 72 0246
        gbc.setState(0xa24c, 0xe890, 0xe10, 0xb4af, 0x68e8, 0xe512, 0x0, 0x1);
        gbc.writeMem(0xa24c, { 0x72 });
        gbc.writeMem(0xe512, { 0x0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xe890, gbc.sp());
        EXPECT(0xa24d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xa24c));
        EXPECT(0x68, gbc.readMem(0xe512));
        // 72 024A
        gbc.setState(0xb252, 0xcb00, 0xd890, 0x9506, 0x1449, 0xae34, 0x0, 0x1);
        gbc.writeMem(0xae34, { 0x0 });
        gbc.writeMem(0xb252, { 0x72 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xcb00, gbc.sp());
        EXPECT(0xb253, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xae34));
        EXPECT(0x72, gbc.readMem(0xb252));
        // 72 024D
        gbc.setState(0x2f44, 0x3a1, 0x4f70, 0xd4b0, 0x3a7c, 0xb4dd, 0x1, 0x0);
        gbc.writeMem(0x2f44, { 0x72 });
        gbc.writeMem(0xb4dd, { 0x0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x3a1, gbc.sp());
        EXPECT(0x2f45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0xb4dd));
        // 72 024E
        gbc.setState(0x449e, 0xf7ef, 0x2050, 0x8cf5, 0x6717, 0x85f6, 0x0, 0x0);
        gbc.writeMem(0x449e, { 0x72 });
        gbc.writeMem(0x85f6, { 0x0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xf7ef, gbc.sp());
        EXPECT(0x449f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0x85f6));
        // 72 024F
        gbc.setState(0xba25, 0x8596, 0x14f0, 0x7192, 0x668a, 0xfc3c, 0x0, 0x0);
        gbc.writeMem(0xba25, { 0x72 });
        gbc.writeMem(0xfc3c, { 0x0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x8596, gbc.sp());
        EXPECT(0xba26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xba25));
        EXPECT(0x66, gbc.readMem(0xfc3c));
        // 72 0251
        gbc.setState(0x92b0, 0x8e68, 0xd300, 0xadde, 0xf9, 0x132e, 0x0, 0x0);
        gbc.writeMem(0x132e, { 0x0 });
        gbc.writeMem(0x92b0, { 0x72 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x8e68, gbc.sp());
        EXPECT(0x92b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x92b0));
        // 72 0252
        gbc.setState(0xde96, 0x5ff3, 0xf630, 0x9452, 0xa974, 0xfaca, 0x0, 0x0);
        gbc.writeMem(0xde96, { 0x72 });
        gbc.writeMem(0xfaca, { 0x0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x5ff3, gbc.sp());
        EXPECT(0xde97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xde96));
        EXPECT(0xa9, gbc.readMem(0xfaca));
        // 72 0253
        gbc.setState(0xb27b, 0xfcc3, 0xc3b0, 0xb9a0, 0x88b3, 0x954f, 0x0, 0x0);
        gbc.writeMem(0x954f, { 0x0 });
        gbc.writeMem(0xb27b, { 0x72 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xfcc3, gbc.sp());
        EXPECT(0xb27c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x954f));
        EXPECT(0x72, gbc.readMem(0xb27b));
        // 72 0258
        gbc.setState(0xd337, 0xec3d, 0x1bd0, 0x5e2, 0x94f5, 0xe365, 0x0, 0x1);
        gbc.writeMem(0xd337, { 0x72 });
        gbc.writeMem(0xe365, { 0x0 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xec3d, gbc.sp());
        EXPECT(0xd338, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xd337));
        EXPECT(0x94, gbc.readMem(0xe365));
        // 72 025E
        gbc.setState(0x10b7, 0xb6c1, 0xe190, 0x773c, 0x9121, 0xf951, 0x0, 0x0);
        gbc.writeMem(0x10b7, { 0x72 });
        gbc.writeMem(0xf951, { 0x0 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xb6c1, gbc.sp());
        EXPECT(0x10b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xf951));
        // 72 025F
        gbc.setState(0x97db, 0xc02c, 0x18c0, 0xbd53, 0x4d86, 0xc0a0, 0x0, 0x1);
        gbc.writeMem(0x97db, { 0x72 });
        gbc.writeMem(0xc0a0, { 0x0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xc02c, gbc.sp());
        EXPECT(0x97dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x97db));
        EXPECT(0x4d, gbc.readMem(0xc0a0));
        // 72 0260
        gbc.setState(0xde5b, 0xe761, 0xedf0, 0xf40e, 0x4f1c, 0x99d4, 0x1, 0x0);
        gbc.writeMem(0x99d4, { 0x0 });
        gbc.writeMem(0xde5b, { 0x72 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xe761, gbc.sp());
        EXPECT(0xde5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0x99d4));
        EXPECT(0x72, gbc.readMem(0xde5b));
        // 72 0262
        gbc.setState(0x9c4d, 0x67cb, 0x8b60, 0xeb1, 0x7910, 0xc453, 0x0, 0x0);
        gbc.writeMem(0x9c4d, { 0x72 });
        gbc.writeMem(0xc453, { 0x0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x67cb, gbc.sp());
        EXPECT(0x9c4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x9c4d));
        EXPECT(0x79, gbc.readMem(0xc453));
        // 72 0263
        gbc.setState(0x2338, 0x6a86, 0x1550, 0x51e9, 0x9a6d, 0xe482, 0x1, 0x0);
        gbc.writeMem(0x2338, { 0x72 });
        gbc.writeMem(0xe482, { 0x0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x6a86, gbc.sp());
        EXPECT(0x2339, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xe482));
        // 72 0265
        gbc.setState(0xe24, 0x142b, 0x480, 0x83b5, 0xfe52, 0xfcc6, 0x0, 0x1);
        gbc.writeMem(0xe24, { 0x72 });
        gbc.writeMem(0xfcc6, { 0x0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x142b, gbc.sp());
        EXPECT(0xe25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xfcc6));
        // 72 0266
        gbc.setState(0x5521, 0x6f20, 0x20, 0xc3f4, 0x75bd, 0xfca4, 0x0, 0x0);
        gbc.writeMem(0x5521, { 0x72 });
        gbc.writeMem(0xfca4, { 0x0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x6f20, gbc.sp());
        EXPECT(0x5522, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xfca4));
        // 72 026D
        gbc.setState(0x4b9b, 0x3607, 0x6eb0, 0xdf57, 0x432c, 0xd1c8, 0x1, 0x1);
        gbc.writeMem(0x4b9b, { 0x72 });
        gbc.writeMem(0xd1c8, { 0x0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x3607, gbc.sp());
        EXPECT(0x4b9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xd1c8));
        // 72 0270
        gbc.setState(0xb18b, 0xfb88, 0xc90, 0xc06e, 0x76db, 0xc91e, 0x0, 0x1);
        gbc.writeMem(0xb18b, { 0x72 });
        gbc.writeMem(0xc91e, { 0x0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xfb88, gbc.sp());
        EXPECT(0xb18c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xb18b));
        EXPECT(0x76, gbc.readMem(0xc91e));
        // 72 0274
        gbc.setState(0x5518, 0xde18, 0x14b0, 0x8bcf, 0x5934, 0xbb7b, 0x0, 0x0);
        gbc.writeMem(0x5518, { 0x72 });
        gbc.writeMem(0xbb7b, { 0x0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xde18, gbc.sp());
        EXPECT(0x5519, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0xbb7b));
        // 72 0275
        gbc.setState(0xeca6, 0xdc7d, 0xef60, 0x738, 0x422a, 0xd104, 0x1, 0x0);
        gbc.writeMem(0xd104, { 0x0 });
        gbc.writeMem(0xeca6, { 0x72 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xdc7d, gbc.sp());
        EXPECT(0xeca7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xd104));
        EXPECT(0x72, gbc.readMem(0xeca6));
        // 72 0276
        gbc.setState(0x3ebe, 0x82cf, 0xf4f0, 0xcbe3, 0xbe06, 0x9adf, 0x0, 0x0);
        gbc.writeMem(0x3ebe, { 0x72 });
        gbc.writeMem(0x9adf, { 0x0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x82cf, gbc.sp());
        EXPECT(0x3ebf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0x9adf));
        // 72 0279
        gbc.setState(0x69b7, 0xf5c9, 0x9050, 0x20e2, 0xd8d3, 0xce92, 0x1, 0x0);
        gbc.writeMem(0x69b7, { 0x72 });
        gbc.writeMem(0xce92, { 0x0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xf5c9, gbc.sp());
        EXPECT(0x69b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xce92));
        // 72 0280
        gbc.setState(0xdddd, 0xa49a, 0xee30, 0x65fa, 0x70bb, 0x920f, 0x0, 0x1);
        gbc.writeMem(0x920f, { 0x0 });
        gbc.writeMem(0xdddd, { 0x72 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xa49a, gbc.sp());
        EXPECT(0xddde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0x920f));
        EXPECT(0x72, gbc.readMem(0xdddd));
        // 72 0283
        gbc.setState(0xe2fa, 0xfe49, 0xf500, 0xc518, 0xd17, 0xa301, 0x0, 0x1);
        gbc.writeMem(0xa301, { 0x0 });
        gbc.writeMem(0xe2fa, { 0x72 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xfe49, gbc.sp());
        EXPECT(0xe2fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xa301));
        EXPECT(0x72, gbc.readMem(0xe2fa));
        // 72 0284
        gbc.setState(0xd0be, 0xcb6a, 0x78b0, 0x3d18, 0x966d, 0xd4eb, 0x1, 0x0);
        gbc.writeMem(0xd0be, { 0x72 });
        gbc.writeMem(0xd4eb, { 0x0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xcb6a, gbc.sp());
        EXPECT(0xd0bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xd0be));
        EXPECT(0x96, gbc.readMem(0xd4eb));
        // 72 0288
        gbc.setState(0x76e3, 0x8391, 0x2f40, 0x97c6, 0xcc19, 0xae50, 0x1, 0x1);
        gbc.writeMem(0x76e3, { 0x72 });
        gbc.writeMem(0xae50, { 0x0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x8391, gbc.sp());
        EXPECT(0x76e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xae50));
        // 72 0289
        gbc.setState(0xb804, 0xa659, 0xcba0, 0xefaa, 0x6baf, 0xc6d4, 0x0, 0x1);
        gbc.writeMem(0xb804, { 0x72 });
        gbc.writeMem(0xc6d4, { 0x0 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xa659, gbc.sp());
        EXPECT(0xb805, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xb804));
        EXPECT(0x6b, gbc.readMem(0xc6d4));
        // 72 028C
        gbc.setState(0x7572, 0x789, 0xd330, 0x63e0, 0xd289, 0xa19d, 0x0, 0x0);
        gbc.writeMem(0x7572, { 0x72 });
        gbc.writeMem(0xa19d, { 0x0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x789, gbc.sp());
        EXPECT(0x7573, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xa19d));
        // 72 028F
        gbc.setState(0x9809, 0xdcc5, 0x620, 0xd5de, 0x71ae, 0xad6f, 0x1, 0x1);
        gbc.writeMem(0x9809, { 0x72 });
        gbc.writeMem(0xad6f, { 0x0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xdcc5, gbc.sp());
        EXPECT(0x980a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x9809));
        EXPECT(0x71, gbc.readMem(0xad6f));
        // 72 0291
        gbc.setState(0x998, 0xf713, 0x26d0, 0x2df2, 0xa7a5, 0xf8c9, 0x0, 0x0);
        gbc.writeMem(0x998, { 0x72 });
        gbc.writeMem(0xf8c9, { 0x0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xf713, gbc.sp());
        EXPECT(0x999, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xf8c9));
        // 72 0292
        gbc.setState(0x3530, 0xb0ac, 0x9fc0, 0xc803, 0xdb0b, 0x8796, 0x1, 0x0);
        gbc.writeMem(0x3530, { 0x72 });
        gbc.writeMem(0x8796, { 0x0 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xb0ac, gbc.sp());
        EXPECT(0x3531, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0x8796));
        // 72 0294
        gbc.setState(0x2646, 0x7d90, 0x30c0, 0x6f85, 0x6c49, 0x9758, 0x1, 0x1);
        gbc.writeMem(0x2646, { 0x72 });
        gbc.writeMem(0x9758, { 0x0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x7d90, gbc.sp());
        EXPECT(0x2647, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x9758));
        // 72 0296
        gbc.setState(0x6990, 0x988c, 0x9c30, 0x3f54, 0x8134, 0xae52, 0x1, 0x1);
        gbc.writeMem(0x6990, { 0x72 });
        gbc.writeMem(0xae52, { 0x0 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x988c, gbc.sp());
        EXPECT(0x6991, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xae52));
        // 72 0297
        gbc.setState(0x5cf5, 0x2497, 0xb8d0, 0xebe6, 0x270d, 0xdf74, 0x1, 0x0);
        gbc.writeMem(0x5cf5, { 0x72 });
        gbc.writeMem(0xdf74, { 0x0 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x2497, gbc.sp());
        EXPECT(0x5cf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xdf74));
        // 72 0299
        gbc.setState(0xe12a, 0x5276, 0xc8b0, 0x9eb9, 0xcb5b, 0xeae3, 0x0, 0x0);
        gbc.writeMem(0xe12a, { 0x72 });
        gbc.writeMem(0xeae3, { 0x0 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x5276, gbc.sp());
        EXPECT(0xe12b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xe12a));
        EXPECT(0xcb, gbc.readMem(0xeae3));
        // 72 029B
        gbc.setState(0xb62c, 0x7d35, 0x1600, 0xebef, 0xa366, 0xf3ae, 0x0, 0x0);
        gbc.writeMem(0xb62c, { 0x72 });
        gbc.writeMem(0xf3ae, { 0x0 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x7d35, gbc.sp());
        EXPECT(0xb62d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xb62c));
        EXPECT(0xa3, gbc.readMem(0xf3ae));
        // 72 029C
        gbc.setState(0x1a08, 0xdcc3, 0xac40, 0x5e56, 0x358, 0xa946, 0x0, 0x0);
        gbc.writeMem(0x1a08, { 0x72 });
        gbc.writeMem(0xa946, { 0x0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xdcc3, gbc.sp());
        EXPECT(0x1a09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xa946));
        // 72 029D
        gbc.setState(0x5569, 0xc2ec, 0x3270, 0xfd6e, 0x98ba, 0xae2e, 0x0, 0x1);
        gbc.writeMem(0x5569, { 0x72 });
        gbc.writeMem(0xae2e, { 0x0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xc2ec, gbc.sp());
        EXPECT(0x556a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xae2e));
        // 72 029E
        gbc.setState(0xbef3, 0xf499, 0x5280, 0x15cf, 0xf41d, 0xcb3c, 0x1, 0x0);
        gbc.writeMem(0xbef3, { 0x72 });
        gbc.writeMem(0xcb3c, { 0x0 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xf499, gbc.sp());
        EXPECT(0xbef4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xbef3));
        EXPECT(0xf4, gbc.readMem(0xcb3c));
        // 72 029F
        gbc.setState(0x42d3, 0x5133, 0x3530, 0x3576, 0xe898, 0xf81d, 0x0, 0x0);
        gbc.writeMem(0x42d3, { 0x72 });
        gbc.writeMem(0xf81d, { 0x0 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x5133, gbc.sp());
        EXPECT(0x42d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xf81d));
        // 72 02A1
        gbc.setState(0x21b, 0xff91, 0xb320, 0xa72a, 0x4f5e, 0x9ec2, 0x1, 0x0);
        gbc.writeMem(0x21b, { 0x72 });
        gbc.writeMem(0x9ec2, { 0x0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xff91, gbc.sp());
        EXPECT(0x21c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0x9ec2));
        // 72 02A3
        gbc.setState(0xb422, 0x5abb, 0x1260, 0x3fb5, 0xb668, 0xf8d1, 0x0, 0x1);
        gbc.writeMem(0xb422, { 0x72 });
        gbc.writeMem(0xf8d1, { 0x0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x5abb, gbc.sp());
        EXPECT(0xb423, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xb422));
        EXPECT(0xb6, gbc.readMem(0xf8d1));
        // 72 02A4
        gbc.setState(0xa8de, 0x6341, 0x7ab0, 0x978b, 0x461a, 0xe655, 0x0, 0x1);
        gbc.writeMem(0xa8de, { 0x72 });
        gbc.writeMem(0xe655, { 0x0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x6341, gbc.sp());
        EXPECT(0xa8df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xa8de));
        EXPECT(0x46, gbc.readMem(0xe655));
        // 72 02A6
        gbc.setState(0x11f8, 0x631, 0x7fc0, 0x449e, 0x73a8, 0xbca0, 0x0, 0x0);
        gbc.writeMem(0x11f8, { 0x72 });
        gbc.writeMem(0xbca0, { 0x0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x631, gbc.sp());
        EXPECT(0x11f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xbca0));
        // 72 02AB
        gbc.setState(0x880d, 0xe838, 0xb400, 0xb076, 0x4808, 0xd16d, 0x0, 0x0);
        gbc.writeMem(0x880d, { 0x72 });
        gbc.writeMem(0xd16d, { 0x0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xe838, gbc.sp());
        EXPECT(0x880e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x880d));
        EXPECT(0x48, gbc.readMem(0xd16d));
        // 72 02AD
        gbc.setState(0x5d12, 0x5da4, 0x3d30, 0xd5bd, 0xc462, 0xfc9f, 0x1, 0x0);
        gbc.writeMem(0x5d12, { 0x72 });
        gbc.writeMem(0xfc9f, { 0x0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x5da4, gbc.sp());
        EXPECT(0x5d13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0xfc9f));
        // 72 02AF
        gbc.setState(0x6263, 0x225c, 0xcba0, 0xdfb3, 0x4a74, 0xdb46, 0x1, 0x0);
        gbc.writeMem(0x6263, { 0x72 });
        gbc.writeMem(0xdb46, { 0x0 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x225c, gbc.sp());
        EXPECT(0x6264, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xdb46));
        // 72 02B0
        gbc.setState(0x77ec, 0x9760, 0x37b0, 0xc3dd, 0xa148, 0x9b7d, 0x0, 0x0);
        gbc.writeMem(0x77ec, { 0x72 });
        gbc.writeMem(0x9b7d, { 0x0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x9760, gbc.sp());
        EXPECT(0x77ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x9b7d));
        // 72 02B2
        gbc.setState(0xa8d2, 0x7c0a, 0x8680, 0xad25, 0x478f, 0xc1c9, 0x0, 0x1);
        gbc.writeMem(0xa8d2, { 0x72 });
        gbc.writeMem(0xc1c9, { 0x0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x7c0a, gbc.sp());
        EXPECT(0xa8d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xa8d2));
        EXPECT(0x47, gbc.readMem(0xc1c9));
        // 72 02B5
        gbc.setState(0xb39, 0x2390, 0x15e0, 0x84e, 0xa37a, 0x87b1, 0x1, 0x1);
        gbc.writeMem(0xb39, { 0x72 });
        gbc.writeMem(0x87b1, { 0x0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x2390, gbc.sp());
        EXPECT(0xb3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x87b1));
        // 72 02B8
        gbc.setState(0xeb52, 0xbab1, 0x6830, 0x7c65, 0x62f6, 0xb35a, 0x1, 0x1);
        gbc.writeMem(0xb35a, { 0x0 });
        gbc.writeMem(0xeb52, { 0x72 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xbab1, gbc.sp());
        EXPECT(0xeb53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xb35a));
        EXPECT(0x72, gbc.readMem(0xeb52));
        // 72 02B9
        gbc.setState(0x56f4, 0x7149, 0xae60, 0x76cd, 0xcb44, 0xc47c, 0x0, 0x1);
        gbc.writeMem(0x56f4, { 0x72 });
        gbc.writeMem(0xc47c, { 0x0 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x7149, gbc.sp());
        EXPECT(0x56f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc47c));
        // 72 02BB
        gbc.setState(0x6738, 0x2bac, 0xf940, 0x4f25, 0xe7c5, 0x8cd9, 0x0, 0x0);
        gbc.writeMem(0x6738, { 0x72 });
        gbc.writeMem(0x8cd9, { 0x0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x2bac, gbc.sp());
        EXPECT(0x6739, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x8cd9));
        // 72 02BC
        gbc.setState(0x88a5, 0x2ad5, 0x3f70, 0x35b6, 0x42cb, 0xd446, 0x0, 0x1);
        gbc.writeMem(0x88a5, { 0x72 });
        gbc.writeMem(0xd446, { 0x0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x2ad5, gbc.sp());
        EXPECT(0x88a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x88a5));
        EXPECT(0x42, gbc.readMem(0xd446));
        // 72 02BD
        gbc.setState(0xbb25, 0xc090, 0xd840, 0x7918, 0x5f76, 0x9cbd, 0x0, 0x0);
        gbc.writeMem(0x9cbd, { 0x0 });
        gbc.writeMem(0xbb25, { 0x72 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xc090, gbc.sp());
        EXPECT(0xbb26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0x9cbd));
        EXPECT(0x72, gbc.readMem(0xbb25));
        // 72 02BE
        gbc.setState(0x5f69, 0x5eaa, 0x330, 0xfc4c, 0x9809, 0xe51d, 0x0, 0x1);
        gbc.writeMem(0x5f69, { 0x72 });
        gbc.writeMem(0xe51d, { 0x0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x5eaa, gbc.sp());
        EXPECT(0x5f6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xe51d));
        // 72 02C4
        gbc.setState(0xebf5, 0x4ffe, 0x39f0, 0x9ecb, 0x7a4, 0xa649, 0x0, 0x0);
        gbc.writeMem(0xa649, { 0x0 });
        gbc.writeMem(0xebf5, { 0x72 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x4ffe, gbc.sp());
        EXPECT(0xebf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xa649));
        EXPECT(0x72, gbc.readMem(0xebf5));
        // 72 02C5
        gbc.setState(0x42b, 0x8e8e, 0x2440, 0x606c, 0x9222, 0xa9ff, 0x0, 0x0);
        gbc.writeMem(0x42b, { 0x72 });
        gbc.writeMem(0xa9ff, { 0x0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x8e8e, gbc.sp());
        EXPECT(0x42c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xa9ff));
        // 72 02C7
        gbc.setState(0xdf12, 0x4916, 0x5ba0, 0xdc07, 0xb3cd, 0x927f, 0x1, 0x0);
        gbc.writeMem(0x927f, { 0x0 });
        gbc.writeMem(0xdf12, { 0x72 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x4916, gbc.sp());
        EXPECT(0xdf13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x927f));
        EXPECT(0x72, gbc.readMem(0xdf12));
        // 72 02C8
        gbc.setState(0x1283, 0x6b93, 0x44f0, 0xec44, 0xfd16, 0xb2ad, 0x0, 0x1);
        gbc.writeMem(0x1283, { 0x72 });
        gbc.writeMem(0xb2ad, { 0x0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x6b93, gbc.sp());
        EXPECT(0x1284, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xb2ad));
        // 72 02CA
        gbc.setState(0xbde9, 0xfa25, 0x6be0, 0x249f, 0xf6a3, 0x9760, 0x1, 0x1);
        gbc.writeMem(0x9760, { 0x0 });
        gbc.writeMem(0xbde9, { 0x72 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xfa25, gbc.sp());
        EXPECT(0xbdea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0x9760));
        EXPECT(0x72, gbc.readMem(0xbde9));
        // 72 02CC
        gbc.setState(0x294b, 0xbe31, 0xb0a0, 0x970d, 0xb4fd, 0xe706, 0x1, 0x1);
        gbc.writeMem(0x294b, { 0x72 });
        gbc.writeMem(0xe706, { 0x0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xbe31, gbc.sp());
        EXPECT(0x294c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xe706));
        // 72 02CD
        gbc.setState(0x7209, 0x3c0, 0x2770, 0x4927, 0xfa01, 0xb283, 0x0, 0x0);
        gbc.writeMem(0x7209, { 0x72 });
        gbc.writeMem(0xb283, { 0x0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x3c0, gbc.sp());
        EXPECT(0x720a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xb283));
        // 72 02CE
        gbc.setState(0x84da, 0xcadb, 0x6ac0, 0xca6c, 0x87da, 0x88b3, 0x0, 0x1);
        gbc.writeMem(0x84da, { 0x72 });
        gbc.writeMem(0x88b3, { 0x0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xcadb, gbc.sp());
        EXPECT(0x84db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x84da));
        EXPECT(0x87, gbc.readMem(0x88b3));
        // 72 02D0
        gbc.setState(0x9f89, 0x35d8, 0x4ba0, 0x3f9f, 0x31c9, 0xd6c9, 0x0, 0x1);
        gbc.writeMem(0x9f89, { 0x72 });
        gbc.writeMem(0xd6c9, { 0x0 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x35d8, gbc.sp());
        EXPECT(0x9f8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x9f89));
        EXPECT(0x31, gbc.readMem(0xd6c9));
        // 72 02D1
        gbc.setState(0x9393, 0xc190, 0x220, 0xe937, 0xaa07, 0xc359, 0x0, 0x0);
        gbc.writeMem(0x9393, { 0x72 });
        gbc.writeMem(0xc359, { 0x0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xc190, gbc.sp());
        EXPECT(0x9394, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x9393));
        EXPECT(0xaa, gbc.readMem(0xc359));
        // 72 02D2
        gbc.setState(0x7c84, 0xd061, 0x3020, 0xd7a6, 0xbd4d, 0x8502, 0x0, 0x1);
        gbc.writeMem(0x7c84, { 0x72 });
        gbc.writeMem(0x8502, { 0x0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xd061, gbc.sp());
        EXPECT(0x7c85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x8502));
        // 72 02D3
        gbc.setState(0x39a0, 0x6f27, 0x5a90, 0x7c1c, 0x6e87, 0xf3a9, 0x1, 0x0);
        gbc.writeMem(0x39a0, { 0x72 });
        gbc.writeMem(0xf3a9, { 0x0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x6f27, gbc.sp());
        EXPECT(0x39a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xf3a9));
        // 72 02D5
        gbc.setState(0xd160, 0xbfa1, 0x23e0, 0x2894, 0x5346, 0x81d9, 0x0, 0x1);
        gbc.writeMem(0x81d9, { 0x0 });
        gbc.writeMem(0xd160, { 0x72 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xbfa1, gbc.sp());
        EXPECT(0xd161, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x81d9));
        EXPECT(0x72, gbc.readMem(0xd160));
        // 72 02D9
        gbc.setState(0x98c3, 0xcff9, 0x35d0, 0xed02, 0xda24, 0xd2bc, 0x0, 0x1);
        gbc.writeMem(0x98c3, { 0x72 });
        gbc.writeMem(0xd2bc, { 0x0 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xcff9, gbc.sp());
        EXPECT(0x98c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x98c3));
        EXPECT(0xda, gbc.readMem(0xd2bc));
        // 72 02DA
        gbc.setState(0xa677, 0xc875, 0xcc20, 0x2c31, 0xe807, 0x90fd, 0x1, 0x1);
        gbc.writeMem(0x90fd, { 0x0 });
        gbc.writeMem(0xa677, { 0x72 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xc875, gbc.sp());
        EXPECT(0xa678, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0x90fd));
        EXPECT(0x72, gbc.readMem(0xa677));
        // 72 02E1
        gbc.setState(0x6e88, 0x328b, 0x60, 0x6644, 0xe300, 0xe23b, 0x1, 0x0);
        gbc.writeMem(0x6e88, { 0x72 });
        gbc.writeMem(0xe23b, { 0x0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x328b, gbc.sp());
        EXPECT(0x6e89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0xe23b));
        // 72 02E2
        gbc.setState(0xd130, 0xeec4, 0x7390, 0xc32e, 0xcc7d, 0xdb95, 0x1, 0x1);
        gbc.writeMem(0xd130, { 0x72 });
        gbc.writeMem(0xdb95, { 0x0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xeec4, gbc.sp());
        EXPECT(0xd131, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xd130));
        EXPECT(0xcc, gbc.readMem(0xdb95));
        // 72 02E4
        gbc.setState(0x690f, 0xe66e, 0xe780, 0x5d96, 0x9946, 0x8829, 0x0, 0x0);
        gbc.writeMem(0x690f, { 0x72 });
        gbc.writeMem(0x8829, { 0x0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xe66e, gbc.sp());
        EXPECT(0x6910, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8829));
        // 72 02E7
        gbc.setState(0x8f90, 0xc2ff, 0x7cb0, 0x634c, 0xb688, 0xd7b5, 0x1, 0x1);
        gbc.writeMem(0x8f90, { 0x72 });
        gbc.writeMem(0xd7b5, { 0x0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xc2ff, gbc.sp());
        EXPECT(0x8f91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x8f90));
        EXPECT(0xb6, gbc.readMem(0xd7b5));
        // 72 02E8
        gbc.setState(0xd2a2, 0x3647, 0x44c0, 0x38f9, 0x61a7, 0xe132, 0x1, 0x1);
        gbc.writeMem(0xd2a2, { 0x72 });
        gbc.writeMem(0xe132, { 0x0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x3647, gbc.sp());
        EXPECT(0xd2a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xd2a2));
        EXPECT(0x61, gbc.readMem(0xe132));
        // 72 02E9
        gbc.setState(0x11e3, 0x6c18, 0x5fb0, 0xaf35, 0xab78, 0xdca2, 0x1, 0x0);
        gbc.writeMem(0x11e3, { 0x72 });
        gbc.writeMem(0xdca2, { 0x0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x6c18, gbc.sp());
        EXPECT(0x11e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xdca2));
        // 72 02EB
        gbc.setState(0x8f84, 0x1f3d, 0x6b60, 0xad52, 0x3174, 0xb309, 0x1, 0x0);
        gbc.writeMem(0x8f84, { 0x72 });
        gbc.writeMem(0xb309, { 0x0 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x1f3d, gbc.sp());
        EXPECT(0x8f85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x8f84));
        EXPECT(0x31, gbc.readMem(0xb309));
        // 72 02EE
        gbc.setState(0x71e5, 0xd97, 0xc690, 0x446, 0x427a, 0xc52c, 0x1, 0x1);
        gbc.writeMem(0x71e5, { 0x72 });
        gbc.writeMem(0xc52c, { 0x0 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xd97, gbc.sp());
        EXPECT(0x71e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xc52c));
        // 72 02EF
        gbc.setState(0x319e, 0x5984, 0xda20, 0x9d6a, 0xa696, 0xcc51, 0x1, 0x1);
        gbc.writeMem(0x319e, { 0x72 });
        gbc.writeMem(0xcc51, { 0x0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x5984, gbc.sp());
        EXPECT(0x319f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xcc51));
        // 72 02F0
        gbc.setState(0xc401, 0x3fb5, 0xbe10, 0x3918, 0x7c6d, 0xb8f1, 0x1, 0x0);
        gbc.writeMem(0xb8f1, { 0x0 });
        gbc.writeMem(0xc401, { 0x72 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x3fb5, gbc.sp());
        EXPECT(0xc402, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0xb8f1));
        EXPECT(0x72, gbc.readMem(0xc401));
        // 72 02F1
        gbc.setState(0x6583, 0x4b6b, 0xab10, 0x2c90, 0xc133, 0xab01, 0x1, 0x0);
        gbc.writeMem(0x6583, { 0x72 });
        gbc.writeMem(0xab01, { 0x0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x4b6b, gbc.sp());
        EXPECT(0x6584, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xab01));
        // 72 02F5
        gbc.setState(0x260b, 0xf975, 0x4f10, 0x534e, 0x8d8d, 0x951a, 0x0, 0x0);
        gbc.writeMem(0x260b, { 0x72 });
        gbc.writeMem(0x951a, { 0x0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xf975, gbc.sp());
        EXPECT(0x260c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x951a));
        // 72 02F6
        gbc.setState(0x3295, 0x8fd7, 0x4210, 0x715a, 0xc697, 0x9cb3, 0x0, 0x0);
        gbc.writeMem(0x3295, { 0x72 });
        gbc.writeMem(0x9cb3, { 0x0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x8fd7, gbc.sp());
        EXPECT(0x3296, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x9cb3));
        // 72 02F8
        gbc.setState(0xad3d, 0xce5d, 0x2240, 0x487d, 0xa71d, 0xa216, 0x1, 0x1);
        gbc.writeMem(0xa216, { 0x0 });
        gbc.writeMem(0xad3d, { 0x72 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xce5d, gbc.sp());
        EXPECT(0xad3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa216));
        EXPECT(0x72, gbc.readMem(0xad3d));
        // 72 02F9
        gbc.setState(0xeb29, 0xe024, 0x5650, 0xb0ac, 0x9c35, 0xc8ad, 0x1, 0x1);
        gbc.writeMem(0xc8ad, { 0x0 });
        gbc.writeMem(0xeb29, { 0x72 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xe024, gbc.sp());
        EXPECT(0xeb2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xc8ad));
        EXPECT(0x72, gbc.readMem(0xeb29));
        // 72 02FA
        gbc.setState(0x895f, 0xefcf, 0x67f0, 0x12d5, 0x1123, 0xc7eb, 0x1, 0x0);
        gbc.writeMem(0x895f, { 0x72 });
        gbc.writeMem(0xc7eb, { 0x0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xefcf, gbc.sp());
        EXPECT(0x8960, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x895f));
        EXPECT(0x11, gbc.readMem(0xc7eb));
        // 72 02FB
        gbc.setState(0x9e5f, 0x7278, 0x9aa0, 0xd55c, 0x3cda, 0xb248, 0x1, 0x1);
        gbc.writeMem(0x9e5f, { 0x72 });
        gbc.writeMem(0xb248, { 0x0 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x7278, gbc.sp());
        EXPECT(0x9e60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x9e5f));
        EXPECT(0x3c, gbc.readMem(0xb248));
        // 72 02FC
        gbc.setState(0x477c, 0x3caa, 0x5f20, 0x1755, 0x1b64, 0xb1b3, 0x0, 0x0);
        gbc.writeMem(0x477c, { 0x72 });
        gbc.writeMem(0xb1b3, { 0x0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x3caa, gbc.sp());
        EXPECT(0x477d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xb1b3));
        // 72 0301
        gbc.setState(0xe202, 0x8bbd, 0x61c0, 0xe6b0, 0xdc2c, 0xc2d9, 0x1, 0x0);
        gbc.writeMem(0xc2d9, { 0x0 });
        gbc.writeMem(0xe202, { 0x72 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x8bbd, gbc.sp());
        EXPECT(0xe203, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xc2d9));
        EXPECT(0x72, gbc.readMem(0xe202));
        // 72 0303
        gbc.setState(0x7d19, 0x84c4, 0x14f0, 0x38c7, 0x72ba, 0xd89d, 0x1, 0x1);
        gbc.writeMem(0x7d19, { 0x72 });
        gbc.writeMem(0xd89d, { 0x0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x84c4, gbc.sp());
        EXPECT(0x7d1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xd89d));
        // 72 0305
        gbc.setState(0x4738, 0x503c, 0x4a80, 0x3607, 0xc74d, 0xde04, 0x0, 0x1);
        gbc.writeMem(0x4738, { 0x72 });
        gbc.writeMem(0xde04, { 0x0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x503c, gbc.sp());
        EXPECT(0x4739, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xde04));
        // 72 0306
        gbc.setState(0xaf52, 0x4b02, 0xa560, 0xb299, 0x4b03, 0x9d83, 0x0, 0x1);
        gbc.writeMem(0x9d83, { 0x0 });
        gbc.writeMem(0xaf52, { 0x72 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x4b02, gbc.sp());
        EXPECT(0xaf53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x9d83));
        EXPECT(0x72, gbc.readMem(0xaf52));
        // 72 0307
        gbc.setState(0xc3c9, 0x7c0c, 0x4df0, 0x9bc7, 0xbfd9, 0x8a82, 0x0, 0x1);
        gbc.writeMem(0x8a82, { 0x0 });
        gbc.writeMem(0xc3c9, { 0x72 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x7c0c, gbc.sp());
        EXPECT(0xc3ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x8a82));
        EXPECT(0x72, gbc.readMem(0xc3c9));
        // 72 0308
        gbc.setState(0x3aa1, 0xacc, 0xdab0, 0x2218, 0x488b, 0xc6c4, 0x0, 0x0);
        gbc.writeMem(0x3aa1, { 0x72 });
        gbc.writeMem(0xc6c4, { 0x0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xacc, gbc.sp());
        EXPECT(0x3aa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xc6c4));
        // 72 0309
        gbc.setState(0x871d, 0xcd8, 0xdaf0, 0x1136, 0x46eb, 0xcd10, 0x0, 0x0);
        gbc.writeMem(0x871d, { 0x72 });
        gbc.writeMem(0xcd10, { 0x0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xcd8, gbc.sp());
        EXPECT(0x871e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x871d));
        EXPECT(0x46, gbc.readMem(0xcd10));
        // 72 030C
        gbc.setState(0x4921, 0xf873, 0x3c50, 0x6660, 0x1108, 0xa663, 0x1, 0x0);
        gbc.writeMem(0x4921, { 0x72 });
        gbc.writeMem(0xa663, { 0x0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xf873, gbc.sp());
        EXPECT(0x4922, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xa663));
        // 72 030D
        gbc.setState(0xe305, 0x357c, 0x4d0, 0xd170, 0xd5cc, 0xc627, 0x0, 0x0);
        gbc.writeMem(0xc627, { 0x0 });
        gbc.writeMem(0xe305, { 0x72 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x357c, gbc.sp());
        EXPECT(0xe306, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xc627));
        EXPECT(0x72, gbc.readMem(0xe305));
        // 72 030E
        gbc.setState(0x3bbc, 0x302f, 0xc930, 0x9fc3, 0x222f, 0xdd15, 0x1, 0x1);
        gbc.writeMem(0x3bbc, { 0x72 });
        gbc.writeMem(0xdd15, { 0x0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x302f, gbc.sp());
        EXPECT(0x3bbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xdd15));
        // 72 0312
        gbc.setState(0x4209, 0x9907, 0x2890, 0xe51c, 0x4591, 0xf91e, 0x1, 0x1);
        gbc.writeMem(0x4209, { 0x72 });
        gbc.writeMem(0xf91e, { 0x0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x9907, gbc.sp());
        EXPECT(0x420a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0xf91e));
        // 72 0314
        gbc.setState(0xc6e8, 0xa3b, 0x3bd0, 0xc424, 0x13ef, 0xa1a3, 0x0, 0x0);
        gbc.writeMem(0xa1a3, { 0x0 });
        gbc.writeMem(0xc6e8, { 0x72 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xa3b, gbc.sp());
        EXPECT(0xc6e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xa1a3));
        EXPECT(0x72, gbc.readMem(0xc6e8));
        // 72 0316
        gbc.setState(0x5a4d, 0x84e6, 0xd560, 0x588f, 0xd0e9, 0xcbd9, 0x1, 0x0);
        gbc.writeMem(0x5a4d, { 0x72 });
        gbc.writeMem(0xcbd9, { 0x0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x84e6, gbc.sp());
        EXPECT(0x5a4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xcbd9));
        // 72 0319
        gbc.setState(0x7006, 0x14a0, 0x2b0, 0x6619, 0xbc70, 0xec57, 0x0, 0x1);
        gbc.writeMem(0x7006, { 0x72 });
        gbc.writeMem(0xec57, { 0x0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x14a0, gbc.sp());
        EXPECT(0x7007, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xec57));
        // 72 031B
        gbc.setState(0x384a, 0xa41, 0x5910, 0xd8a9, 0xc3a3, 0x912f, 0x1, 0x1);
        gbc.writeMem(0x384a, { 0x72 });
        gbc.writeMem(0x912f, { 0x0 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xa41, gbc.sp());
        EXPECT(0x384b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x912f));
        // 72 031D
        gbc.setState(0xa339, 0x9d3, 0xa7d0, 0x4119, 0xc7b1, 0xc928, 0x1, 0x0);
        gbc.writeMem(0xa339, { 0x72 });
        gbc.writeMem(0xc928, { 0x0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x9d3, gbc.sp());
        EXPECT(0xa33a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xa339));
        EXPECT(0xc7, gbc.readMem(0xc928));
        // 72 031F
        gbc.setState(0x26d4, 0x6578, 0x5370, 0x964, 0xa158, 0xc5c1, 0x0, 0x1);
        gbc.writeMem(0x26d4, { 0x72 });
        gbc.writeMem(0xc5c1, { 0x0 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x6578, gbc.sp());
        EXPECT(0x26d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xc5c1));
        // 72 0320
        gbc.setState(0x8cdc, 0x920c, 0x2550, 0x140a, 0x96c5, 0xa243, 0x1, 0x1);
        gbc.writeMem(0x8cdc, { 0x72 });
        gbc.writeMem(0xa243, { 0x0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x920c, gbc.sp());
        EXPECT(0x8cdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x8cdc));
        EXPECT(0x96, gbc.readMem(0xa243));
        // 72 0322
        gbc.setState(0x2136, 0x2c18, 0x48e0, 0x56d2, 0x92f9, 0xe34f, 0x1, 0x0);
        gbc.writeMem(0x2136, { 0x72 });
        gbc.writeMem(0xe34f, { 0x0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x2c18, gbc.sp());
        EXPECT(0x2137, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xe34f));
        // 72 0323
        gbc.setState(0xb58a, 0xe297, 0x3ae0, 0x8a39, 0x2162, 0x819f, 0x1, 0x1);
        gbc.writeMem(0x819f, { 0x0 });
        gbc.writeMem(0xb58a, { 0x72 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xe297, gbc.sp());
        EXPECT(0xb58b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x819f));
        EXPECT(0x72, gbc.readMem(0xb58a));
        // 72 0324
        gbc.setState(0x5c49, 0xd37f, 0x6090, 0x6b, 0x3f15, 0xa73f, 0x0, 0x0);
        gbc.writeMem(0x5c49, { 0x72 });
        gbc.writeMem(0xa73f, { 0x0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xd37f, gbc.sp());
        EXPECT(0x5c4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xa73f));
        // 72 0329
        gbc.setState(0x4bec, 0x642a, 0x78d0, 0x5bec, 0xb17f, 0x8410, 0x1, 0x1);
        gbc.writeMem(0x4bec, { 0x72 });
        gbc.writeMem(0x8410, { 0x0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x642a, gbc.sp());
        EXPECT(0x4bed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0x8410));
        // 72 032B
        gbc.setState(0x48c3, 0xd9e3, 0xc00, 0x507a, 0xfd59, 0xcdd0, 0x0, 0x1);
        gbc.writeMem(0x48c3, { 0x72 });
        gbc.writeMem(0xcdd0, { 0x0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xd9e3, gbc.sp());
        EXPECT(0x48c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xcdd0));
        // 72 032C
        gbc.setState(0x3606, 0xd631, 0xd410, 0xbd2, 0x9ac4, 0xb9ef, 0x1, 0x1);
        gbc.writeMem(0x3606, { 0x72 });
        gbc.writeMem(0xb9ef, { 0x0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xd631, gbc.sp());
        EXPECT(0x3607, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xb9ef));
        // 72 032E
        gbc.setState(0x6e95, 0xf650, 0x380, 0xdcb1, 0x1846, 0xecdb, 0x1, 0x0);
        gbc.writeMem(0x6e95, { 0x72 });
        gbc.writeMem(0xecdb, { 0x0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf650, gbc.sp());
        EXPECT(0x6e96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xecdb));
        // 72 032F
        gbc.setState(0x3846, 0xe36d, 0xd610, 0x2f6c, 0xa944, 0x8770, 0x1, 0x0);
        gbc.writeMem(0x3846, { 0x72 });
        gbc.writeMem(0x8770, { 0x0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe36d, gbc.sp());
        EXPECT(0x3847, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0x8770));
        // 72 0331
        gbc.setState(0x5a91, 0xa5e1, 0x3900, 0xad2e, 0xd462, 0x8dba, 0x0, 0x1);
        gbc.writeMem(0x5a91, { 0x72 });
        gbc.writeMem(0x8dba, { 0x0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xa5e1, gbc.sp());
        EXPECT(0x5a92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x8dba));
        // 72 0334
        gbc.setState(0xcbaa, 0x4164, 0xfd40, 0xc993, 0x78f, 0xa316, 0x1, 0x1);
        gbc.writeMem(0xa316, { 0x0 });
        gbc.writeMem(0xcbaa, { 0x72 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x4164, gbc.sp());
        EXPECT(0xcbab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xa316));
        EXPECT(0x72, gbc.readMem(0xcbaa));
        // 72 0335
        gbc.setState(0x259, 0x232a, 0x1ed0, 0xb893, 0x7fdf, 0x9789, 0x1, 0x1);
        gbc.writeMem(0x259, { 0x72 });
        gbc.writeMem(0x9789, { 0x0 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x232a, gbc.sp());
        EXPECT(0x25a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0x9789));
        // 72 033A
        gbc.setState(0x384f, 0xe449, 0xbe30, 0x4a89, 0xdeec, 0xd3a2, 0x0, 0x0);
        gbc.writeMem(0x384f, { 0x72 });
        gbc.writeMem(0xd3a2, { 0x0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xe449, gbc.sp());
        EXPECT(0x3850, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xd3a2));
        // 72 033C
        gbc.setState(0xea64, 0xee8f, 0xa340, 0x90c, 0x1425, 0x94a1, 0x1, 0x0);
        gbc.writeMem(0x94a1, { 0x0 });
        gbc.writeMem(0xea64, { 0x72 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xee8f, gbc.sp());
        EXPECT(0xea65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x94a1));
        EXPECT(0x72, gbc.readMem(0xea64));
        // 72 033E
        gbc.setState(0x94a5, 0xd3ed, 0x8c60, 0xe6fe, 0xfca9, 0xfb35, 0x0, 0x1);
        gbc.writeMem(0x94a5, { 0x72 });
        gbc.writeMem(0xfb35, { 0x0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xd3ed, gbc.sp());
        EXPECT(0x94a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x94a5));
        EXPECT(0xfc, gbc.readMem(0xfb35));
        // 72 033F
        gbc.setState(0xdd8b, 0x1989, 0xf6e0, 0x75bc, 0xa72e, 0xa45d, 0x0, 0x1);
        gbc.writeMem(0xa45d, { 0x0 });
        gbc.writeMem(0xdd8b, { 0x72 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x1989, gbc.sp());
        EXPECT(0xdd8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa45d));
        EXPECT(0x72, gbc.readMem(0xdd8b));
        // 72 0342
        gbc.setState(0xbc53, 0x226c, 0x1bd0, 0xa3a, 0x6f2c, 0x9c59, 0x1, 0x1);
        gbc.writeMem(0x9c59, { 0x0 });
        gbc.writeMem(0xbc53, { 0x72 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x226c, gbc.sp());
        EXPECT(0xbc54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0x9c59));
        EXPECT(0x72, gbc.readMem(0xbc53));
        // 72 0349
        gbc.setState(0x8554, 0xa420, 0x60b0, 0x1d98, 0xcd47, 0xc32a, 0x1, 0x1);
        gbc.writeMem(0x8554, { 0x72 });
        gbc.writeMem(0xc32a, { 0x0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xa420, gbc.sp());
        EXPECT(0x8555, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x8554));
        EXPECT(0xcd, gbc.readMem(0xc32a));
        // 72 034C
        gbc.setState(0x7bb3, 0xadba, 0xdb10, 0x1aeb, 0xfc8f, 0xcd0b, 0x1, 0x1);
        gbc.writeMem(0x7bb3, { 0x72 });
        gbc.writeMem(0xcd0b, { 0x0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xadba, gbc.sp());
        EXPECT(0x7bb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xcd0b));
        // 72 034D
        gbc.setState(0x899a, 0xd5f, 0x9760, 0xd8b8, 0x2a75, 0xe24f, 0x1, 0x0);
        gbc.writeMem(0x899a, { 0x72 });
        gbc.writeMem(0xe24f, { 0x0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xd5f, gbc.sp());
        EXPECT(0x899b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x899a));
        EXPECT(0x2a, gbc.readMem(0xe24f));
        // 72 0351
        gbc.setState(0x4de3, 0xd1c8, 0x2060, 0xaebd, 0xd016, 0xee79, 0x0, 0x0);
        gbc.writeMem(0x4de3, { 0x72 });
        gbc.writeMem(0xee79, { 0x0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xd1c8, gbc.sp());
        EXPECT(0x4de4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xee79));
        // 72 0352
        gbc.setState(0xdd3a, 0x8847, 0xc3a0, 0x75c5, 0x8527, 0x91c2, 0x0, 0x0);
        gbc.writeMem(0x91c2, { 0x0 });
        gbc.writeMem(0xdd3a, { 0x72 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x8847, gbc.sp());
        EXPECT(0xdd3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x91c2));
        EXPECT(0x72, gbc.readMem(0xdd3a));
        // 72 0353
        gbc.setState(0xda6f, 0x166d, 0xb390, 0x26be, 0x12e6, 0xfc92, 0x1, 0x1);
        gbc.writeMem(0xda6f, { 0x72 });
        gbc.writeMem(0xfc92, { 0x0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x166d, gbc.sp());
        EXPECT(0xda70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xda6f));
        EXPECT(0x12, gbc.readMem(0xfc92));
        // 72 0357
        gbc.setState(0x6a4f, 0xd020, 0xbe00, 0xabb0, 0x465d, 0xbdfe, 0x0, 0x1);
        gbc.writeMem(0x6a4f, { 0x72 });
        gbc.writeMem(0xbdfe, { 0x0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xd020, gbc.sp());
        EXPECT(0x6a50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xbdfe));
        // 72 0358
        gbc.setState(0x4bcf, 0xfaa0, 0x2cc0, 0xcb7b, 0x2315, 0x8bac, 0x0, 0x0);
        gbc.writeMem(0x4bcf, { 0x72 });
        gbc.writeMem(0x8bac, { 0x0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xfaa0, gbc.sp());
        EXPECT(0x4bd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0x8bac));
        // 72 035A
        gbc.setState(0x728d, 0x20aa, 0x39a0, 0x2aab, 0x64fb, 0xc41e, 0x0, 0x1);
        gbc.writeMem(0x728d, { 0x72 });
        gbc.writeMem(0xc41e, { 0x0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x20aa, gbc.sp());
        EXPECT(0x728e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xc41e));
        // 72 035B
        gbc.setState(0x2cb1, 0xc34a, 0x2320, 0x9c76, 0x2f92, 0xcc88, 0x0, 0x1);
        gbc.writeMem(0x2cb1, { 0x72 });
        gbc.writeMem(0xcc88, { 0x0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xc34a, gbc.sp());
        EXPECT(0x2cb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xcc88));
        // 72 035D
        gbc.setState(0x739a, 0x28a2, 0xbc60, 0xdb8e, 0xab85, 0xc3de, 0x1, 0x1);
        gbc.writeMem(0x739a, { 0x72 });
        gbc.writeMem(0xc3de, { 0x0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x28a2, gbc.sp());
        EXPECT(0x739b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xc3de));
        // 72 035F
        gbc.setState(0x76e4, 0x7004, 0xb430, 0x837d, 0xf329, 0xb0a7, 0x0, 0x0);
        gbc.writeMem(0x76e4, { 0x72 });
        gbc.writeMem(0xb0a7, { 0x0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x7004, gbc.sp());
        EXPECT(0x76e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xb0a7));
        // 72 0363
        gbc.setState(0x219a, 0xe345, 0x4490, 0x51ae, 0xb5b9, 0xec51, 0x0, 0x1);
        gbc.writeMem(0x219a, { 0x72 });
        gbc.writeMem(0xec51, { 0x0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xe345, gbc.sp());
        EXPECT(0x219b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xec51));
        // 72 0364
        gbc.setState(0xebd0, 0x8965, 0x1d80, 0xe4c8, 0xebd5, 0xbb3a, 0x0, 0x0);
        gbc.writeMem(0xbb3a, { 0x0 });
        gbc.writeMem(0xebd0, { 0x72 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x8965, gbc.sp());
        EXPECT(0xebd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0xbb3a));
        EXPECT(0x72, gbc.readMem(0xebd0));
        // 72 0369
        gbc.setState(0x6ed9, 0xb0c4, 0x9060, 0xdc47, 0x710e, 0xe7b8, 0x1, 0x1);
        gbc.writeMem(0x6ed9, { 0x72 });
        gbc.writeMem(0xe7b8, { 0x0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xb0c4, gbc.sp());
        EXPECT(0x6eda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xe7b8));
        // 72 036B
        gbc.setState(0x4c12, 0xa46c, 0x2610, 0xfa2c, 0xce17, 0xcebb, 0x0, 0x0);
        gbc.writeMem(0x4c12, { 0x72 });
        gbc.writeMem(0xcebb, { 0x0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xa46c, gbc.sp());
        EXPECT(0x4c13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xcebb));
        // 72 036E
        gbc.setState(0x68b4, 0x897a, 0x8ac0, 0x37eb, 0x127, 0xff5b, 0x1, 0x1);
        gbc.writeMem(0x68b4, { 0x72 });
        gbc.writeMem(0xff5b, { 0x0 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x897a, gbc.sp());
        EXPECT(0x68b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0xff5b));
        // 72 036F
        gbc.setState(0x6caf, 0x81bb, 0xa880, 0xc566, 0x7a88, 0xcdb6, 0x1, 0x0);
        gbc.writeMem(0x6caf, { 0x72 });
        gbc.writeMem(0xcdb6, { 0x0 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x81bb, gbc.sp());
        EXPECT(0x6cb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xcdb6));
        // 72 0371
        gbc.setState(0xa13e, 0xd841, 0xb6d0, 0x2aa1, 0x2736, 0x9cee, 0x1, 0x0);
        gbc.writeMem(0x9cee, { 0x0 });
        gbc.writeMem(0xa13e, { 0x72 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xd841, gbc.sp());
        EXPECT(0xa13f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x9cee));
        EXPECT(0x72, gbc.readMem(0xa13e));
        // 72 0372
        gbc.setState(0x6612, 0x61eb, 0xadd0, 0x941e, 0x842c, 0xbf88, 0x1, 0x0);
        gbc.writeMem(0x6612, { 0x72 });
        gbc.writeMem(0xbf88, { 0x0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x61eb, gbc.sp());
        EXPECT(0x6613, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0xbf88));
        // 72 0374
        gbc.setState(0xc465, 0x3729, 0x3c0, 0xdcee, 0x4a37, 0xde8d, 0x0, 0x1);
        gbc.writeMem(0xc465, { 0x72 });
        gbc.writeMem(0xde8d, { 0x0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x3729, gbc.sp());
        EXPECT(0xc466, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xc465));
        EXPECT(0x4a, gbc.readMem(0xde8d));
        // 72 0375
        gbc.setState(0xcc8a, 0x9f2e, 0x7220, 0x2d83, 0x5b62, 0xb1ae, 0x0, 0x1);
        gbc.writeMem(0xb1ae, { 0x0 });
        gbc.writeMem(0xcc8a, { 0x72 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x9f2e, gbc.sp());
        EXPECT(0xcc8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xb1ae));
        EXPECT(0x72, gbc.readMem(0xcc8a));
        // 72 0378
        gbc.setState(0xd4a9, 0xdec9, 0xf080, 0x73d1, 0x13bf, 0xefc2, 0x1, 0x0);
        gbc.writeMem(0xd4a9, { 0x72 });
        gbc.writeMem(0xefc2, { 0x0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xdec9, gbc.sp());
        EXPECT(0xd4aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xd4a9));
        EXPECT(0x13, gbc.readMem(0xefc2));
        // 72 037A
        gbc.setState(0x99e1, 0xf14, 0x1a30, 0x63d2, 0x8206, 0xe045, 0x1, 0x1);
        gbc.writeMem(0x99e1, { 0x72 });
        gbc.writeMem(0xe045, { 0x0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xf14, gbc.sp());
        EXPECT(0x99e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x99e1));
        EXPECT(0x82, gbc.readMem(0xe045));
        // 72 037C
        gbc.setState(0x9c7a, 0xaa6c, 0xd4e0, 0xc958, 0xc9ea, 0xeb51, 0x1, 0x1);
        gbc.writeMem(0x9c7a, { 0x72 });
        gbc.writeMem(0xeb51, { 0x0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xaa6c, gbc.sp());
        EXPECT(0x9c7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x9c7a));
        EXPECT(0xc9, gbc.readMem(0xeb51));
        // 72 0382
        gbc.setState(0x52b, 0xdb55, 0x6370, 0x7bbe, 0xf1, 0x7dd8, 0x1, 0x0);
        gbc.writeMem(0x52b, { 0x72 });
        gbc.writeMem(0x7dd8, { 0x0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xdb55, gbc.sp());
        EXPECT(0x52c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 72 0384
        gbc.setState(0x6e05, 0x5c24, 0x8d20, 0x3fec, 0x78dd, 0xe731, 0x1, 0x1);
        gbc.writeMem(0x6e05, { 0x72 });
        gbc.writeMem(0xe731, { 0x0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x5c24, gbc.sp());
        EXPECT(0x6e06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xe731));
        // 72 0385
        gbc.setState(0xd82e, 0x57ad, 0xf2a0, 0xc864, 0x5858, 0x8827, 0x1, 0x0);
        gbc.writeMem(0x8827, { 0x0 });
        gbc.writeMem(0xd82e, { 0x72 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x57ad, gbc.sp());
        EXPECT(0xd82f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x8827));
        EXPECT(0x72, gbc.readMem(0xd82e));
        // 72 0389
        gbc.setState(0xee9b, 0x36bd, 0x81f0, 0x6041, 0x5a9c, 0xe8aa, 0x1, 0x0);
        gbc.writeMem(0xe8aa, { 0x0 });
        gbc.writeMem(0xee9b, { 0x72 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x36bd, gbc.sp());
        EXPECT(0xee9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0xe8aa));
        EXPECT(0x72, gbc.readMem(0xee9b));
        // 72 038A
        gbc.setState(0x972a, 0x738f, 0x7910, 0x7950, 0x1914, 0xcdcf, 0x1, 0x1);
        gbc.writeMem(0x972a, { 0x72 });
        gbc.writeMem(0xcdcf, { 0x0 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x738f, gbc.sp());
        EXPECT(0x972b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x972a));
        EXPECT(0x19, gbc.readMem(0xcdcf));
        // 72 038C
        gbc.setState(0x6836, 0x5d7b, 0xb040, 0x8713, 0x736c, 0xf201, 0x1, 0x0);
        gbc.writeMem(0x6836, { 0x72 });
        gbc.writeMem(0xf201, { 0x0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x5d7b, gbc.sp());
        EXPECT(0x6837, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xf201));
        // 72 038F
        gbc.setState(0x6cd0, 0x37ca, 0x3a50, 0x8c0f, 0xfef5, 0xa05b, 0x0, 0x0);
        gbc.writeMem(0x6cd0, { 0x72 });
        gbc.writeMem(0xa05b, { 0x0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x37ca, gbc.sp());
        EXPECT(0x6cd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xa05b));
        // 72 0390
        gbc.setState(0xefdd, 0x3b76, 0xcd60, 0xa92e, 0xd1b6, 0xda31, 0x1, 0x1);
        gbc.writeMem(0xda31, { 0x0 });
        gbc.writeMem(0xefdd, { 0x72 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x3b76, gbc.sp());
        EXPECT(0xefde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xda31));
        EXPECT(0x72, gbc.readMem(0xefdd));
        // 72 0394
        gbc.setState(0x74e8, 0xd3ea, 0x7dc0, 0xc81d, 0x5d8c, 0x86c2, 0x1, 0x1);
        gbc.writeMem(0x74e8, { 0x72 });
        gbc.writeMem(0x86c2, { 0x0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xd3ea, gbc.sp());
        EXPECT(0x74e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x86c2));
        // 72 0396
        gbc.setState(0x3ec8, 0xc858, 0x7260, 0x38f, 0xde19, 0xf348, 0x0, 0x1);
        gbc.writeMem(0x3ec8, { 0x72 });
        gbc.writeMem(0xf348, { 0x0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xc858, gbc.sp());
        EXPECT(0x3ec9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xf348));
        // 72 039A
        gbc.setState(0x1865, 0x694f, 0xf720, 0x5bc0, 0xba97, 0xfa53, 0x0, 0x1);
        gbc.writeMem(0x1865, { 0x72 });
        gbc.writeMem(0xfa53, { 0x0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x694f, gbc.sp());
        EXPECT(0x1866, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xfa53));
        // 72 039B
        gbc.setState(0x5452, 0xf048, 0x5380, 0xffbf, 0x8275, 0xb06a, 0x0, 0x0);
        gbc.writeMem(0x5452, { 0x72 });
        gbc.writeMem(0xb06a, { 0x0 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xf048, gbc.sp());
        EXPECT(0x5453, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xb06a));
        // 72 039C
        gbc.setState(0xbd13, 0xec12, 0x6770, 0xb5ab, 0x8a98, 0xfd8d, 0x0, 0x1);
        gbc.writeMem(0xbd13, { 0x72 });
        gbc.writeMem(0xfd8d, { 0x0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xec12, gbc.sp());
        EXPECT(0xbd14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xbd13));
        EXPECT(0x8a, gbc.readMem(0xfd8d));
        // 72 039E
        gbc.setState(0x3daa, 0xa6a9, 0x8730, 0x2c6e, 0x7271, 0xecde, 0x1, 0x1);
        gbc.writeMem(0x3daa, { 0x72 });
        gbc.writeMem(0xecde, { 0x0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xa6a9, gbc.sp());
        EXPECT(0x3dab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xecde));
        // 72 03A0
        gbc.setState(0x3a9, 0x7bf, 0x9540, 0x591d, 0xcf25, 0xfdf8, 0x1, 0x1);
        gbc.writeMem(0x3a9, { 0x72 });
        gbc.writeMem(0xfdf8, { 0x0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x7bf, gbc.sp());
        EXPECT(0x3aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xfdf8));
        // 72 03A3
        gbc.setState(0xe928, 0x6230, 0xb220, 0xd5ce, 0x8052, 0xa68f, 0x0, 0x0);
        gbc.writeMem(0xa68f, { 0x0 });
        gbc.writeMem(0xe928, { 0x72 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x6230, gbc.sp());
        EXPECT(0xe929, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xa68f));
        EXPECT(0x72, gbc.readMem(0xe928));
        // 72 03A4
        gbc.setState(0xc374, 0x27be, 0xbed0, 0x31e0, 0xc952, 0xd82e, 0x1, 0x0);
        gbc.writeMem(0xc374, { 0x72 });
        gbc.writeMem(0xd82e, { 0x0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x27be, gbc.sp());
        EXPECT(0xc375, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xc374));
        EXPECT(0xc9, gbc.readMem(0xd82e));
        // 72 03A5
        gbc.setState(0xc20d, 0xa38a, 0xed70, 0xd8c1, 0x3679, 0xa986, 0x0, 0x1);
        gbc.writeMem(0xa986, { 0x0 });
        gbc.writeMem(0xc20d, { 0x72 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xa38a, gbc.sp());
        EXPECT(0xc20e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xa986));
        EXPECT(0x72, gbc.readMem(0xc20d));
        // 72 03A6
        gbc.setState(0x2aaa, 0xecf5, 0x5950, 0xea81, 0xf39e, 0xbb3a, 0x1, 0x1);
        gbc.writeMem(0x2aaa, { 0x72 });
        gbc.writeMem(0xbb3a, { 0x0 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xecf5, gbc.sp());
        EXPECT(0x2aab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xbb3a));
        // 72 03A8
        gbc.setState(0x3216, 0x18c4, 0xa400, 0xa17a, 0x61aa, 0x980a, 0x1, 0x0);
        gbc.writeMem(0x3216, { 0x72 });
        gbc.writeMem(0x980a, { 0x0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x18c4, gbc.sp());
        EXPECT(0x3217, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x980a));
        // 72 03A9
        gbc.setState(0xdc58, 0xf961, 0xcaf0, 0x1dbf, 0x962b, 0xb361, 0x0, 0x1);
        gbc.writeMem(0xb361, { 0x0 });
        gbc.writeMem(0xdc58, { 0x72 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xf961, gbc.sp());
        EXPECT(0xdc59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xb361));
        EXPECT(0x72, gbc.readMem(0xdc58));
        // 72 03AB
        gbc.setState(0xb356, 0x41e3, 0xd140, 0x95fd, 0xd325, 0xbdfa, 0x1, 0x0);
        gbc.writeMem(0xb356, { 0x72 });
        gbc.writeMem(0xbdfa, { 0x0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x41e3, gbc.sp());
        EXPECT(0xb357, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xb356));
        EXPECT(0xd3, gbc.readMem(0xbdfa));
        // 72 03AD
        gbc.setState(0xa368, 0x536f, 0xdd50, 0xb70b, 0x116c, 0xd652, 0x0, 0x1);
        gbc.writeMem(0xa368, { 0x72 });
        gbc.writeMem(0xd652, { 0x0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x536f, gbc.sp());
        EXPECT(0xa369, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xa368));
        EXPECT(0x11, gbc.readMem(0xd652));
        // 72 03AE
        gbc.setState(0x91d8, 0xddc8, 0x8bb0, 0x2433, 0x6c45, 0xcc20, 0x1, 0x0);
        gbc.writeMem(0x91d8, { 0x72 });
        gbc.writeMem(0xcc20, { 0x0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xddc8, gbc.sp());
        EXPECT(0x91d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x91d8));
        EXPECT(0x6c, gbc.readMem(0xcc20));
        // 72 03AF
        gbc.setState(0xeaf7, 0xbe38, 0x3d20, 0xd35c, 0xb2c7, 0xcb3a, 0x0, 0x1);
        gbc.writeMem(0xcb3a, { 0x0 });
        gbc.writeMem(0xeaf7, { 0x72 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xbe38, gbc.sp());
        EXPECT(0xeaf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xcb3a));
        EXPECT(0x72, gbc.readMem(0xeaf7));
        // 72 03B0
        gbc.setState(0x8471, 0x27a1, 0x2ba0, 0x1d31, 0xd9ba, 0x8cff, 0x1, 0x0);
        gbc.writeMem(0x8471, { 0x72 });
        gbc.writeMem(0x8cff, { 0x0 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x27a1, gbc.sp());
        EXPECT(0x8472, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x8471));
        EXPECT(0xd9, gbc.readMem(0x8cff));
        // 72 03B3
        gbc.setState(0x6492, 0xe118, 0x6f20, 0xbeff, 0xc776, 0xcc0a, 0x0, 0x1);
        gbc.writeMem(0x6492, { 0x72 });
        gbc.writeMem(0xcc0a, { 0x0 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xe118, gbc.sp());
        EXPECT(0x6493, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xcc0a));
        // 72 03B4
        gbc.setState(0xc367, 0x1901, 0x1ec0, 0x15d4, 0x9ffd, 0xe268, 0x1, 0x0);
        gbc.writeMem(0xc367, { 0x72 });
        gbc.writeMem(0xe268, { 0x0 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x1901, gbc.sp());
        EXPECT(0xc368, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xc367));
        EXPECT(0x9f, gbc.readMem(0xe268));
        // 72 03B5
        gbc.setState(0x7553, 0xc75a, 0xe7e0, 0x7a02, 0x2c0e, 0xf9f7, 0x0, 0x1);
        gbc.writeMem(0x7553, { 0x72 });
        gbc.writeMem(0xf9f7, { 0x0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xc75a, gbc.sp());
        EXPECT(0x7554, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xf9f7));
        // 72 03B7
        gbc.setState(0xee4d, 0x2e54, 0xe2c0, 0x1993, 0x79af, 0xc462, 0x1, 0x1);
        gbc.writeMem(0xc462, { 0x0 });
        gbc.writeMem(0xee4d, { 0x72 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2e54, gbc.sp());
        EXPECT(0xee4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xc462));
        EXPECT(0x72, gbc.readMem(0xee4d));
        // 72 03B8
        gbc.setState(0x47c2, 0x155e, 0xd2b0, 0xadca, 0xa2f, 0x9d8b, 0x0, 0x0);
        gbc.writeMem(0x47c2, { 0x72 });
        gbc.writeMem(0x9d8b, { 0x0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x155e, gbc.sp());
        EXPECT(0x47c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x9d8b));
        // 72 03B9
        gbc.setState(0x32e3, 0xfbc, 0x44f0, 0x8517, 0x9afa, 0xfe51, 0x0, 0x1);
        gbc.writeMem(0x32e3, { 0x72 });
        gbc.writeMem(0xfe51, { 0x0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xfbc, gbc.sp());
        EXPECT(0x32e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xfe51));
        // 72 03BC
        gbc.setState(0x39e0, 0x48eb, 0x5d20, 0x4313, 0x7041, 0xc92e, 0x1, 0x1);
        gbc.writeMem(0x39e0, { 0x72 });
        gbc.writeMem(0xc92e, { 0x0 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x48eb, gbc.sp());
        EXPECT(0x39e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xc92e));
        // 72 03BE
        gbc.setState(0xd85, 0x8387, 0xdee0, 0x31d5, 0xbd77, 0xb587, 0x0, 0x1);
        gbc.writeMem(0xd85, { 0x72 });
        gbc.writeMem(0xb587, { 0x0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x8387, gbc.sp());
        EXPECT(0xd86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xb587));
        // 72 03BF
        gbc.setState(0x7ef2, 0x2d72, 0x6500, 0x1df5, 0xbee, 0xfaef, 0x1, 0x1);
        gbc.writeMem(0x7ef2, { 0x72 });
        gbc.writeMem(0xfaef, { 0x0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x2d72, gbc.sp());
        EXPECT(0x7ef3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xfaef));
        // 72 03C0
        gbc.setState(0x9b72, 0x55cc, 0xc370, 0x6ec0, 0x8e72, 0xaa4c, 0x0, 0x0);
        gbc.writeMem(0x9b72, { 0x72 });
        gbc.writeMem(0xaa4c, { 0x0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x55cc, gbc.sp());
        EXPECT(0x9b73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x9b72));
        EXPECT(0x8e, gbc.readMem(0xaa4c));
        // 72 03C1
        gbc.setState(0xc84f, 0xd6c6, 0x690, 0x352f, 0x151b, 0xfd70, 0x0, 0x0);
        gbc.writeMem(0xc84f, { 0x72 });
        gbc.writeMem(0xfd70, { 0x0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xd6c6, gbc.sp());
        EXPECT(0xc850, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xc84f));
        EXPECT(0x15, gbc.readMem(0xfd70));
        // 72 03C2
        gbc.setState(0x9db8, 0x3866, 0xda80, 0xf870, 0x425b, 0x86f4, 0x1, 0x1);
        gbc.writeMem(0x86f4, { 0x0 });
        gbc.writeMem(0x9db8, { 0x72 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x3866, gbc.sp());
        EXPECT(0x9db9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x86f4));
        EXPECT(0x72, gbc.readMem(0x9db8));
        // 72 03C8
        gbc.setState(0x7e52, 0x6032, 0x89c0, 0xbeee, 0xed04, 0x8401, 0x0, 0x0);
        gbc.writeMem(0x7e52, { 0x72 });
        gbc.writeMem(0x8401, { 0x0 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x6032, gbc.sp());
        EXPECT(0x7e53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0x8401));
        // 72 03CB
        gbc.setState(0x3936, 0x303b, 0xd030, 0x68b0, 0xb94f, 0xa5c8, 0x0, 0x1);
        gbc.writeMem(0x3936, { 0x72 });
        gbc.writeMem(0xa5c8, { 0x0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x303b, gbc.sp());
        EXPECT(0x3937, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xa5c8));
        // 72 03CC
        gbc.setState(0x4085, 0x3cb5, 0x7ba0, 0x99b, 0xe035, 0xc04a, 0x0, 0x0);
        gbc.writeMem(0x4085, { 0x72 });
        gbc.writeMem(0xc04a, { 0x0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x3cb5, gbc.sp());
        EXPECT(0x4086, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xc04a));
        // 72 03CE
        gbc.setState(0x45a6, 0xbb59, 0xb0b0, 0xb2dd, 0xd712, 0xed50, 0x0, 0x1);
        gbc.writeMem(0x45a6, { 0x72 });
        gbc.writeMem(0xed50, { 0x0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xbb59, gbc.sp());
        EXPECT(0x45a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xed50));
        // 72 03CF
        gbc.setState(0xc3b4, 0xb0b8, 0xbe90, 0xa0f7, 0xfa4f, 0xed4c, 0x1, 0x0);
        gbc.writeMem(0xc3b4, { 0x72 });
        gbc.writeMem(0xed4c, { 0x0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xb0b8, gbc.sp());
        EXPECT(0xc3b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xc3b4));
        EXPECT(0xfa, gbc.readMem(0xed4c));
        // 72 03D1
        gbc.setState(0x9db2, 0x38f9, 0x1640, 0x8d1a, 0xb043, 0xfa4f, 0x1, 0x0);
        gbc.writeMem(0x9db2, { 0x72 });
        gbc.writeMem(0xfa4f, { 0x0 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x38f9, gbc.sp());
        EXPECT(0x9db3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x9db2));
        EXPECT(0xb0, gbc.readMem(0xfa4f));
        // 72 03D2
        gbc.setState(0x6ede, 0xdb24, 0xa770, 0xdaf9, 0x76ec, 0xcf93, 0x0, 0x0);
        gbc.writeMem(0x6ede, { 0x72 });
        gbc.writeMem(0xcf93, { 0x0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xdb24, gbc.sp());
        EXPECT(0x6edf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xcf93));
        // 72 03D3
        gbc.setState(0xe836, 0x7af5, 0xb520, 0x71fb, 0x26fd, 0x8a2c, 0x0, 0x0);
        gbc.writeMem(0x8a2c, { 0x0 });
        gbc.writeMem(0xe836, { 0x72 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x7af5, gbc.sp());
        EXPECT(0xe837, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x8a2c));
        EXPECT(0x72, gbc.readMem(0xe836));
        // 72 03D4
        gbc.setState(0x176c, 0xb77d, 0xf4c0, 0x54c4, 0x6605, 0xf295, 0x0, 0x1);
        gbc.writeMem(0x176c, { 0x72 });
        gbc.writeMem(0xf295, { 0x0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xb77d, gbc.sp());
        EXPECT(0x176d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xf295));
        // 72 03D8
        gbc.setState(0x8d8c, 0x3afe, 0xcac0, 0x5123, 0x7044, 0xb469, 0x1, 0x0);
        gbc.writeMem(0x8d8c, { 0x72 });
        gbc.writeMem(0xb469, { 0x0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x3afe, gbc.sp());
        EXPECT(0x8d8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x8d8c));
        EXPECT(0x70, gbc.readMem(0xb469));
        // 72 03DA
        gbc.setState(0x3611, 0xe9ad, 0x21e0, 0x310, 0x5eb, 0xf423, 0x1, 0x0);
        gbc.writeMem(0x3611, { 0x72 });
        gbc.writeMem(0xf423, { 0x0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xe9ad, gbc.sp());
        EXPECT(0x3612, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xf423));
        // 72 03DC
        gbc.setState(0x7a9a, 0xddc5, 0x4ae0, 0xac14, 0x749a, 0xbd16, 0x1, 0x0);
        gbc.writeMem(0x7a9a, { 0x72 });
        gbc.writeMem(0xbd16, { 0x0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xddc5, gbc.sp());
        EXPECT(0x7a9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xbd16));
        // 72 03DE
        gbc.setState(0xd634, 0x7c29, 0x36b0, 0x9648, 0x936c, 0xf171, 0x1, 0x1);
        gbc.writeMem(0xd634, { 0x72 });
        gbc.writeMem(0xf171, { 0x0 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x7c29, gbc.sp());
        EXPECT(0xd635, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xd634));
        EXPECT(0x93, gbc.readMem(0xf171));
        // 72 03E0
        gbc.setState(0x9dcd, 0x3b42, 0x3d00, 0x3f7e, 0x8c2b, 0xb82d, 0x1, 0x0);
        gbc.writeMem(0x9dcd, { 0x72 });
        gbc.writeMem(0xb82d, { 0x0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x3b42, gbc.sp());
        EXPECT(0x9dce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x9dcd));
        EXPECT(0x8c, gbc.readMem(0xb82d));
        // 72 03E5
        gbc.setState(0xc9ab, 0x486e, 0x580, 0x101f, 0xfbc9, 0xdc10, 0x1, 0x0);
        gbc.writeMem(0xc9ab, { 0x72 });
        gbc.writeMem(0xdc10, { 0x0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x486e, gbc.sp());
        EXPECT(0xc9ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xc9ab));
        EXPECT(0xfb, gbc.readMem(0xdc10));
        // 72 03E7
        gbc.setState(0xeacd, 0x1dba, 0x6740, 0x4ac8, 0x56cd, 0xaf2d, 0x1, 0x0);
        gbc.writeMem(0xaf2d, { 0x0 });
        gbc.writeMem(0xeacd, { 0x72 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x1dba, gbc.sp());
        EXPECT(0xeace, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xaf2d));
        EXPECT(0x72, gbc.readMem(0xeacd));
    }
