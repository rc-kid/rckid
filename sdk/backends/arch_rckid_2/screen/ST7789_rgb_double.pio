; ST7789 continuous driver for RGB colors (565)
; 
; The simplest of the programs that simply stores the bits as they arrive in the pixels. 

.program ST7789_rgb_double
; set aside 1 bit for the WRX 
.side_set 1

.wrap_target
    pull            side 0 
    mov x, osr      side 0
    out pins, 8     side 0
    nop             side 1 [2]
    out pins, 8     side 0 [2]
    mov osr, x      side 1 [2]
    out pins, 8     side 0 [2]
    nop             side 1 [2]
    out pins, 8     side 0 [2]
    nop             side 1 [2]

% c-sdk {

#include "rckid/rckid.h"

inline void ST7789_rgb_double_program_init(PIO pio, uint sm, uint offset, uint wrPin, uint dataPin) {
    // claim the resources required for the continuous mode
    pio_gpio_init(pio, wrPin);
    pio_sm_set_consecutive_pindirs(pio, sm, wrPin, 1, true);
    pio_gpio_init(pio, dataPin);
    pio_gpio_init(pio, dataPin + 1);
    pio_gpio_init(pio, dataPin + 2);
    pio_gpio_init(pio, dataPin + 3);
    pio_gpio_init(pio, dataPin + 4);
    pio_gpio_init(pio, dataPin + 5);
    pio_gpio_init(pio, dataPin + 6);
    pio_gpio_init(pio, dataPin + 7);
    pio_sm_set_consecutive_pindirs(pio, sm, dataPin, 8, true);
    pio_sm_config c = ST7789_rgb_double_program_get_default_config(offset);
    sm_config_set_sideset_pins(&c, wrPin);
    sm_config_set_out_pins(&c, dataPin, 8);
    sm_config_set_fifo_join(&c, PIO_FIFO_JOIN_TX);
    // disable autopull
    sm_config_set_out_shift(&c, false, false, 32);
    pio_sm_init(pio, sm, offset, &c);
    // increase pio clock by three (3 insns per cycle)
    pio_set_clock_speed(pio, sm, RP_ST7789_BAUDRATE * 6);
}

%}
